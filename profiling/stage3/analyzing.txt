- STATUS
Запросы статуса теперь обрабатываются отдельно от запросов, работающих с диском (продолжительных задач). Поэтому по
сравнению с предыдущим этапом запросы статуса обрабатываются быстро независимо от паралельно идущих запросов на
относительно продолжительные задачи (PUT, GET, DELETE). В профилировании рассмотрен случай с параллельными GET
запросами, т.к. в моем случае при rps свыше 1k заметно как просаживается скорость обработки GET запросов.
- GET, PUT, DELETE
Теперь обработка запросов происходит асинхронно отдельным пулом потоков. Изменения были рассмотрены на PUT запросе.
При 4 воркерах и 4 соединениях блокирующий API работает быстрее (При 30 rps видна разница). Было предположение,
что просадка в скорости асинхронного API связана с постановкой запросов в очередь и разбором запросов воркерами.
Увеличив количество воркеров до 16 асинхронное API стало работать быстрее, но все равно не догнало блокирующий API.
Проблема не ясна, интересно узнать об этом.
- RANGE
При запросе диапазона ключей в 3 этапе данные не собираются в память и отправляются клиенту, а отправлются по частям.
Тем самым исключена проблема переполнения памяти при данном запросе.
