<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (172,265 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (123,155 samples, 71.49%)</title><rect x="10.0" y="339.0" width="843.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (123,155 samples, 71.49%)</title><rect x="10.0" y="323.0" width="843.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (123,155 samples, 71.49%)</title><rect x="10.0" y="307.0" width="843.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (974 samples, 0.57%)</title><rect x="10.0" y="291.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (974 samples, 0.57%)</title><rect x="10.0" y="275.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (960 samples, 0.56%)</title><rect x="10.0" y="259.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (960 samples, 0.56%)</title><rect x="10.0" y="243.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (960 samples, 0.56%)</title><rect x="10.0" y="227.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.run (37,229 samples, 21.61%)</title><rect x="16.7" y="291.0" width="255.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.7" y="302.0">ru/mail/polis/service/ShardedHttpA..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$executeAsync$5 (37,229 samples, 21.61%)</title><rect x="16.7" y="275.0" width="255.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.7" y="286.0">ru/mail/polis/service/ShardedHttpA..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,919 samples, 4.02%)</title><rect x="16.7" y="259.0" width="47.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.7" y="270.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6,919 samples, 4.02%)</title><rect x="16.7" y="243.0" width="47.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.7" y="254.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3,747 samples, 2.18%)</title><rect x="16.7" y="227.0" width="25.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.7" y="238.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3,747 samples, 2.18%)</title><rect x="16.7" y="211.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.7" y="222.0">o..</text>
</g>
<g>
<title>byte[] (3,745 samples, 2.17%)</title><rect x="16.7" y="195.0" width="25.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.7" y="206.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (3,172 samples, 1.84%)</title><rect x="42.3" y="227.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.3" y="238.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3,172 samples, 1.84%)</title><rect x="42.3" y="211.0" width="21.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="45.3" y="222.0">o..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$62/1747025583.act (5,953 samples, 3.46%)</title><rect x="64.1" y="259.0" width="40.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.1" y="270.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$entity$0 (5,953 samples, 3.46%)</title><rect x="64.1" y="243.0" width="40.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.1" y="254.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (5,953 samples, 3.46%)</title><rect x="64.1" y="227.0" width="40.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.1" y="238.0">ru/..</text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (167 samples, 0.10%)</title><rect x="64.1" y="211.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="67.1" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CountDownLatch (124 samples, 0.07%)</title><rect x="65.2" y="211.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="68.2" y="222.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (130 samples, 0.08%)</title><rect x="66.1" y="211.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.1" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (130 samples, 0.08%)</title><rect x="66.1" y="195.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.1" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (130 samples, 0.08%)</title><rect x="66.1" y="179.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="69.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (259 samples, 0.15%)</title><rect x="67.0" y="211.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.0" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (121 samples, 0.07%)</title><rect x="67.0" y="195.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="70.0" y="206.0"></text>
</g>
<g>
<title>java.lang.Object (138 samples, 0.08%)</title><rect x="67.8" y="195.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="70.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.&lt;init&gt; (266 samples, 0.15%)</title><rect x="68.7" y="211.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CountDownLatch$Sync (266 samples, 0.15%)</title><rect x="68.7" y="195.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="71.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.await (490 samples, 0.28%)</title><rect x="70.6" y="211.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquireSharedNanos (490 samples, 0.28%)</title><rect x="70.6" y="195.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireSharedNanos (490 samples, 0.28%)</title><rect x="70.6" y="179.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (490 samples, 0.28%)</title><rect x="70.6" y="163.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (251 samples, 0.15%)</title><rect x="70.6" y="147.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="73.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.initializeSyncQueue (239 samples, 0.14%)</title><rect x="72.3" y="147.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (239 samples, 0.14%)</title><rect x="72.3" y="131.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (1,845 samples, 1.07%)</title><rect x="73.9" y="211.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.9" y="222.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (709 samples, 0.41%)</title><rect x="73.9" y="195.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.9" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap (709 samples, 0.41%)</title><rect x="73.9" y="179.0" width="4.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="76.9" y="190.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,136 samples, 0.66%)</title><rect x="78.8" y="195.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.8" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,136 samples, 0.66%)</title><rect x="78.8" y="179.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.8" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,136 samples, 0.66%)</title><rect x="78.8" y="163.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.8" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (835 samples, 0.48%)</title><rect x="78.8" y="147.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.8" y="158.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (835 samples, 0.48%)</title><rect x="78.8" y="131.0" width="5.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="81.8" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (301 samples, 0.17%)</title><rect x="84.5" y="147.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.5" y="158.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (301 samples, 0.17%)</title><rect x="84.5" y="131.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="87.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (194 samples, 0.11%)</title><rect x="86.5" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (194 samples, 0.11%)</title><rect x="86.5" y="195.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (194 samples, 0.11%)</title><rect x="86.5" y="179.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.get$Lambda (194 samples, 0.11%)</title><rect x="86.5" y="163.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$66 (194 samples, 0.11%)</title><rect x="86.5" y="147.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="89.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNode (884 samples, 0.51%)</title><rect x="87.9" y="211.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/903793657.linkToTargetMethod (509 samples, 0.30%)</title><rect x="87.9" y="195.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (509 samples, 0.30%)</title><rect x="87.9" y="179.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.get$Lambda (509 samples, 0.30%)</title><rect x="87.9" y="163.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$70 (509 samples, 0.30%)</title><rect x="87.9" y="147.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="90.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (375 samples, 0.22%)</title><rect x="91.4" y="195.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (375 samples, 0.22%)</title><rect x="91.4" y="179.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (375 samples, 0.22%)</title><rect x="91.4" y="163.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="94.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocally (394 samples, 0.23%)</title><rect x="93.9" y="211.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (200 samples, 0.12%)</title><rect x="93.9" y="195.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (200 samples, 0.12%)</title><rect x="93.9" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$68/1100131846.get$Lambda (200 samples, 0.12%)</title><rect x="93.9" y="163.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$68 (200 samples, 0.12%)</title><rect x="93.9" y="147.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="96.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (194 samples, 0.11%)</title><rect x="95.3" y="195.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (194 samples, 0.11%)</title><rect x="95.3" y="179.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (192 samples, 0.11%)</title><rect x="95.3" y="163.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="98.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponses (1,200 samples, 0.70%)</title><rect x="96.6" y="211.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.6" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (422 samples, 0.24%)</title><rect x="96.6" y="195.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="99.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (778 samples, 0.45%)</title><rect x="99.5" y="195.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.5" y="206.0"></text>
</g>
<g>
<title>byte[] (320 samples, 0.19%)</title><rect x="99.5" y="179.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="102.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (280 samples, 0.16%)</title><rect x="101.7" y="179.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="104.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (178 samples, 0.10%)</title><rect x="103.6" y="179.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="106.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (24,357 samples, 14.14%)</title><rect x="104.9" y="259.0" width="166.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.9" y="270.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (24,357 samples, 14.14%)</title><rect x="104.9" y="243.0" width="166.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.9" y="254.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (24,357 samples, 14.14%)</title><rect x="104.9" y="227.0" width="166.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.9" y="238.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one.nio.http.Response (3,721 samples, 2.16%)</title><rect x="104.9" y="211.0" width="25.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="107.9" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,370 samples, 1.96%)</title><rect x="130.3" y="211.0" width="23.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.3" y="222.0">o..</text>
</g>
<g>
<title>byte[] (3,360 samples, 1.95%)</title><rect x="130.3" y="195.0" width="23.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="133.3" y="206.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (17,266 samples, 10.02%)</title><rect x="153.4" y="211.0" width="118.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.4" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (17,266 samples, 10.02%)</title><rect x="153.4" y="195.0" width="118.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.4" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8,880 samples, 5.15%)</title><rect x="153.4" y="179.0" width="60.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.4" y="190.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8,880 samples, 5.15%)</title><rect x="153.4" y="163.0" width="60.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="156.4" y="174.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (8,386 samples, 4.87%)</title><rect x="214.3" y="179.0" width="57.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.3" y="190.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8,384 samples, 4.87%)</title><rect x="214.3" y="163.0" width="57.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.3" y="174.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8,384 samples, 4.87%)</title><rect x="214.3" y="147.0" width="57.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="217.3" y="158.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$68/1100131846.run (3,241 samples, 1.88%)</title><rect x="271.7" y="291.0" width="22.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.7" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocally$0 (3,241 samples, 1.88%)</title><rect x="271.7" y="275.0" width="22.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.7" y="286.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (204 samples, 0.12%)</title><rect x="271.7" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (204 samples, 0.12%)</title><rect x="271.7" y="243.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (204 samples, 0.12%)</title><rect x="271.7" y="227.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="274.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (3,037 samples, 1.76%)</title><rect x="273.1" y="259.0" width="20.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (3,037 samples, 1.76%)</title><rect x="273.1" y="243.0" width="20.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (3,037 samples, 1.76%)</title><rect x="273.1" y="227.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.1" y="238.0"></text>
</g>
<g>
<title>one.nio.http.Response (200 samples, 0.12%)</title><rect x="273.1" y="211.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="276.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (782 samples, 0.45%)</title><rect x="274.5" y="211.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.5" y="222.0"></text>
</g>
<g>
<title>byte[] (322 samples, 0.19%)</title><rect x="274.5" y="195.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="277.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (269 samples, 0.16%)</title><rect x="276.7" y="195.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="279.7" y="206.0"></text>
</g>
<g>
<title>java.lang.String (191 samples, 0.11%)</title><rect x="278.5" y="195.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="281.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (2,055 samples, 1.19%)</title><rect x="279.8" y="211.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (2,055 samples, 1.19%)</title><rect x="279.8" y="195.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.8" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (969 samples, 0.56%)</title><rect x="279.8" y="179.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (969 samples, 0.56%)</title><rect x="279.8" y="163.0" width="6.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="282.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (1,086 samples, 0.63%)</title><rect x="286.5" y="179.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (798 samples, 0.46%)</title><rect x="286.5" y="163.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.5" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (798 samples, 0.46%)</title><rect x="286.5" y="147.0" width="5.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="289.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (287 samples, 0.17%)</title><rect x="291.9" y="163.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (287 samples, 0.17%)</title><rect x="291.9" y="147.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Value (287 samples, 0.17%)</title><rect x="291.9" y="131.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="294.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.run (81,711 samples, 47.43%)</title><rect x="293.9" y="291.0" width="559.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.9" y="302.0">ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.run</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNode$1 (81,711 samples, 47.43%)</title><rect x="293.9" y="275.0" width="559.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.9" y="286.0">ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNode$1</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (522 samples, 0.30%)</title><rect x="293.9" y="259.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (522 samples, 0.30%)</title><rect x="293.9" y="243.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.9" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (522 samples, 0.30%)</title><rect x="293.9" y="227.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="296.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (81,189 samples, 47.13%)</title><rect x="297.5" y="259.0" width="556.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.5" y="270.0">ru/mail/polis/service/ShardedHttpApiBase.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (81,189 samples, 47.13%)</title><rect x="297.5" y="243.0" width="556.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.5" y="254.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (81,189 samples, 47.13%)</title><rect x="297.5" y="227.0" width="556.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.5" y="238.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (555 samples, 0.32%)</title><rect x="297.5" y="211.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="300.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (71,607 samples, 41.57%)</title><rect x="301.3" y="211.0" width="490.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.3" y="222.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (6,902 samples, 4.01%)</title><rect x="301.3" y="195.0" width="47.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="304.3" y="206.0">byte[]</text>
</g>
<g>
<title>byte[] (64,705 samples, 37.56%)</title><rect x="348.6" y="195.0" width="443.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.6" y="206.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4,591 samples, 2.67%)</title><rect x="791.8" y="211.0" width="31.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.8" y="222.0">on..</text>
</g>
<g>
<title>byte[] (308 samples, 0.18%)</title><rect x="791.8" y="195.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="794.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (158 samples, 0.09%)</title><rect x="793.9" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (158 samples, 0.09%)</title><rect x="793.9" y="179.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.04%)</title><rect x="793.9" y="163.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="796.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (85 samples, 0.05%)</title><rect x="794.4" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.4" y="174.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.05%)</title><rect x="794.4" y="147.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="797.4" y="158.0"></text>
</g>
<g>
<title>one.nio.http.Response (59 samples, 0.03%)</title><rect x="795.0" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="798.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3,089 samples, 1.79%)</title><rect x="795.4" y="195.0" width="21.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.4" y="206.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,089 samples, 1.79%)</title><rect x="795.4" y="179.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.4" y="190.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,089 samples, 1.79%)</title><rect x="795.4" y="163.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.4" y="174.0">o..</text>
</g>
<g>
<title>char[] (1,322 samples, 0.77%)</title><rect x="795.4" y="147.0" width="9.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="798.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (877 samples, 0.51%)</title><rect x="804.4" y="147.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="807.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (890 samples, 0.52%)</title><rect x="810.4" y="147.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (890 samples, 0.52%)</title><rect x="810.4" y="131.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (890 samples, 0.52%)</title><rect x="810.4" y="115.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.4" y="126.0"></text>
</g>
<g>
<title>byte[] (890 samples, 0.52%)</title><rect x="810.4" y="99.0" width="6.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="813.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (81 samples, 0.05%)</title><rect x="816.5" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (81 samples, 0.05%)</title><rect x="816.5" y="179.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="819.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (896 samples, 0.52%)</title><rect x="817.1" y="195.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (896 samples, 0.52%)</title><rect x="817.1" y="179.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (896 samples, 0.52%)</title><rect x="817.1" y="163.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (426 samples, 0.25%)</title><rect x="817.1" y="147.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="820.1" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (470 samples, 0.27%)</title><rect x="820.0" y="147.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.0" y="158.0"></text>
</g>
<g>
<title>byte[] (470 samples, 0.27%)</title><rect x="820.0" y="131.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="823.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2,968 samples, 1.72%)</title><rect x="823.2" y="211.0" width="20.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.2" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,968 samples, 1.72%)</title><rect x="823.2" y="195.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.2" y="206.0"></text>
</g>
<g>
<title>byte[] (2,968 samples, 1.72%)</title><rect x="823.2" y="179.0" width="20.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="826.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1,039 samples, 0.60%)</title><rect x="843.6" y="211.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,039 samples, 0.60%)</title><rect x="843.6" y="195.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,039 samples, 0.60%)</title><rect x="843.6" y="179.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (428 samples, 0.25%)</title><rect x="843.6" y="163.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="846.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (611 samples, 0.35%)</title><rect x="846.5" y="163.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.5" y="174.0"></text>
</g>
<g>
<title>byte[] (611 samples, 0.35%)</title><rect x="846.5" y="147.0" width="4.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="849.5" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (429 samples, 0.25%)</title><rect x="850.7" y="211.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.7" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (429 samples, 0.25%)</title><rect x="850.7" y="195.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.7" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (429 samples, 0.25%)</title><rect x="850.7" y="179.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.7" y="190.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (429 samples, 0.25%)</title><rect x="850.7" y="163.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="853.7" y="174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (49,104 samples, 28.50%)</title><rect x="853.6" y="339.0" width="336.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.6" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,131 samples, 1.24%)</title><rect x="853.6" y="323.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.6" y="334.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,131 samples, 1.24%)</title><rect x="853.6" y="307.0" width="14.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="856.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (46,973 samples, 27.27%)</title><rect x="868.2" y="323.0" width="321.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.2" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46,973 samples, 27.27%)</title><rect x="868.2" y="307.0" width="321.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.2" y="318.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (46,967 samples, 27.26%)</title><rect x="868.2" y="291.0" width="321.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.2" y="302.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21,773 samples, 12.64%)</title><rect x="868.2" y="275.0" width="149.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.2" y="286.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21,773 samples, 12.64%)</title><rect x="868.2" y="259.0" width="149.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="871.2" y="270.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,478 samples, 1.44%)</title><rect x="868.2" y="243.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,478 samples, 1.44%)</title><rect x="868.2" y="227.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,478 samples, 1.44%)</title><rect x="868.2" y="211.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1,369 samples, 0.79%)</title><rect x="868.2" y="195.0" width="9.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="871.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,109 samples, 0.64%)</title><rect x="877.6" y="195.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="880.6" y="206.0"></text>
</g>
<g>
<title>byte[] (1,109 samples, 0.64%)</title><rect x="877.6" y="179.0" width="7.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="880.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (19,295 samples, 11.20%)</title><rect x="885.2" y="243.0" width="132.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="888.2" y="254.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,898 samples, 1.10%)</title><rect x="885.2" y="227.0" width="13.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,898 samples, 1.10%)</title><rect x="885.2" y="211.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,898 samples, 1.10%)</title><rect x="885.2" y="195.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String (912 samples, 0.53%)</title><rect x="885.2" y="179.0" width="6.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="888.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (986 samples, 0.57%)</title><rect x="891.5" y="179.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.5" y="190.0"></text>
</g>
<g>
<title>byte[] (986 samples, 0.57%)</title><rect x="891.5" y="163.0" width="6.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="894.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (17,397 samples, 10.10%)</title><rect x="898.2" y="227.0" width="119.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.2" y="238.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/String.getBytes (598 samples, 0.35%)</title><rect x="898.2" y="211.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (598 samples, 0.35%)</title><rect x="898.2" y="195.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (598 samples, 0.35%)</title><rect x="898.2" y="179.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (598 samples, 0.35%)</title><rect x="898.2" y="163.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.2" y="174.0"></text>
</g>
<g>
<title>byte[] (598 samples, 0.35%)</title><rect x="898.2" y="147.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="901.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (983 samples, 0.57%)</title><rect x="902.3" y="211.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (983 samples, 0.57%)</title><rect x="902.3" y="195.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$62/1747025583.get$Lambda (983 samples, 0.57%)</title><rect x="902.3" y="179.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.3" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApi$$Lambda$62 (983 samples, 0.57%)</title><rect x="902.3" y="163.0" width="6.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="905.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,519 samples, 0.88%)</title><rect x="909.0" y="211.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="912.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,519 samples, 0.88%)</title><rect x="909.0" y="195.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,519 samples, 0.88%)</title><rect x="909.0" y="179.0" width="10.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="912.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (490 samples, 0.28%)</title><rect x="919.4" y="211.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (490 samples, 0.28%)</title><rect x="919.4" y="195.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (490 samples, 0.28%)</title><rect x="919.4" y="179.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (289 samples, 0.17%)</title><rect x="919.4" y="163.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="922.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (201 samples, 0.12%)</title><rect x="921.4" y="163.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.4" y="174.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.12%)</title><rect x="921.4" y="147.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="924.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,911 samples, 1.11%)</title><rect x="922.8" y="211.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,911 samples, 1.11%)</title><rect x="922.8" y="195.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,911 samples, 1.11%)</title><rect x="922.8" y="179.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1,005 samples, 0.58%)</title><rect x="922.8" y="163.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="925.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (906 samples, 0.53%)</title><rect x="929.7" y="163.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.7" y="174.0"></text>
</g>
<g>
<title>byte[] (906 samples, 0.53%)</title><rect x="929.7" y="147.0" width="6.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="932.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (1,422 samples, 0.83%)</title><rect x="935.9" y="211.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (476 samples, 0.28%)</title><rect x="935.9" y="195.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (476 samples, 0.28%)</title><rect x="935.9" y="179.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.get$Lambda (476 samples, 0.28%)</title><rect x="935.9" y="163.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$63 (476 samples, 0.28%)</title><rect x="935.9" y="147.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="938.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (946 samples, 0.55%)</title><rect x="939.2" y="195.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (946 samples, 0.55%)</title><rect x="939.2" y="179.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="942.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (936 samples, 0.54%)</title><rect x="939.2" y="163.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="942.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (9,563 samples, 5.55%)</title><rect x="945.6" y="211.0" width="65.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="948.6" y="222.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,613 samples, 0.94%)</title><rect x="945.6" y="195.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,613 samples, 0.94%)</title><rect x="945.6" y="179.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,613 samples, 0.94%)</title><rect x="945.6" y="163.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (603 samples, 0.35%)</title><rect x="945.6" y="147.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="948.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,010 samples, 0.59%)</title><rect x="949.8" y="147.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.8" y="158.0"></text>
</g>
<g>
<title>byte[] (1,010 samples, 0.59%)</title><rect x="949.8" y="131.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="952.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.all (1,302 samples, 0.76%)</title><rect x="956.7" y="195.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.7" y="206.0"></text>
</g>
<g>
<title>java/util/Set.of (1,302 samples, 0.76%)</title><rect x="956.7" y="179.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="959.7" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (929 samples, 0.54%)</title><rect x="956.7" y="163.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="959.7" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (373 samples, 0.22%)</title><rect x="963.0" y="163.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (373 samples, 0.22%)</title><rect x="963.0" y="147.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="966.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (6,648 samples, 3.86%)</title><rect x="965.6" y="195.0" width="45.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.6" y="206.0">ru/m..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (860 samples, 0.50%)</title><rect x="965.6" y="179.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (514 samples, 0.30%)</title><rect x="965.6" y="163.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.6" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (514 samples, 0.30%)</title><rect x="965.6" y="147.0" width="3.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="968.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (346 samples, 0.20%)</title><rect x="969.1" y="163.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="972.1" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (346 samples, 0.20%)</title><rect x="969.1" y="147.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="972.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (5,295 samples, 3.07%)</title><rect x="971.5" y="179.0" width="36.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.5" y="190.0">com..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,055 samples, 1.77%)</title><rect x="971.5" y="163.0" width="20.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,055 samples, 1.77%)</title><rect x="971.5" y="147.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="974.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,055 samples, 1.77%)</title><rect x="971.5" y="131.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.5" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,055 samples, 1.77%)</title><rect x="971.5" y="115.0" width="20.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,055 samples, 1.77%)</title><rect x="971.5" y="99.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,055 samples, 1.77%)</title><rect x="971.5" y="83.0" width="20.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,055 samples, 1.77%)</title><rect x="971.5" y="67.0" width="20.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.5" y="78.0"></text>
</g>
<g>
<title>java.lang.String (1,858 samples, 1.08%)</title><rect x="971.5" y="51.0" width="12.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="974.5" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,197 samples, 0.69%)</title><rect x="984.2" y="51.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.2" y="62.0"></text>
</g>
<g>
<title>byte[] (1,197 samples, 0.69%)</title><rect x="984.2" y="35.0" width="8.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="987.2" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (636 samples, 0.37%)</title><rect x="992.4" y="163.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (636 samples, 0.37%)</title><rect x="992.4" y="147.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (636 samples, 0.37%)</title><rect x="992.4" y="131.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.4" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (636 samples, 0.37%)</title><rect x="992.4" y="115.0" width="4.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="995.4" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (946 samples, 0.55%)</title><rect x="996.8" y="163.0" width="6.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="999.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (658 samples, 0.38%)</title><rect x="1003.3" y="163.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (658 samples, 0.38%)</title><rect x="1003.3" y="147.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (658 samples, 0.38%)</title><rect x="1003.3" y="131.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (658 samples, 0.38%)</title><rect x="1003.3" y="115.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1006.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (658 samples, 0.38%)</title><rect x="1003.3" y="99.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.3" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (639 samples, 0.37%)</title><rect x="1003.3" y="83.0" width="4.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1006.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.RF (493 samples, 0.29%)</title><rect x="1007.8" y="179.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1010.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (911 samples, 0.53%)</title><rect x="1011.1" y="211.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (643 samples, 0.37%)</title><rect x="1011.1" y="195.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (373 samples, 0.22%)</title><rect x="1011.1" y="179.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (373 samples, 0.22%)</title><rect x="1011.1" y="163.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.get$Lambda (373 samples, 0.22%)</title><rect x="1011.1" y="147.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$63 (373 samples, 0.22%)</title><rect x="1011.1" y="131.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1014.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (270 samples, 0.16%)</title><rect x="1013.7" y="179.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1016.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (270 samples, 0.16%)</title><rect x="1013.7" y="163.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (270 samples, 0.16%)</title><rect x="1013.7" y="147.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1016.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (268 samples, 0.16%)</title><rect x="1015.5" y="195.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (268 samples, 0.16%)</title><rect x="1015.5" y="179.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1018.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (268 samples, 0.16%)</title><rect x="1015.5" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.get$Lambda (268 samples, 0.16%)</title><rect x="1015.5" y="147.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$66 (268 samples, 0.16%)</title><rect x="1015.5" y="131.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1018.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10,662 samples, 6.19%)</title><rect x="1017.4" y="275.0" width="73.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.4" y="286.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.Request (1,861 samples, 1.08%)</title><rect x="1017.4" y="259.0" width="12.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1020.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,594 samples, 1.51%)</title><rect x="1030.1" y="259.0" width="17.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (2,217 samples, 1.29%)</title><rect x="1030.1" y="243.0" width="15.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1033.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (377 samples, 0.22%)</title><rect x="1045.3" y="243.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1048.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,207 samples, 3.60%)</title><rect x="1047.9" y="259.0" width="42.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.9" y="270.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,207 samples, 3.60%)</title><rect x="1047.9" y="243.0" width="42.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.9" y="254.0">one/..</text>
</g>
<g>
<title>char[] (2,308 samples, 1.34%)</title><rect x="1047.9" y="227.0" width="15.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1050.9" y="238.0"></text>
</g>
<g>
<title>char[] (923 samples, 0.54%)</title><rect x="1063.7" y="227.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1066.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (638 samples, 0.37%)</title><rect x="1070.0" y="227.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1073.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,338 samples, 1.36%)</title><rect x="1074.4" y="227.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,338 samples, 1.36%)</title><rect x="1074.4" y="211.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,338 samples, 1.36%)</title><rect x="1074.4" y="195.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.4" y="206.0"></text>
</g>
<g>
<title>byte[] (2,321 samples, 1.35%)</title><rect x="1074.4" y="179.0" width="15.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1077.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,137 samples, 0.66%)</title><rect x="1090.4" y="275.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.4" y="286.0"></text>
</g>
<g>
<title>byte[] (1,137 samples, 0.66%)</title><rect x="1090.4" y="259.0" width="7.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1093.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,909 samples, 1.11%)</title><rect x="1098.2" y="275.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1101.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,909 samples, 1.11%)</title><rect x="1098.2" y="259.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,909 samples, 1.11%)</title><rect x="1098.2" y="243.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1,128 samples, 0.65%)</title><rect x="1098.2" y="227.0" width="7.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1101.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (781 samples, 0.45%)</title><rect x="1105.9" y="227.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.9" y="238.0"></text>
</g>
<g>
<title>byte[] (781 samples, 0.45%)</title><rect x="1105.9" y="211.0" width="5.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1108.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,486 samples, 6.67%)</title><rect x="1111.3" y="275.0" width="78.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.3" y="286.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,486 samples, 6.67%)</title><rect x="1111.3" y="259.0" width="78.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.3" y="270.0">one/nio/u..</text>
</g>
<g>
<title>char[] (4,485 samples, 2.60%)</title><rect x="1111.3" y="243.0" width="30.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1114.3" y="254.0">ch..</text>
</g>
<g>
<title>char[] (478 samples, 0.28%)</title><rect x="1142.0" y="243.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1145.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2,798 samples, 1.62%)</title><rect x="1145.3" y="243.0" width="19.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1148.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,725 samples, 2.16%)</title><rect x="1164.4" y="243.0" width="25.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.4" y="254.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,725 samples, 2.16%)</title><rect x="1164.4" y="227.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.4" y="238.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,725 samples, 2.16%)</title><rect x="1164.4" y="211.0" width="25.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.4" y="222.0">j..</text>
</g>
<g>
<title>byte[] (3,725 samples, 2.16%)</title><rect x="1164.4" y="195.0" width="25.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1167.4" y="206.0">b..</text>
</g>
</g>
</svg>
