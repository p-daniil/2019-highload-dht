<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1141"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1141"> </text>
<g id="frames">
<g>
<title>all (4,436 samples, 100.00%)</title><rect x="10.0" y="1107.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1118.0">all</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="10.0" y="1091.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="10.3" y="1091.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="10.5" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.5" y="1102.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.02%)</title><rect x="10.8" y="1091.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.8" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="11.1" y="1091.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.1" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (23 samples, 0.52%)</title><rect x="11.6" y="1091.0" width="6.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.6" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.05%)</title><rect x="12.1" y="1075.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.1" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="12.1" y="1059.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.1" y="1070.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="12.1" y="1043.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.1" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="12.4" y="1043.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.4" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="12.4" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.4" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (19 samples, 0.43%)</title><rect x="12.7" y="1075.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.7" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (18 samples, 0.41%)</title><rect x="12.9" y="1059.0" width="4.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.9" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.05%)</title><rect x="12.9" y="1043.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.9" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (16 samples, 0.36%)</title><rect x="13.5" y="1043.0" width="4.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.5" y="1054.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="14.3" y="1027.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.3" y="1038.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="14.3" y="1011.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.3" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (3 samples, 0.07%)</title><rect x="14.5" y="1027.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.5" y="1038.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="14.8" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.8" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="15.1" y="1011.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.1" y="1022.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="15.1" y="995.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.1" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.02%)</title><rect x="15.1" y="979.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.1" y="990.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.02%)</title><rect x="15.1" y="963.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.1" y="974.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.02%)</title><rect x="15.1" y="947.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.1" y="958.0"></text>
</g>
<g>
<title>G1RemSet::num_par_rem_sets() (1 samples, 0.02%)</title><rect x="15.1" y="931.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.1" y="942.0"></text>
</g>
<g>
<title>G1ConcurrentRefine::max_num_threads() (1 samples, 0.02%)</title><rect x="15.1" y="915.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.1" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="15.3" y="1027.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.3" y="1038.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="15.3" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="18.3" y="1022.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.02%)</title><rect x="15.6" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="18.6" y="1022.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="15.9" y="1011.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="18.9" y="1022.0"></text>
</g>
<g>
<title>__memset_erms (6 samples, 0.14%)</title><rect x="16.1" y="1027.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.1" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.09%)</title><rect x="17.7" y="1091.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.7" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.09%)</title><rect x="17.7" y="1075.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.7" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.09%)</title><rect x="17.7" y="1059.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.09%)</title><rect x="17.7" y="1043.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.7" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="17.7" y="1027.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="20.7" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="17.7" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.7" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="17.7" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.7" y="1006.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 0.02%)</title><rect x="17.7" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="20.7" y="990.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit_epilogue() (1 samples, 0.02%)</title><rect x="17.7" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.7" y="974.0"></text>
</g>
<g>
<title>Universe::has_reference_pending_list() (1 samples, 0.02%)</title><rect x="17.7" y="947.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="20.7" y="958.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="18.0" y="1011.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.0" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="18.0" y="995.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.0" y="1006.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="18.2" y="1011.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.2" y="1022.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="18.5" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.5" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (17 samples, 0.38%)</title><rect x="18.8" y="1091.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.8" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (15 samples, 0.34%)</title><rect x="19.0" y="1075.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.0" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (13 samples, 0.29%)</title><rect x="19.0" y="1059.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.27%)</title><rect x="19.0" y="1043.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.0" y="1054.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="19.6" y="1027.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.6" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="19.8" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.8" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="20.1" y="1027.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.1" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="20.4" y="1011.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.4" y="1022.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="20.6" y="1011.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="23.6" y="1022.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="20.9" y="1027.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="23.9" y="1038.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.05%)</title><rect x="21.4" y="1027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.4" y="1038.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.02%)</title><rect x="22.0" y="1027.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.0" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="22.2" y="1043.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="25.2" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="22.5" y="1059.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.5" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.02%)</title><rect x="23.0" y="1075.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.0" y="1086.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (1 samples, 0.02%)</title><rect x="23.3" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="26.3" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="23.3" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.3" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="23.3" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.3" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="23.3" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.3" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="23.3" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="26.3" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="23.3" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.3" y="1022.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (2 samples, 0.05%)</title><rect x="23.6" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="26.6" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="23.6" y="1075.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.6" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="23.6" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.6" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.02%)</title><rect x="23.6" y="1043.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.6" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="23.8" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="26.8" y="1054.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="23.8" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.8" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (135 samples, 3.04%)</title><rect x="24.1" y="1091.0" width="35.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="27.1" y="1102.0">Sha..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="25.4" y="1075.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="28.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.07%)</title><rect x="25.7" y="1075.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="28.7" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.02%)</title><rect x="26.5" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.5" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (125 samples, 2.82%)</title><rect x="26.8" y="1075.0" width="33.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="29.8" y="1086.0">Ob..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="27.3" y="1059.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.3" y="1070.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.05%)</title><rect x="27.6" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.6" y="1070.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="28.1" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.1" y="1070.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.02%)</title><rect x="28.4" y="1059.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="31.4" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (17 samples, 0.38%)</title><rect x="28.6" y="1059.0" width="4.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.6" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (15 samples, 0.34%)</title><rect x="28.6" y="1043.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.6" y="1054.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="32.6" y="1043.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="35.6" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (95 samples, 2.14%)</title><rect x="33.1" y="1059.0" width="25.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="36.1" y="1070.0">O..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="36.3" y="1043.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="39.3" y="1054.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="36.9" y="1043.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="39.9" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (75 samples, 1.69%)</title><rect x="37.1" y="1043.0" width="20.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="40.1" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (11 samples, 0.25%)</title><rect x="40.9" y="1027.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="43.9" y="1038.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="43.8" y="1027.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="46.8" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (32 samples, 0.72%)</title><rect x="44.3" y="1027.0" width="8.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="47.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.45%)</title><rect x="47.5" y="1011.0" width="5.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="50.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.45%)</title><rect x="47.5" y="995.0" width="5.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="50.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.25%)</title><rect x="49.9" y="979.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="52.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.25%)</title><rect x="49.9" y="963.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="52.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="50.7" y="947.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="53.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="52.3" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="55.3" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="52.8" y="1027.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="55.8" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="53.1" y="1027.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="56.1" y="1038.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (2 samples, 0.05%)</title><rect x="53.4" y="1027.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="56.4" y="1038.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.07%)</title><rect x="53.9" y="1027.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="56.9" y="1038.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="54.4" y="1011.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="57.4" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="54.7" y="1027.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="57.7" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.14%)</title><rect x="55.2" y="1027.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="58.2" y="1038.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="56.8" y="1027.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="59.8" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="57.1" y="1043.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="60.1" y="1054.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="57.9" y="1043.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="60.9" y="1054.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.07%)</title><rect x="58.4" y="1059.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="61.4" y="1070.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (3 samples, 0.07%)</title><rect x="59.2" y="1059.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="62.2" y="1070.0"></text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.02%)</title><rect x="60.0" y="1091.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="63.0" y="1102.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*, int) (1 samples, 0.02%)</title><rect x="60.0" y="1075.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="63.0" y="1086.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*, int) (1 samples, 0.02%)</title><rect x="60.0" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="63.0" y="1070.0"></text>
</g>
<g>
<title>vframeArray::allocate(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap*, frame, frame, frame, bool) (1 samples, 0.02%)</title><rect x="60.0" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="63.0" y="1054.0"></text>
</g>
<g>
<title>vframeArrayElement::fill_in(compiledVFrame*, bool) (1 samples, 0.02%)</title><rect x="60.0" y="1027.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="63.0" y="1038.0"></text>
</g>
<g>
<title>compiledVFrame::locals() const (1 samples, 0.02%)</title><rect x="60.0" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="63.0" y="1022.0"></text>
</g>
<g>
<title>ConstantOopReadValue::is_constant_oop() const (1 samples, 0.02%)</title><rect x="60.0" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="63.0" y="1006.0"></text>
</g>
<g>
<title>[not_walkable] (9 samples, 0.20%)</title><rect x="60.3" y="1091.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="63.3" y="1102.0"></text>
</g>
<g>
<title>[not_walkable_Java] (10 samples, 0.23%)</title><rect x="62.7" y="1091.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="65.7" y="1102.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="62.7" y="1075.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="65.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.7" y="1059.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="65.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.7" y="1043.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="65.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.7" y="1027.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="65.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.7" y="1011.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="65.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.7" y="995.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="65.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.7" y="979.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="65.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.7" y="963.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="65.7" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="62.9" y="1075.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="65.9" y="1086.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="62.9" y="1059.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="65.9" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="63.2" y="1075.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="66.2" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.02%)</title><rect x="63.2" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="66.2" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="63.2" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="66.2" y="1054.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="63.2" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="66.2" y="1038.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="63.2" y="1011.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="66.2" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="63.2" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="66.2" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.07%)</title><rect x="63.5" y="1075.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="66.5" y="1086.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="63.7" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="66.7" y="1070.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.02%)</title><rect x="64.0" y="1059.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="67.0" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="64.3" y="1075.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="67.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="64.8" y="1075.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="67.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="64.8" y="1059.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="67.8" y="1070.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="64.8" y="1043.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="67.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.06%)</title><rect x="65.3" y="1091.0" width="12.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="68.3" y="1102.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="65.3" y="1075.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="68.3" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (40 samples, 0.90%)</title><rect x="65.6" y="1075.0" width="10.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="68.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.70%)</title><rect x="68.0" y="1059.0" width="8.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="71.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.70%)</title><rect x="68.0" y="1043.0" width="8.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="71.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.56%)</title><rect x="69.6" y="1027.0" width="6.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="72.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.56%)</title><rect x="69.6" y="1011.0" width="6.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="72.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.54%)</title><rect x="69.9" y="995.0" width="6.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="72.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.54%)</title><rect x="69.9" y="979.0" width="6.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="72.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.47%)</title><rect x="70.6" y="963.0" width="5.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="73.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.43%)</title><rect x="71.2" y="947.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="74.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.32%)</title><rect x="72.5" y="931.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="75.5" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="76.2" y="1075.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="79.2" y="1086.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="76.5" y="1075.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="79.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="76.8" y="1075.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="79.8" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="77.3" y="1075.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="80.3" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="77.3" y="1059.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="80.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="77.3" y="1043.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="80.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="77.3" y="1027.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="80.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="77.3" y="1011.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="80.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="77.3" y="995.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="80.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="77.3" y="979.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="80.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="77.3" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="80.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="77.3" y="947.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="80.3" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="77.6" y="1059.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="80.6" y="1070.0"></text>
</g>
<g>
<title>[unknown_Java] (97 samples, 2.19%)</title><rect x="77.8" y="1091.0" width="25.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="80.8" y="1102.0">[..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="81.3" y="1075.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="84.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.16%)</title><rect x="81.6" y="1075.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="84.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="81.6" y="1059.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="84.6" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="81.6" y="1043.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="84.6" y="1054.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="81.6" y="1027.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="84.6" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="81.8" y="1043.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="84.8" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="82.4" y="1059.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="85.4" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="83.2" y="1059.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="86.2" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (76 samples, 1.71%)</title><rect x="83.4" y="1075.0" width="20.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="86.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.38%)</title><rect x="87.4" y="1059.0" width="16.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="90.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.38%)</title><rect x="87.4" y="1043.0" width="16.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="90.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.26%)</title><rect x="88.7" y="1027.0" width="14.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="91.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.26%)</title><rect x="88.7" y="1011.0" width="14.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="91.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.24%)</title><rect x="89.0" y="995.0" width="14.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="92.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.15%)</title><rect x="90.1" y="979.0" width="13.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="93.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 1.08%)</title><rect x="90.9" y="963.0" width="12.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="93.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.06%)</title><rect x="91.1" y="947.0" width="12.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="94.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="103.6" y="1091.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="106.6" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (27 samples, 0.61%)</title><rect x="103.9" y="1091.0" width="7.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="106.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.54%)</title><rect x="104.7" y="1075.0" width="6.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="107.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.54%)</title><rect x="104.7" y="1059.0" width="6.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="107.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.50%)</title><rect x="105.2" y="1043.0" width="5.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="108.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.50%)</title><rect x="105.2" y="1027.0" width="5.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="108.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.47%)</title><rect x="105.5" y="1011.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="108.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.43%)</title><rect x="106.0" y="995.0" width="5.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="109.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.38%)</title><rect x="106.6" y="979.0" width="4.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="109.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.29%)</title><rect x="107.6" y="963.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="110.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="109.0" y="947.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="112.0" y="958.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="111.1" y="1091.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="114.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,998 samples, 67.58%)</title><rect x="111.3" y="1091.0" width="797.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.3" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,998 samples, 67.58%)</title><rect x="111.3" y="1075.0" width="797.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.3" y="1086.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,998 samples, 67.58%)</title><rect x="111.3" y="1059.0" width="797.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.3" y="1070.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (5 samples, 0.11%)</title><rect x="117.5" y="1043.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="118.8" y="1043.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="121.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="118.8" y="1027.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="121.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="118.8" y="1011.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="121.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="118.8" y="995.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="121.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="118.8" y="979.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="121.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="118.8" y="963.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="121.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="118.8" y="947.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="121.8" y="958.0"></text>
</g>
<g>
<title>itable stub (13 samples, 0.29%)</title><rect x="119.6" y="1043.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="122.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.11%)</title><rect x="123.1" y="1043.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.09%)</title><rect x="123.3" y="1027.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.3" y="1038.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.05%)</title><rect x="123.3" y="1011.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="126.3" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="123.3" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="126.3" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="123.6" y="995.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="126.6" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="123.9" y="1011.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="126.9" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="124.1" y="1011.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="127.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (13 samples, 0.29%)</title><rect x="124.4" y="1043.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.29%)</title><rect x="124.4" y="1027.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (7 samples, 0.16%)</title><rect x="126.0" y="1011.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.11%)</title><rect x="126.5" y="995.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.11%)</title><rect x="126.5" y="979.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.11%)</title><rect x="126.5" y="963.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (5 samples, 0.11%)</title><rect x="127.8" y="1043.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.09%)</title><rect x="128.1" y="1027.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (2 samples, 0.05%)</title><rect x="128.6" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.05%)</title><rect x="128.6" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (743 samples, 16.75%)</title><rect x="129.2" y="1043.0" width="197.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.2" y="1054.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (723 samples, 16.30%)</title><rect x="134.0" y="1027.0" width="192.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.0" y="1038.0">java/util/concurrent/Link..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="135.3" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.3" y="1022.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="135.3" y="995.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="138.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (532 samples, 11.99%)</title><rect x="135.6" y="1011.0" width="141.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.6" y="1022.0">java/util/concurre..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (22 samples, 0.50%)</title><rect x="137.7" y="995.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="142.7" y="979.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (21 samples, 0.47%)</title><rect x="143.5" y="995.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (6 samples, 0.14%)</title><rect x="147.5" y="979.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (6 samples, 0.14%)</title><rect x="147.5" y="963.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.14%)</title><rect x="149.1" y="995.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.07%)</title><rect x="149.7" y="979.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.07%)</title><rect x="149.7" y="963.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="149.7" y="947.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="149.7" y="931.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="152.7" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="149.7" y="915.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="152.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.7" y="899.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="152.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.7" y="883.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="152.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.7" y="867.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="152.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.7" y="851.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="152.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.7" y="835.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="152.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="149.9" y="931.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="152.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="149.9" y="915.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="152.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="899.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="153.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="883.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="153.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="153.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="851.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="153.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="835.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="153.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="819.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="153.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="803.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="153.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="787.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="153.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="150.2" y="771.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="153.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="150.5" y="979.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="150.5" y="963.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="150.5" y="947.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="150.5" y="931.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="150.5" y="915.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (18 samples, 0.41%)</title><rect x="150.7" y="995.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.41%)</title><rect x="150.7" y="979.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.29%)</title><rect x="151.0" y="963.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.02%)</title><rect x="151.0" y="947.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.0" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="151.0" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="151.0" y="915.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.0" y="926.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="151.0" y="899.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.27%)</title><rect x="151.2" y="947.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.27%)</title><rect x="151.2" y="931.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.2" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.07%)</title><rect x="151.2" y="915.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="154.2" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="151.5" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="154.5" y="910.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="151.8" y="899.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="154.8" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.20%)</title><rect x="152.0" y="915.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="155.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="152.0" y="899.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="155.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="152.0" y="883.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="155.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="152.3" y="867.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="155.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="152.3" y="851.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="155.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="152.3" y="835.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="155.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="152.3" y="819.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="155.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.16%)</title><rect x="152.6" y="803.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="155.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.16%)</title><rect x="152.6" y="787.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="155.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.09%)</title><rect x="154.4" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (3 samples, 0.07%)</title><rect x="155.5" y="995.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (3 samples, 0.07%)</title><rect x="155.5" y="979.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (454 samples, 10.23%)</title><rect x="156.3" y="995.0" width="120.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.3" y="1006.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.05%)</title><rect x="156.3" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (452 samples, 10.19%)</title><rect x="156.8" y="979.0" width="120.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.8" y="990.0">jdk/internal/mi..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.07%)</title><rect x="160.8" y="963.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="163.8" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.09%)</title><rect x="161.6" y="963.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="164.6" y="974.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="162.7" y="963.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="165.7" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.07%)</title><rect x="163.0" y="963.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="166.0" y="974.0"></text>
</g>
<g>
<title>Unsafe_Park (179 samples, 4.04%)</title><rect x="163.8" y="963.0" width="47.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="166.8" y="974.0">Unsa..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.05%)</title><rect x="168.5" y="947.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="171.5" y="958.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.07%)</title><rect x="169.1" y="947.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="172.1" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (55 samples, 1.24%)</title><rect x="169.9" y="947.0" width="14.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="172.9" y="958.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (9 samples, 0.20%)</title><rect x="177.6" y="931.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="180.6" y="942.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.09%)</title><rect x="180.0" y="931.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="183.0" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.29%)</title><rect x="181.0" y="931.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="184.0" y="942.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="184.5" y="947.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="187.5" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="185.0" y="947.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="188.0" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.02%)</title><rect x="185.8" y="947.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="188.8" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (58 samples, 1.31%)</title><rect x="186.1" y="947.0" width="15.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="189.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.88%)</title><rect x="191.1" y="931.0" width="10.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="194.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.88%)</title><rect x="191.1" y="915.0" width="10.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="194.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.43%)</title><rect x="196.5" y="899.0" width="5.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="199.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.36%)</title><rect x="197.3" y="883.0" width="4.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="200.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.29%)</title><rect x="198.1" y="867.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="201.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="200.2" y="851.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="203.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="835.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="204.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="819.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="204.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="803.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="204.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="787.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="204.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="771.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="204.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="755.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="204.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="739.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="204.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="723.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="204.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="707.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="204.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="691.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="204.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="675.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="204.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="201.3" y="659.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="204.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.18%)</title><rect x="201.5" y="947.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="204.5" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (8 samples, 0.18%)</title><rect x="203.7" y="947.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="206.7" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="205.8" y="947.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="208.8" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="206.3" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="209.3" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (9 samples, 0.20%)</title><rect x="206.8" y="947.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="209.8" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.18%)</title><rect x="209.2" y="947.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="212.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (245 samples, 5.52%)</title><rect x="211.4" y="963.0" width="65.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="214.4" y="974.0">[unknown]</text>
</g>
<g>
<title>__pthread_cleanup_pop (5 samples, 0.11%)</title><rect x="211.4" y="947.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="214.4" y="958.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="212.7" y="947.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="215.7" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (219 samples, 4.94%)</title><rect x="213.0" y="947.0" width="58.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="216.0" y="958.0">__pthr..</text>
</g>
<g>
<title>[unknown] (150 samples, 3.38%)</title><rect x="231.3" y="931.0" width="39.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="234.3" y="942.0">[un..</text>
</g>
<g>
<title>[unknown] (150 samples, 3.38%)</title><rect x="231.3" y="915.0" width="39.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="234.3" y="926.0">[un..</text>
</g>
<g>
<title>[unknown] (131 samples, 2.95%)</title><rect x="236.4" y="899.0" width="34.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="239.4" y="910.0">[u..</text>
</g>
<g>
<title>[unknown] (130 samples, 2.93%)</title><rect x="236.6" y="883.0" width="34.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="239.6" y="894.0">[u..</text>
</g>
<g>
<title>[unknown] (121 samples, 2.73%)</title><rect x="239.0" y="867.0" width="32.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="242.0" y="878.0">[u..</text>
</g>
<g>
<title>[unknown] (105 samples, 2.37%)</title><rect x="243.3" y="851.0" width="27.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="246.3" y="862.0">[..</text>
</g>
<g>
<title>[unknown] (83 samples, 1.87%)</title><rect x="249.1" y="835.0" width="22.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="252.1" y="846.0">[..</text>
</g>
<g>
<title>[unknown] (69 samples, 1.56%)</title><rect x="252.9" y="819.0" width="18.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="255.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 1.51%)</title><rect x="253.4" y="803.0" width="17.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="256.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="271.0" y="787.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="274.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="271.0" y="771.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="274.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="271.0" y="755.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="274.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="271.0" y="739.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="274.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="271.0" y="723.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="274.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="271.0" y="707.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="274.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="271.0" y="691.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="274.0" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="271.2" y="947.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="274.2" y="958.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.07%)</title><rect x="272.0" y="947.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="275.0" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (7 samples, 0.16%)</title><rect x="272.8" y="947.0" width="1.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="275.8" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.09%)</title><rect x="274.7" y="947.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="277.7" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.07%)</title><rect x="275.7" y="947.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="278.7" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="276.5" y="963.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="279.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (34 samples, 0.77%)</title><rect x="277.1" y="1011.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (31 samples, 0.70%)</title><rect x="277.6" y="995.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="278.9" y="979.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="281.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="278.9" y="963.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="281.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="278.9" y="947.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="281.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="278.9" y="931.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="281.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="278.9" y="915.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="281.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="278.9" y="899.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="281.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="278.9" y="883.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="281.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="279.2" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="279.2" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (15 samples, 0.34%)</title><rect x="279.5" y="979.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="280.0" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="280.0" y="947.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="280.0" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.0" y="942.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="280.0" y="915.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="283.0" y="926.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="280.0" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="283.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="280.3" y="915.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="283.3" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="280.3" y="899.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="283.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (2 samples, 0.05%)</title><rect x="280.5" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (9 samples, 0.20%)</title><rect x="281.1" y="963.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (9 samples, 0.20%)</title><rect x="281.1" y="947.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.11%)</title><rect x="282.1" y="931.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.11%)</title><rect x="282.1" y="915.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.11%)</title><rect x="282.1" y="899.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="285.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.07%)</title><rect x="282.7" y="883.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (9 samples, 0.20%)</title><rect x="283.5" y="979.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (8 samples, 0.18%)</title><rect x="283.7" y="963.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.05%)</title><rect x="284.5" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.07%)</title><rect x="285.0" y="947.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.0" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.07%)</title><rect x="285.0" y="931.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="285.0" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.0" y="926.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="285.6" y="899.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="285.8" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (151 samples, 3.40%)</title><rect x="286.1" y="1011.0" width="40.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.1" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (151 samples, 3.40%)</title><rect x="286.1" y="995.0" width="40.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.1" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (150 samples, 3.38%)</title><rect x="286.1" y="979.0" width="39.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.1" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (150 samples, 3.38%)</title><rect x="286.1" y="963.0" width="39.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.1" y="974.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (150 samples, 3.38%)</title><rect x="286.1" y="947.0" width="39.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.1" y="958.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.07%)</title><rect x="286.6" y="931.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="289.6" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="287.4" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="290.4" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="287.7" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="290.7" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="288.0" y="931.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="291.0" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (26 samples, 0.59%)</title><rect x="288.5" y="931.0" width="6.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="291.5" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="289.3" y="915.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="292.3" y="926.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.05%)</title><rect x="290.1" y="915.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="293.1" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (5 samples, 0.11%)</title><rect x="290.6" y="915.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="293.6" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.09%)</title><rect x="292.0" y="915.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="295.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="292.8" y="899.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="295.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="292.8" y="883.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="295.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="292.8" y="867.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="295.8" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="293.0" y="915.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="296.0" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="293.6" y="915.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="296.6" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.07%)</title><rect x="293.8" y="915.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="296.8" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="294.6" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="297.6" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="294.9" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="297.9" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="295.2" y="915.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="298.2" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="295.4" y="931.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="298.4" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="296.2" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="299.2" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (111 samples, 2.50%)</title><rect x="296.5" y="931.0" width="29.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="299.5" y="942.0">pt..</text>
</g>
<g>
<title>[unknown] (93 samples, 2.10%)</title><rect x="301.3" y="915.0" width="24.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="304.3" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (93 samples, 2.10%)</title><rect x="301.3" y="899.0" width="24.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="304.3" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (87 samples, 1.96%)</title><rect x="302.9" y="883.0" width="23.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="305.9" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (87 samples, 1.96%)</title><rect x="302.9" y="867.0" width="23.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="305.9" y="878.0">[..</text>
</g>
<g>
<title>[unknown] (86 samples, 1.94%)</title><rect x="303.1" y="851.0" width="22.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="306.1" y="862.0">[..</text>
</g>
<g>
<title>[unknown] (80 samples, 1.80%)</title><rect x="304.7" y="835.0" width="21.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="307.7" y="846.0">[..</text>
</g>
<g>
<title>[unknown] (77 samples, 1.74%)</title><rect x="305.5" y="819.0" width="20.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="308.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 1.65%)</title><rect x="306.6" y="803.0" width="19.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="309.6" y="814.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="326.0" y="979.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="329.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.05%)</title><rect x="326.3" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.run (1,080 samples, 24.35%)</title><rect x="326.8" y="1043.0" width="287.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.8" y="1054.0">ru/mail/polis/service/ShardedHttpApiBas..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$executeAsync$5 (1,073 samples, 24.19%)</title><rect x="328.7" y="1027.0" width="285.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.7" y="1038.0">ru/mail/polis/service/ShardedHttpApiBa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (707 samples, 15.94%)</title><rect x="328.9" y="1011.0" width="188.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.9" y="1022.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.18%)</title><rect x="331.1" y="995.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.16%)</title><rect x="331.3" y="979.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.16%)</title><rect x="331.3" y="963.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.09%)</title><rect x="332.1" y="947.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (668 samples, 15.06%)</title><rect x="333.2" y="995.0" width="177.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.2" y="1006.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 0.72%)</title><rect x="333.7" y="979.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.7" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="335.9" y="963.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="338.9" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="336.1" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.47%)</title><rect x="336.7" y="963.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.7" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="336.7" y="947.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.16%)</title><rect x="336.9" y="947.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.11%)</title><rect x="337.2" y="931.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="337.2" y="915.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.09%)</title><rect x="337.5" y="915.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="338.5" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="338.5" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="341.5" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.29%)</title><rect x="338.8" y="947.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.8" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.29%)</title><rect x="338.8" y="931.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="341.2" y="915.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="341.2" y="899.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="341.4" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.4" y="926.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (2 samples, 0.05%)</title><rect x="341.7" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (634 samples, 14.29%)</title><rect x="342.2" y="979.0" width="168.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.2" y="990.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (634 samples, 14.29%)</title><rect x="342.2" y="963.0" width="168.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.2" y="974.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="342.8" y="947.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="345.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (625 samples, 14.09%)</title><rect x="343.6" y="947.0" width="166.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.6" y="958.0">one/nio/net/Session$A..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (623 samples, 14.04%)</title><rect x="344.1" y="931.0" width="165.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.1" y="942.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.14%)</title><rect x="347.3" y="915.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="350.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.88%)</title><rect x="348.9" y="915.0" width="10.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="351.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.88%)</title><rect x="348.9" y="899.0" width="10.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="351.9" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (33 samples, 0.74%)</title><rect x="348.9" y="883.0" width="8.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="351.9" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="349.7" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="352.7" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (5 samples, 0.11%)</title><rect x="350.5" y="867.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="353.5" y="878.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.07%)</title><rect x="351.8" y="867.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="354.8" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="352.6" y="867.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="355.6" y="878.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (16 samples, 0.36%)</title><rect x="352.9" y="867.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="355.9" y="878.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="353.9" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="356.9" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="354.2" y="851.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="357.2" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4 samples, 0.09%)</title><rect x="355.0" y="851.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="358.0" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.09%)</title><rect x="356.1" y="851.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="359.1" y="862.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.07%)</title><rect x="356.3" y="835.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="359.3" y="846.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="357.1" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="360.1" y="878.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="357.4" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="360.4" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.05%)</title><rect x="357.7" y="883.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="360.7" y="894.0"></text>
</g>
<g>
<title>__send (4 samples, 0.09%)</title><rect x="358.2" y="883.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="361.2" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="359.3" y="915.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="362.3" y="926.0"></text>
</g>
<g>
<title>__send (565 samples, 12.74%)</title><rect x="359.5" y="915.0" width="150.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="362.5" y="926.0">__send</text>
</g>
<g>
<title>[unknown] (545 samples, 12.29%)</title><rect x="364.9" y="899.0" width="144.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="367.9" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (545 samples, 12.29%)</title><rect x="364.9" y="883.0" width="144.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="367.9" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (530 samples, 11.95%)</title><rect x="368.8" y="867.0" width="141.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="371.8" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (529 samples, 11.93%)</title><rect x="369.1" y="851.0" width="140.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="372.1" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (523 samples, 11.79%)</title><rect x="370.7" y="835.0" width="139.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="373.7" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (521 samples, 11.74%)</title><rect x="371.2" y="819.0" width="138.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="374.2" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (516 samples, 11.63%)</title><rect x="372.6" y="803.0" width="137.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="375.6" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (514 samples, 11.59%)</title><rect x="373.1" y="787.0" width="136.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="376.1" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (485 samples, 10.93%)</title><rect x="380.8" y="771.0" width="129.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="383.8" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (460 samples, 10.37%)</title><rect x="387.5" y="755.0" width="122.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="390.5" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (447 samples, 10.08%)</title><rect x="390.9" y="739.0" width="118.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="393.9" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (423 samples, 9.54%)</title><rect x="397.3" y="723.0" width="112.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="400.3" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (390 samples, 8.79%)</title><rect x="406.1" y="707.0" width="103.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="409.1" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (381 samples, 8.59%)</title><rect x="408.5" y="691.0" width="101.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="411.5" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (371 samples, 8.36%)</title><rect x="411.1" y="675.0" width="98.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="414.1" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (366 samples, 8.25%)</title><rect x="412.5" y="659.0" width="97.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="415.5" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (358 samples, 8.07%)</title><rect x="414.6" y="643.0" width="95.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="417.6" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (348 samples, 7.84%)</title><rect x="417.3" y="627.0" width="92.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="420.3" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (333 samples, 7.51%)</title><rect x="421.2" y="611.0" width="88.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="424.2" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (329 samples, 7.42%)</title><rect x="422.3" y="595.0" width="87.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="425.3" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (319 samples, 7.19%)</title><rect x="425.0" y="579.0" width="84.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="428.0" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (310 samples, 6.99%)</title><rect x="427.4" y="563.0" width="82.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="430.4" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (290 samples, 6.54%)</title><rect x="432.7" y="547.0" width="77.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="435.7" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (278 samples, 6.27%)</title><rect x="435.9" y="531.0" width="73.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="438.9" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (274 samples, 6.18%)</title><rect x="436.9" y="515.0" width="72.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="439.9" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (267 samples, 6.02%)</title><rect x="438.8" y="499.0" width="71.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="441.8" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (266 samples, 6.00%)</title><rect x="439.1" y="483.0" width="70.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="442.1" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (257 samples, 5.79%)</title><rect x="441.5" y="467.0" width="68.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="444.5" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (251 samples, 5.66%)</title><rect x="443.1" y="451.0" width="66.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="446.1" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (247 samples, 5.57%)</title><rect x="444.1" y="435.0" width="65.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="447.1" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (247 samples, 5.57%)</title><rect x="444.1" y="419.0" width="65.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="447.1" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (242 samples, 5.46%)</title><rect x="445.5" y="403.0" width="64.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="448.5" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (231 samples, 5.21%)</title><rect x="448.4" y="387.0" width="61.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="451.4" y="398.0">[unkno..</text>
</g>
<g>
<title>[unknown] (218 samples, 4.91%)</title><rect x="451.8" y="371.0" width="58.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="454.8" y="382.0">[unkno..</text>
</g>
<g>
<title>[unknown] (204 samples, 4.60%)</title><rect x="455.6" y="355.0" width="54.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="458.6" y="366.0">[unkn..</text>
</g>
<g>
<title>[unknown] (179 samples, 4.04%)</title><rect x="462.2" y="339.0" width="47.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="465.2" y="350.0">[unk..</text>
</g>
<g>
<title>[unknown] (149 samples, 3.36%)</title><rect x="470.2" y="323.0" width="39.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="473.2" y="334.0">[un..</text>
</g>
<g>
<title>[unknown] (144 samples, 3.25%)</title><rect x="471.5" y="307.0" width="38.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="474.5" y="318.0">[un..</text>
</g>
<g>
<title>[unknown] (140 samples, 3.16%)</title><rect x="472.6" y="291.0" width="37.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="475.6" y="302.0">[un..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="509.0" y="275.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="512.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="509.6" y="259.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="512.6" y="270.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.09%)</title><rect x="509.8" y="947.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="512.8" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="509.8" y="931.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="512.8" y="942.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="510.1" y="931.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="513.1" y="942.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="510.1" y="915.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="513.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.45%)</title><rect x="510.9" y="995.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (19 samples, 0.43%)</title><rect x="511.2" y="979.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.14%)</title><rect x="511.4" y="963.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="514.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="512.8" y="947.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.27%)</title><rect x="513.0" y="963.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="515.4" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.4" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="515.4" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.4" y="942.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="515.4" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.4" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.05%)</title><rect x="515.7" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.7" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.05%)</title><rect x="515.7" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.7" y="942.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.05%)</title><rect x="515.7" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.7" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="515.9" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getMethod (1 samples, 0.02%)</title><rect x="516.2" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.02%)</title><rect x="516.5" y="995.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="516.5" y="979.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.5" y="990.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.02%)</title><rect x="516.7" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$62/1747025583.act (236 samples, 5.32%)</title><rect x="517.0" y="1011.0" width="62.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.0" y="1022.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$entity$0 (236 samples, 5.32%)</title><rect x="517.0" y="995.0" width="62.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.0" y="1006.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (236 samples, 5.32%)</title><rect x="517.0" y="979.0" width="62.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.0" y="990.0">ru/mai..</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="517.0" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.02%)</title><rect x="517.0" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.27%)</title><rect x="517.3" y="963.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (11 samples, 0.25%)</title><rect x="517.3" y="947.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.3" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (11 samples, 0.25%)</title><rect x="517.3" y="931.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.3" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (11 samples, 0.25%)</title><rect x="517.3" y="915.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.3" y="926.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="519.7" y="899.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="522.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.02%)</title><rect x="520.2" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.05%)</title><rect x="520.5" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.setArray (2 samples, 0.05%)</title><rect x="520.5" y="947.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.5" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.05%)</title><rect x="520.5" y="931.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.&lt;init&gt; (1 samples, 0.02%)</title><rect x="521.0" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.await (148 samples, 3.34%)</title><rect x="521.3" y="963.0" width="39.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.3" y="974.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquireSharedNanos (148 samples, 3.34%)</title><rect x="521.3" y="947.0" width="39.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.3" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireSharedNanos (148 samples, 3.34%)</title><rect x="521.3" y="931.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.3" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="521.3" y="915.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.initializeSyncQueue (1 samples, 0.02%)</title><rect x="521.3" y="899.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="521.3" y="883.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="521.3" y="867.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.3" y="878.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="521.3" y="851.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="524.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHeadAndPropagate (26 samples, 0.59%)</title><rect x="521.5" y="915.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (26 samples, 0.59%)</title><rect x="521.5" y="899.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (26 samples, 0.59%)</title><rect x="521.5" y="883.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.6" y="867.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="529.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.6" y="851.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="529.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.6" y="835.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="529.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.6" y="819.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="529.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.6" y="803.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="529.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.6" y="787.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="529.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="526.6" y="771.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="529.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="526.8" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="527.1" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.1" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="527.4" y="867.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="530.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (1 samples, 0.02%)</title><rect x="528.2" y="867.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (121 samples, 2.73%)</title><rect x="528.4" y="915.0" width="32.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.4" y="926.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (121 samples, 2.73%)</title><rect x="528.4" y="899.0" width="32.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.4" y="910.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (52 samples, 1.17%)</title><rect x="529.5" y="883.0" width="13.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="532.5" y="894.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="529.8" y="867.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="532.8" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.29%)</title><rect x="530.0" y="867.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="533.0" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="530.8" y="851.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.8" y="862.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.05%)</title><rect x="531.6" y="851.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="534.6" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.11%)</title><rect x="532.2" y="851.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="535.2" y="862.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="533.5" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="536.5" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="533.8" y="867.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="536.8" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 0.43%)</title><rect x="534.0" y="867.0" width="5.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="537.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.25%)</title><rect x="536.2" y="851.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="539.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.25%)</title><rect x="536.2" y="835.0" width="2.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="539.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="537.8" y="819.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="540.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="538.0" y="803.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="541.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="538.0" y="787.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="541.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="538.8" y="771.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="541.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="539.1" y="867.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="542.1" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="539.4" y="867.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="542.4" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.05%)</title><rect x="539.6" y="867.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="542.6" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="540.1" y="867.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="543.1" y="878.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="540.4" y="867.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="543.4" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="540.9" y="867.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="543.9" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="541.5" y="867.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="544.5" y="878.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.07%)</title><rect x="541.7" y="867.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="544.7" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="542.5" y="867.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="545.5" y="878.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="543.1" y="867.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="546.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="543.3" y="883.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="546.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="543.3" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="546.3" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="543.3" y="851.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="546.3" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="543.3" y="835.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="546.3" y="846.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="543.6" y="867.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="546.6" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="543.9" y="867.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="546.9" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="543.9" y="851.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="546.9" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (61 samples, 1.38%)</title><rect x="544.1" y="883.0" width="16.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="547.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.19%)</title><rect x="546.3" y="867.0" width="14.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="549.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.19%)</title><rect x="546.3" y="851.0" width="14.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="549.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.10%)</title><rect x="547.3" y="835.0" width="13.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="550.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.06%)</title><rect x="547.9" y="819.0" width="12.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="550.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.04%)</title><rect x="548.1" y="803.0" width="12.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="551.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.88%)</title><rect x="550.0" y="787.0" width="10.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="553.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.81%)</title><rect x="550.8" y="771.0" width="9.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="553.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.72%)</title><rect x="551.9" y="755.0" width="8.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="554.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.45%)</title><rect x="555.0" y="739.0" width="5.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="558.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="559.6" y="723.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="562.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="559.6" y="707.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="562.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="559.6" y="691.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="562.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="559.6" y="675.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="562.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="559.8" y="659.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="562.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="559.8" y="643.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="562.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="559.8" y="627.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="562.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="559.8" y="611.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="562.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="559.8" y="595.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="562.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="560.1" y="579.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="563.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="560.1" y="563.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="563.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="560.1" y="547.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="563.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="560.1" y="531.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="563.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="560.1" y="515.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="563.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="560.1" y="499.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="563.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="560.1" y="483.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="563.1" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="560.4" y="883.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="563.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (21 samples, 0.47%)</title><rect x="560.6" y="963.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.6" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.07%)</title><rect x="561.2" y="947.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (3 samples, 0.07%)</title><rect x="561.2" y="931.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.2" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (3 samples, 0.07%)</title><rect x="561.2" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.2" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.add (16 samples, 0.36%)</title><rect x="562.0" y="947.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.put (16 samples, 0.36%)</title><rect x="562.0" y="931.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (3 samples, 0.07%)</title><rect x="562.0" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.09%)</title><rect x="562.8" y="915.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.20%)</title><rect x="563.8" y="915.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="564.1" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.1" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.05%)</title><rect x="564.6" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="564.9" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.07%)</title><rect x="565.2" y="899.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.2" y="910.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="566.0" y="899.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="569.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNode (4 samples, 0.09%)</title><rect x="566.2" y="963.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.09%)</title><rect x="566.2" y="947.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.09%)</title><rect x="566.2" y="931.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="566.2" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="566.2" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="566.5" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="566.5" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.05%)</title><rect x="566.5" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.05%)</title><rect x="566.5" y="867.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="566.7" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="566.7" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="566.7" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="567.0" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="567.0" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="567.0" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocally (47 samples, 1.06%)</title><rect x="567.3" y="963.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (47 samples, 1.06%)</title><rect x="567.3" y="947.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (47 samples, 1.06%)</title><rect x="567.3" y="931.0" width="12.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="567.3" y="915.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (43 samples, 0.97%)</title><rect x="567.5" y="915.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (43 samples, 0.97%)</title><rect x="567.5" y="899.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (43 samples, 0.97%)</title><rect x="567.5" y="883.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (43 samples, 0.97%)</title><rect x="567.5" y="867.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.97%)</title><rect x="567.5" y="851.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (43 samples, 0.97%)</title><rect x="567.5" y="835.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.5" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.16%)</title><rect x="568.1" y="819.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="571.1" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="568.3" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.3" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="568.6" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="571.6" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="568.9" y="803.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="571.9" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="569.4" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="572.4" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="569.7" y="803.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="572.7" y="814.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (34 samples, 0.77%)</title><rect x="569.9" y="819.0" width="9.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="572.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.56%)</title><rect x="572.3" y="803.0" width="6.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="575.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.56%)</title><rect x="572.3" y="787.0" width="6.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="575.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.50%)</title><rect x="573.1" y="771.0" width="5.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="576.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.50%)</title><rect x="573.1" y="755.0" width="5.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="576.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.50%)</title><rect x="573.1" y="739.0" width="5.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="576.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.47%)</title><rect x="573.4" y="723.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="576.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.45%)</title><rect x="573.7" y="707.0" width="5.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="576.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.45%)</title><rect x="573.7" y="691.0" width="5.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="576.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="579.0" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="579.0" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="579.0" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="579.0" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.02%)</title><rect x="579.0" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="579.0" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="579.0" y="819.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="579.3" y="915.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="579.3" y="899.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="579.5" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="579.5" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="579.5" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (129 samples, 2.91%)</title><rect x="579.8" y="1011.0" width="34.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.8" y="1022.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (129 samples, 2.91%)</title><rect x="579.8" y="995.0" width="34.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.8" y="1006.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (129 samples, 2.91%)</title><rect x="579.8" y="979.0" width="34.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.8" y="990.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="579.8" y="963.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.16%)</title><rect x="579.8" y="947.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.8" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="579.8" y="931.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="579.8" y="915.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.8" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="580.3" y="899.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.3" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.09%)</title><rect x="580.6" y="883.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.6" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.09%)</title><rect x="580.6" y="867.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.6" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.09%)</title><rect x="580.6" y="851.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.05%)</title><rect x="581.6" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (120 samples, 2.71%)</title><rect x="582.2" y="963.0" width="31.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.2" y="974.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (120 samples, 2.71%)</title><rect x="582.2" y="947.0" width="31.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.2" y="958.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (12 samples, 0.27%)</title><rect x="582.2" y="931.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.23%)</title><rect x="582.7" y="915.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.23%)</title><rect x="582.7" y="899.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.7" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.14%)</title><rect x="583.5" y="883.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.5" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.14%)</title><rect x="583.5" y="867.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.5" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.14%)</title><rect x="583.5" y="851.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="583.5" y="835.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="586.5" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="583.5" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="586.5" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="583.8" y="835.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="586.8" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="584.0" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.0" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="584.3" y="835.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="587.3" y="846.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="584.3" y="819.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="587.3" y="830.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="584.8" y="819.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="587.8" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="584.8" y="803.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="587.8" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="585.1" y="883.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="588.1" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="585.1" y="867.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="588.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (108 samples, 2.43%)</title><rect x="585.4" y="931.0" width="28.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.4" y="942.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (32 samples, 0.72%)</title><rect x="585.4" y="915.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (32 samples, 0.72%)</title><rect x="585.4" y="899.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (32 samples, 0.72%)</title><rect x="585.4" y="883.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (32 samples, 0.72%)</title><rect x="585.4" y="867.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="588.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (32 samples, 0.72%)</title><rect x="585.4" y="851.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="588.4" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.05%)</title><rect x="589.9" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.9" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.09%)</title><rect x="590.4" y="835.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="591.5" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="592.0" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.05%)</title><rect x="592.3" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.3" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.09%)</title><rect x="592.8" y="835.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="595.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (76 samples, 1.71%)</title><rect x="593.9" y="915.0" width="20.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (75 samples, 1.69%)</title><rect x="594.1" y="899.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (75 samples, 1.69%)</title><rect x="594.1" y="883.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="596.8" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="596.8" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.07%)</title><rect x="597.3" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (9 samples, 0.20%)</title><rect x="598.1" y="867.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="598.4" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="598.7" y="835.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="598.7" y="819.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="598.7" y="803.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.7" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="598.7" y="787.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.7" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="598.7" y="771.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.14%)</title><rect x="598.9" y="851.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.9" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.14%)</title><rect x="598.9" y="835.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.14%)</title><rect x="598.9" y="819.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.9" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="599.5" y="803.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="599.7" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.7" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="600.3" y="787.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (51 samples, 1.15%)</title><rect x="600.5" y="867.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.5" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (49 samples, 1.10%)</title><rect x="601.1" y="851.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (47 samples, 1.06%)</title><rect x="601.6" y="835.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.6" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.07%)</title><rect x="605.3" y="819.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.3" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (22 samples, 0.50%)</title><rect x="606.1" y="819.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.27%)</title><rect x="608.8" y="803.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.8" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.14%)</title><rect x="610.4" y="787.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.18%)</title><rect x="612.0" y="819.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.0" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="613.3" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.3" y="814.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.05%)</title><rect x="613.3" y="787.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="616.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="613.8" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$68/1100131846.run (62 samples, 1.40%)</title><rect x="614.1" y="1043.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocally$0 (61 samples, 1.38%)</title><rect x="614.4" y="1027.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.02%)</title><rect x="614.6" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (59 samples, 1.33%)</title><rect x="614.9" y="1011.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (58 samples, 1.31%)</title><rect x="615.2" y="995.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (58 samples, 1.31%)</title><rect x="615.2" y="979.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (58 samples, 1.31%)</title><rect x="615.2" y="963.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (58 samples, 1.31%)</title><rect x="615.2" y="947.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.2" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.11%)</title><rect x="615.2" y="931.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="615.2" y="915.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="615.2" y="899.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.2" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="615.4" y="883.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.4" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.09%)</title><rect x="615.4" y="867.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.4" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.09%)</title><rect x="615.4" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.4" y="835.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="618.4" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="615.4" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="618.4" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="615.7" y="835.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="618.7" y="846.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="615.7" y="819.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="618.7" y="830.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="615.7" y="803.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="618.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (53 samples, 1.19%)</title><rect x="616.5" y="931.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (10 samples, 0.23%)</title><rect x="616.5" y="915.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (10 samples, 0.23%)</title><rect x="616.5" y="899.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (10 samples, 0.23%)</title><rect x="616.5" y="883.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.23%)</title><rect x="616.5" y="867.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (10 samples, 0.23%)</title><rect x="616.5" y="851.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.5" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="617.8" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="618.1" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.1" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="618.6" y="835.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="621.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (43 samples, 0.97%)</title><rect x="619.2" y="915.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (43 samples, 0.97%)</title><rect x="619.2" y="899.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (43 samples, 0.97%)</title><rect x="619.2" y="883.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="621.5" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (5 samples, 0.11%)</title><rect x="621.8" y="867.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.05%)</title><rect x="622.6" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.05%)</title><rect x="623.1" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (2 samples, 0.05%)</title><rect x="623.1" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64.casBase (1 samples, 0.02%)</title><rect x="623.4" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.02%)</title><rect x="623.4" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="623.4" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (8 samples, 0.18%)</title><rect x="623.7" y="867.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.7" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="623.7" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="623.9" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="624.2" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="624.5" y="835.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="624.5" y="819.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="624.5" y="803.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="624.5" y="787.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="624.5" y="771.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="624.5" y="755.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="624.5" y="739.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="624.5" y="723.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.09%)</title><rect x="624.7" y="851.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.09%)</title><rect x="624.7" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.09%)</title><rect x="624.7" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.7" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.09%)</title><rect x="624.7" y="803.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.7" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="625.5" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (18 samples, 0.41%)</title><rect x="625.8" y="867.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.8" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.41%)</title><rect x="625.8" y="851.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.41%)</title><rect x="625.8" y="835.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.8" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.18%)</title><rect x="627.4" y="819.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="803.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="630.9" y="814.0"></text>
</g>
<g>
<title>compiledVFrame::is_top() const (1 samples, 0.02%)</title><rect x="627.9" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="630.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="771.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="630.9" y="782.0"></text>
</g>
<g>
<title>__libc_pread64 (1 samples, 0.02%)</title><rect x="627.9" y="755.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="630.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="739.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="630.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="723.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="630.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="707.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="630.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="691.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="630.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="675.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="630.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="659.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="630.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="643.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="630.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="627.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="630.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="611.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="630.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="595.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="630.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="579.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="630.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="563.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="630.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="547.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="630.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="531.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="630.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="515.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="630.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="499.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="630.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="483.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="630.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="467.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="630.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="451.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="630.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="435.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="630.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="419.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="630.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="403.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="630.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="387.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="630.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="627.9" y="371.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="630.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.11%)</title><rect x="628.2" y="803.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="629.3" y="787.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.09%)</title><rect x="629.5" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.5" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="630.3" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.run (1,046 samples, 23.58%)</title><rect x="630.6" y="1043.0" width="278.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.6" y="1054.0">ru/mail/polis/service/ShardedHttpApiB..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNode$1 (1,044 samples, 23.53%)</title><rect x="631.1" y="1027.0" width="277.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.1" y="1038.0">ru/mail/polis/service/ShardedHttpApiB..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (6 samples, 0.14%)</title><rect x="631.7" y="1011.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.7" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="632.7" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="633.0" y="979.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="636.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="633.0" y="963.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="636.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="633.0" y="947.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="636.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="633.0" y="931.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="636.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="633.0" y="915.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="636.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="633.0" y="899.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="636.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="633.0" y="883.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="636.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.countDown (56 samples, 1.26%)</title><rect x="633.3" y="1011.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (56 samples, 1.26%)</title><rect x="633.3" y="995.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch$Sync.tryReleaseShared (1 samples, 0.02%)</title><rect x="633.3" y="979.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="633.3" y="963.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="633.3" y="947.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="633.3" y="931.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (55 samples, 1.24%)</title><rect x="633.5" y="979.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (54 samples, 1.22%)</title><rect x="633.8" y="963.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (54 samples, 1.22%)</title><rect x="633.8" y="947.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (54 samples, 1.22%)</title><rect x="633.8" y="931.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.8" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="634.0" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="637.0" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="634.3" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="637.3" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.14%)</title><rect x="634.6" y="915.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="637.6" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="635.1" y="899.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="638.1" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="635.4" y="899.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="638.4" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="635.6" y="899.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="638.6" y="910.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="635.9" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="638.9" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="636.2" y="915.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="639.2" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (44 samples, 0.99%)</title><rect x="636.4" y="915.0" width="11.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="639.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.86%)</title><rect x="638.0" y="899.0" width="10.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="641.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.86%)</title><rect x="638.0" y="883.0" width="10.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="641.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.81%)</title><rect x="638.6" y="867.0" width="9.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="641.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.81%)</title><rect x="638.6" y="851.0" width="9.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="641.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.79%)</title><rect x="638.8" y="835.0" width="9.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="641.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.74%)</title><rect x="639.4" y="819.0" width="8.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="642.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.70%)</title><rect x="639.9" y="803.0" width="8.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="642.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.65%)</title><rect x="640.4" y="787.0" width="7.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="643.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="647.9" y="771.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="650.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="647.9" y="755.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="650.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="647.9" y="739.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="650.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="647.9" y="723.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="650.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="647.9" y="707.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="650.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="647.9" y="691.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="650.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="647.9" y="675.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="650.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (980 samples, 22.09%)</title><rect x="648.1" y="1011.0" width="260.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.1" y="1022.0">ru/mail/polis/service/ShardedHttpAp..</text>
</g>
<g>
<title>java/util/HashMap.get (28 samples, 0.63%)</title><rect x="650.0" y="995.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (28 samples, 0.63%)</title><rect x="650.0" y="979.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.0" y="990.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="650.3" y="963.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="653.3" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (26 samples, 0.59%)</title><rect x="650.5" y="963.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="653.5" y="974.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="651.1" y="947.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="654.1" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (3 samples, 0.07%)</title><rect x="651.3" y="947.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="654.3" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (16 samples, 0.36%)</title><rect x="652.1" y="947.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="655.1" y="958.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="652.4" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="655.4" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (9 samples, 0.20%)</title><rect x="652.7" y="931.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="655.7" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="654.3" y="915.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="657.3" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="654.5" y="915.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="657.5" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="654.8" y="915.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="657.8" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="655.1" y="931.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="658.1" y="942.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (3 samples, 0.07%)</title><rect x="655.3" y="931.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="658.3" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="656.1" y="931.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="659.1" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="656.4" y="947.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="659.4" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="657.2" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="660.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (938 samples, 21.15%)</title><rect x="657.5" y="995.0" width="249.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.5" y="1006.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (936 samples, 21.10%)</title><rect x="658.0" y="979.0" width="249.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.0" y="990.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.09%)</title><rect x="658.8" y="963.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="659.6" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="659.6" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="659.6" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.6" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (223 samples, 5.03%)</title><rect x="659.9" y="963.0" width="59.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.9" y="974.0">one/ni..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="663.8" y="947.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="666.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="663.8" y="931.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="666.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="663.8" y="915.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="666.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="663.8" y="899.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="666.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="663.8" y="883.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="666.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="663.8" y="867.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="666.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="663.8" y="851.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="666.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (207 samples, 4.67%)</title><rect x="664.1" y="947.0" width="55.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.1" y="958.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="665.2" y="931.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="668.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.99%)</title><rect x="665.4" y="931.0" width="11.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="668.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.99%)</title><rect x="665.4" y="915.0" width="11.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="668.4" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (35 samples, 0.79%)</title><rect x="665.4" y="899.0" width="9.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="668.4" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="666.8" y="883.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="669.8" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="667.6" y="883.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="670.6" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.07%)</title><rect x="668.1" y="883.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="671.1" y="894.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (7 samples, 0.16%)</title><rect x="668.9" y="883.0" width="1.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="671.9" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.34%)</title><rect x="670.8" y="883.0" width="3.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="673.8" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="671.8" y="867.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="674.8" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.07%)</title><rect x="672.4" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="675.4" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.14%)</title><rect x="673.2" y="867.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="676.2" y="878.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.07%)</title><rect x="673.9" y="851.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="676.9" y="862.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.05%)</title><rect x="674.7" y="899.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="677.7" y="910.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="675.3" y="899.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="678.3" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.14%)</title><rect x="675.5" y="899.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="678.5" y="910.0"></text>
</g>
<g>
<title>__GI___recv (154 samples, 3.47%)</title><rect x="677.1" y="931.0" width="41.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="680.1" y="942.0">__G..</text>
</g>
<g>
<title>[unknown] (141 samples, 3.18%)</title><rect x="680.6" y="915.0" width="37.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="683.6" y="926.0">[un..</text>
</g>
<g>
<title>[unknown] (141 samples, 3.18%)</title><rect x="680.6" y="899.0" width="37.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="683.6" y="910.0">[un..</text>
</g>
<g>
<title>[unknown] (135 samples, 3.04%)</title><rect x="682.2" y="883.0" width="35.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="685.2" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (135 samples, 3.04%)</title><rect x="682.2" y="867.0" width="35.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="685.2" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (131 samples, 2.95%)</title><rect x="683.3" y="851.0" width="34.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="686.3" y="862.0">[u..</text>
</g>
<g>
<title>[unknown] (126 samples, 2.84%)</title><rect x="684.6" y="835.0" width="33.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="687.6" y="846.0">[u..</text>
</g>
<g>
<title>[unknown] (124 samples, 2.80%)</title><rect x="685.1" y="819.0" width="33.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="688.1" y="830.0">[u..</text>
</g>
<g>
<title>[unknown] (108 samples, 2.43%)</title><rect x="689.4" y="803.0" width="28.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="692.4" y="814.0">[u..</text>
</g>
<g>
<title>[unknown] (95 samples, 2.14%)</title><rect x="692.8" y="787.0" width="25.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="695.8" y="798.0">[..</text>
</g>
<g>
<title>[unknown] (81 samples, 1.83%)</title><rect x="696.6" y="771.0" width="21.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="699.6" y="782.0">[..</text>
</g>
<g>
<title>[unknown] (58 samples, 1.31%)</title><rect x="702.7" y="755.0" width="15.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="705.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.83%)</title><rect x="708.3" y="739.0" width="9.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="711.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.52%)</title><rect x="712.0" y="723.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="715.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="717.8" y="707.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="720.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="717.8" y="691.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="720.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="717.8" y="675.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="720.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="717.8" y="659.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="720.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="717.8" y="643.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="720.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="717.8" y="627.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="720.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="717.8" y="611.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="720.8" y="622.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.09%)</title><rect x="718.1" y="931.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="721.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (81 samples, 1.83%)</title><rect x="719.2" y="963.0" width="21.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.2" y="974.0">o..</text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.07%)</title><rect x="721.0" y="947.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.34%)</title><rect x="721.8" y="947.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="722.6" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="722.9" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.9" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.23%)</title><rect x="723.2" y="931.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.07%)</title><rect x="724.0" y="915.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="727.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="724.5" y="899.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="727.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="724.5" y="883.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="727.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="724.5" y="867.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="727.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="724.5" y="851.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="727.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="724.5" y="835.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="727.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="724.5" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="727.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="724.5" y="803.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="727.5" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="724.8" y="915.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.8" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="725.3" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.3" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.11%)</title><rect x="725.8" y="947.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="728.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (32 samples, 0.72%)</title><rect x="727.2" y="947.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.2" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.59%)</title><rect x="728.7" y="931.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.7" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.52%)</title><rect x="729.5" y="915.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.9" y="899.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="737.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.9" y="883.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="737.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.9" y="867.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="737.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.9" y="851.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="737.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.9" y="835.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="737.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.9" y="819.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="737.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="734.9" y="803.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="737.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="735.1" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="735.1" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="735.1" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.1" y="878.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.02%)</title><rect x="735.4" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.09%)</title><rect x="735.7" y="947.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.05%)</title><rect x="736.2" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (11 samples, 0.25%)</title><rect x="736.7" y="947.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="737.3" y="931.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.16%)</title><rect x="737.5" y="931.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.16%)</title><rect x="737.5" y="915.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.5" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="739.1" y="899.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="742.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="739.4" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="739.4" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.4" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="739.4" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (4 samples, 0.09%)</title><rect x="739.7" y="947.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.09%)</title><rect x="739.7" y="931.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="739.9" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.9" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.05%)</title><rect x="740.2" y="915.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (62 samples, 1.40%)</title><rect x="740.7" y="963.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="742.8" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.8" y="958.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.25%)</title><rect x="743.1" y="947.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.1" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (9 samples, 0.20%)</title><rect x="743.6" y="931.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.6" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.18%)</title><rect x="743.9" y="915.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="746.9" y="926.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (40 samples, 0.90%)</title><rect x="746.0" y="947.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.0" y="958.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12 samples, 0.27%)</title><rect x="747.6" y="931.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.6" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (7 samples, 0.16%)</title><rect x="749.0" y="915.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="750.8" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.18%)</title><rect x="751.1" y="931.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.09%)</title><rect x="751.9" y="915.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.9" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="752.4" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.4" y="910.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="752.7" y="899.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="755.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="753.0" y="915.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.29%)</title><rect x="753.2" y="931.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.2" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.25%)</title><rect x="753.8" y="915.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.16%)</title><rect x="754.5" y="899.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.5" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (6 samples, 0.14%)</title><rect x="754.8" y="883.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.8" y="894.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.02%)</title><rect x="756.4" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.4" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.05%)</title><rect x="756.7" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="756.9" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="759.9" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="756.9" y="915.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="759.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.20%)</title><rect x="757.2" y="963.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="757.7" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.14%)</title><rect x="758.0" y="947.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="758.0" y="931.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="758.8" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="758.8" y="899.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.8" y="910.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (3 samples, 0.07%)</title><rect x="758.8" y="883.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.05%)</title><rect x="759.6" y="963.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (102 samples, 2.30%)</title><rect x="760.1" y="963.0" width="27.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.1" y="974.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.05%)</title><rect x="762.0" y="947.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="765.0" y="958.0"></text>
</g>
<g>
<title>__GI___setsockopt (93 samples, 2.10%)</title><rect x="762.5" y="947.0" width="24.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="765.5" y="958.0">_..</text>
</g>
<g>
<title>[unknown] (62 samples, 1.40%)</title><rect x="770.8" y="931.0" width="16.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="773.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.40%)</title><rect x="770.8" y="915.0" width="16.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="773.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.04%)</title><rect x="775.0" y="899.0" width="12.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="778.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.01%)</title><rect x="775.3" y="883.0" width="12.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="778.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.97%)</title><rect x="775.8" y="867.0" width="11.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="778.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.74%)</title><rect x="778.5" y="851.0" width="8.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="781.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.61%)</title><rect x="780.1" y="835.0" width="7.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="783.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.41%)</title><rect x="782.5" y="819.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="785.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.25%)</title><rect x="784.3" y="803.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="787.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.18%)</title><rect x="785.1" y="787.0" width="2.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="788.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="786.7" y="771.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="789.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="786.7" y="755.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="789.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="786.7" y="739.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="789.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="786.7" y="723.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="789.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="787.0" y="707.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="790.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (425 samples, 9.58%)</title><rect x="787.3" y="963.0" width="113.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.3" y="974.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (17 samples, 0.38%)</title><rect x="789.1" y="947.0" width="4.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="792.1" y="958.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="789.7" y="931.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="792.7" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="790.2" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="793.2" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.05%)</title><rect x="790.5" y="931.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="793.5" y="942.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="791.0" y="931.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="794.0" y="942.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="791.3" y="931.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="794.3" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.14%)</title><rect x="791.5" y="931.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="794.5" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.02%)</title><rect x="792.1" y="915.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="795.1" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.07%)</title><rect x="792.3" y="915.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="795.3" y="926.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="792.9" y="899.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="795.9" y="910.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="793.1" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="796.1" y="942.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="793.4" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="796.4" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="793.7" y="947.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="796.7" y="958.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="793.9" y="947.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="796.9" y="958.0"></text>
</g>
<g>
<title>__send (397 samples, 8.95%)</title><rect x="794.2" y="947.0" width="105.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="797.2" y="958.0">__send</text>
</g>
<g>
<title>[unknown] (384 samples, 8.66%)</title><rect x="797.6" y="931.0" width="102.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="800.6" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (384 samples, 8.66%)</title><rect x="797.6" y="915.0" width="102.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="800.6" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (377 samples, 8.50%)</title><rect x="799.5" y="899.0" width="100.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="802.5" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (376 samples, 8.48%)</title><rect x="799.8" y="883.0" width="100.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="802.8" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (375 samples, 8.45%)</title><rect x="800.0" y="867.0" width="99.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="803.0" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (372 samples, 8.39%)</title><rect x="800.8" y="851.0" width="99.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="803.8" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (364 samples, 8.21%)</title><rect x="803.0" y="835.0" width="96.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="806.0" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (364 samples, 8.21%)</title><rect x="803.0" y="819.0" width="96.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="806.0" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (351 samples, 7.91%)</title><rect x="806.4" y="803.0" width="93.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="809.4" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (330 samples, 7.44%)</title><rect x="812.0" y="787.0" width="87.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="815.0" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (315 samples, 7.10%)</title><rect x="816.0" y="771.0" width="83.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="819.0" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (297 samples, 6.70%)</title><rect x="820.8" y="755.0" width="79.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="823.8" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (275 samples, 6.20%)</title><rect x="826.6" y="739.0" width="73.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="829.6" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (264 samples, 5.95%)</title><rect x="829.6" y="723.0" width="70.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="832.6" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (252 samples, 5.68%)</title><rect x="832.8" y="707.0" width="67.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="835.8" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (249 samples, 5.61%)</title><rect x="833.6" y="691.0" width="66.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="836.6" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (248 samples, 5.59%)</title><rect x="833.8" y="675.0" width="66.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="836.8" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (243 samples, 5.48%)</title><rect x="835.1" y="659.0" width="64.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="838.1" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (225 samples, 5.07%)</title><rect x="839.9" y="643.0" width="59.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="842.9" y="654.0">[unkno..</text>
</g>
<g>
<title>[unknown] (222 samples, 5.00%)</title><rect x="840.7" y="627.0" width="59.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="843.7" y="638.0">[unkno..</text>
</g>
<g>
<title>[unknown] (213 samples, 4.80%)</title><rect x="843.1" y="611.0" width="56.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="846.1" y="622.0">[unkno..</text>
</g>
<g>
<title>[unknown] (210 samples, 4.73%)</title><rect x="843.9" y="595.0" width="55.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="846.9" y="606.0">[unkn..</text>
</g>
<g>
<title>[unknown] (201 samples, 4.53%)</title><rect x="846.3" y="579.0" width="53.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="849.3" y="590.0">[unkn..</text>
</g>
<g>
<title>[unknown] (195 samples, 4.40%)</title><rect x="847.9" y="563.0" width="51.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="850.9" y="574.0">[unkn..</text>
</g>
<g>
<title>[unknown] (191 samples, 4.31%)</title><rect x="849.0" y="547.0" width="50.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="852.0" y="558.0">[unkn..</text>
</g>
<g>
<title>[unknown] (187 samples, 4.22%)</title><rect x="850.0" y="531.0" width="49.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="853.0" y="542.0">[unkn..</text>
</g>
<g>
<title>[unknown] (184 samples, 4.15%)</title><rect x="850.8" y="515.0" width="49.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="853.8" y="526.0">[unk..</text>
</g>
<g>
<title>[unknown] (181 samples, 4.08%)</title><rect x="851.6" y="499.0" width="48.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="854.6" y="510.0">[unk..</text>
</g>
<g>
<title>[unknown] (174 samples, 3.92%)</title><rect x="853.5" y="483.0" width="46.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="856.5" y="494.0">[unk..</text>
</g>
<g>
<title>[unknown] (172 samples, 3.88%)</title><rect x="854.0" y="467.0" width="45.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="857.0" y="478.0">[unk..</text>
</g>
<g>
<title>[unknown] (172 samples, 3.88%)</title><rect x="854.0" y="451.0" width="45.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="857.0" y="462.0">[unk..</text>
</g>
<g>
<title>[unknown] (170 samples, 3.83%)</title><rect x="854.6" y="435.0" width="45.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="857.6" y="446.0">[unk..</text>
</g>
<g>
<title>[unknown] (162 samples, 3.65%)</title><rect x="856.7" y="419.0" width="43.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="859.7" y="430.0">[unk..</text>
</g>
<g>
<title>[unknown] (151 samples, 3.40%)</title><rect x="859.6" y="403.0" width="40.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="862.6" y="414.0">[un..</text>
</g>
<g>
<title>[unknown] (139 samples, 3.13%)</title><rect x="862.8" y="387.0" width="37.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="865.8" y="398.0">[un..</text>
</g>
<g>
<title>[unknown] (118 samples, 2.66%)</title><rect x="868.4" y="371.0" width="31.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="871.4" y="382.0">[u..</text>
</g>
<g>
<title>[unknown] (98 samples, 2.21%)</title><rect x="873.7" y="355.0" width="26.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="876.7" y="366.0">[..</text>
</g>
<g>
<title>[unknown] (91 samples, 2.05%)</title><rect x="875.6" y="339.0" width="24.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="878.6" y="350.0">[..</text>
</g>
<g>
<title>[unknown] (86 samples, 1.94%)</title><rect x="876.9" y="323.0" width="22.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="879.9" y="334.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="899.3" y="307.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="902.3" y="318.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="899.8" y="947.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="902.8" y="958.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (19 samples, 0.43%)</title><rect x="900.3" y="963.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.3" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (13 samples, 0.29%)</title><rect x="901.9" y="947.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.9" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (12 samples, 0.27%)</title><rect x="902.2" y="931.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.05%)</title><rect x="904.8" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.8" y="926.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (6 samples, 0.14%)</title><rect x="905.4" y="963.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.4" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.02%)</title><rect x="906.7" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.7" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.02%)</title><rect x="906.7" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (7 samples, 0.16%)</title><rect x="907.0" y="995.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (865 samples, 19.50%)</title><rect x="908.8" y="1091.0" width="230.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.8" y="1102.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.14%)</title><rect x="909.9" y="1075.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.11%)</title><rect x="910.2" y="1059.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.02%)</title><rect x="911.5" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (212 samples, 4.78%)</title><rect x="911.8" y="1075.0" width="56.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.8" y="1086.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.07%)</title><rect x="913.6" y="1059.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.07%)</title><rect x="913.6" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (202 samples, 4.55%)</title><rect x="914.4" y="1059.0" width="53.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.4" y="1070.0">one/n..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.02%)</title><rect x="916.3" y="1043.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="919.3" y="1054.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.02%)</title><rect x="916.3" y="1027.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="919.3" y="1038.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.02%)</title><rect x="916.3" y="1011.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="919.3" y="1022.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="916.3" y="995.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="919.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="916.3" y="979.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="919.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="916.3" y="963.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="919.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="916.3" y="947.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="919.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="916.3" y="931.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="919.3" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.14%)</title><rect x="916.5" y="1043.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="919.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="1027.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="920.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="1011.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="920.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="995.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="920.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="979.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="920.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="963.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="920.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="947.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="920.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="931.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="920.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (181 samples, 4.08%)</title><rect x="918.1" y="1043.0" width="48.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="921.1" y="1054.0">[unk..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="918.1" y="1027.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="921.1" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="918.1" y="1011.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="921.1" y="1022.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.09%)</title><rect x="918.4" y="1027.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="921.4" y="1038.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="919.5" y="1027.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="922.5" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.09%)</title><rect x="919.7" y="1027.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="922.7" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.14%)</title><rect x="920.8" y="1027.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="923.8" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="921.9" y="1011.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="924.9" y="1022.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="922.1" y="1011.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="925.1" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (165 samples, 3.72%)</title><rect x="922.4" y="1027.0" width="43.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="925.4" y="1038.0">epol..</text>
</g>
<g>
<title>[unknown] (134 samples, 3.02%)</title><rect x="930.6" y="1011.0" width="35.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="933.6" y="1022.0">[un..</text>
</g>
<g>
<title>[unknown] (134 samples, 3.02%)</title><rect x="930.6" y="995.0" width="35.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="933.6" y="1006.0">[un..</text>
</g>
<g>
<title>[unknown] (127 samples, 2.86%)</title><rect x="932.5" y="979.0" width="33.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="935.5" y="990.0">[u..</text>
</g>
<g>
<title>[unknown] (126 samples, 2.84%)</title><rect x="932.8" y="963.0" width="33.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="935.8" y="974.0">[u..</text>
</g>
<g>
<title>[unknown] (125 samples, 2.82%)</title><rect x="933.0" y="947.0" width="33.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="936.0" y="958.0">[u..</text>
</g>
<g>
<title>[unknown] (115 samples, 2.59%)</title><rect x="935.7" y="931.0" width="30.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="938.7" y="942.0">[u..</text>
</g>
<g>
<title>[unknown] (90 samples, 2.03%)</title><rect x="942.3" y="915.0" width="24.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="945.3" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (77 samples, 1.74%)</title><rect x="945.8" y="899.0" width="20.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="948.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 1.44%)</title><rect x="949.3" y="883.0" width="17.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="952.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.22%)</title><rect x="951.9" y="867.0" width="14.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="954.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="965.2" y="851.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="968.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="965.8" y="835.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="968.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="965.8" y="819.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="968.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="965.8" y="803.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="968.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="965.8" y="787.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="968.8" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="966.3" y="1043.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="969.3" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.07%)</title><rect x="966.6" y="1043.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="969.6" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.07%)</title><rect x="967.4" y="1043.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="970.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (642 samples, 14.47%)</title><rect x="968.2" y="1075.0" width="170.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.2" y="1086.0">one/nio/net/Session.pr..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="970.0" y="1059.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="973.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (630 samples, 14.20%)</title><rect x="970.8" y="1059.0" width="167.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.8" y="1070.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (379 samples, 8.54%)</title><rect x="971.9" y="1043.0" width="100.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.9" y="1054.0">one/nio/http..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="972.9" y="1027.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="975.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="972.9" y="1011.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="975.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="972.9" y="995.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="975.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="972.9" y="979.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="975.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="972.9" y="963.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="975.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="972.9" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="975.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="972.9" y="931.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="975.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (296 samples, 6.67%)</title><rect x="973.2" y="1027.0" width="78.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.2" y="1038.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (296 samples, 6.67%)</title><rect x="973.2" y="1011.0" width="78.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.2" y="1022.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.05%)</title><rect x="973.7" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.16%)</title><rect x="974.3" y="995.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.16%)</title><rect x="974.3" y="979.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="974.3" y="963.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.09%)</title><rect x="974.5" y="963.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.09%)</title><rect x="974.5" y="947.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.07%)</title><rect x="974.8" y="931.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (2 samples, 0.05%)</title><rect x="975.6" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="976.1" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="976.1" y="979.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="979.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="976.1" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="976.1" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.1" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="976.1" y="931.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="979.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (284 samples, 6.40%)</title><rect x="976.4" y="995.0" width="75.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.4" y="1006.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.09%)</title><rect x="976.4" y="979.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="976.7" y="963.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.05%)</title><rect x="976.9" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="977.2" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="977.5" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="977.5" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="977.5" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="977.5" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (278 samples, 6.27%)</title><rect x="978.0" y="979.0" width="73.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.0" y="990.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.05%)</title><rect x="978.0" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.05%)</title><rect x="978.0" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.05%)</title><rect x="978.0" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.0" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="978.5" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="978.5" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.5" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.25%)</title><rect x="978.8" y="963.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="978.8" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.18%)</title><rect x="979.1" y="947.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="979.3" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="982.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="979.3" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.14%)</title><rect x="979.6" y="931.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.6" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="980.4" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="983.4" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="980.4" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.4" y="910.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="980.4" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.4" y="894.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="980.7" y="883.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.7" y="894.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="980.7" y="867.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="980.9" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.9" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="980.9" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.9" y="910.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="980.9" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="981.2" y="947.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="981.2" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.2" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="981.2" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.38%)</title><rect x="981.7" y="963.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="982.0" y="947.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="985.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="982.0" y="931.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="985.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="982.0" y="915.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="985.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="982.0" y="899.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="985.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="982.0" y="883.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="985.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="982.0" y="867.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="985.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="982.0" y="851.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="985.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.23%)</title><rect x="982.2" y="947.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.23%)</title><rect x="982.2" y="931.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="985.2" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="984.4" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="987.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.05%)</title><rect x="984.9" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="985.2" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.2" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.07%)</title><rect x="985.4" y="947.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="985.4" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="985.4" y="915.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.07%)</title><rect x="985.4" y="899.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (64 samples, 1.44%)</title><rect x="986.2" y="963.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 1.44%)</title><rect x="986.2" y="947.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (64 samples, 1.44%)</title><rect x="986.2" y="931.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (2 samples, 0.05%)</title><rect x="986.2" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="986.5" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="986.8" y="915.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (55 samples, 1.24%)</title><rect x="987.0" y="915.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (55 samples, 1.24%)</title><rect x="987.0" y="899.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (55 samples, 1.24%)</title><rect x="987.0" y="883.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="990.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (55 samples, 1.24%)</title><rect x="987.0" y="867.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="990.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (55 samples, 1.24%)</title><rect x="987.0" y="851.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (55 samples, 1.24%)</title><rect x="987.0" y="835.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.0" y="846.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="987.3" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="990.3" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="987.6" y="819.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.6" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.34%)</title><rect x="987.8" y="819.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="990.8" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="988.1" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="991.1" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="988.4" y="803.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="991.4" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="988.6" y="803.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="991.6" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.05%)</title><rect x="989.4" y="803.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="992.4" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="990.0" y="803.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="993.0" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (4 samples, 0.09%)</title><rect x="990.2" y="803.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.2" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="991.3" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="994.3" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="991.6" y="803.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="994.6" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="991.8" y="819.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="994.8" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.02%)</title><rect x="992.1" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="995.1" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (35 samples, 0.79%)</title><rect x="992.4" y="819.0" width="9.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="995.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.70%)</title><rect x="993.4" y="803.0" width="8.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="996.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.70%)</title><rect x="993.4" y="787.0" width="8.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="996.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.65%)</title><rect x="994.0" y="771.0" width="7.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="997.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.63%)</title><rect x="994.2" y="755.0" width="7.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="997.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.61%)</title><rect x="994.5" y="739.0" width="7.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="997.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.52%)</title><rect x="995.6" y="723.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="998.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.47%)</title><rect x="996.1" y="707.0" width="5.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="999.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.43%)</title><rect x="996.6" y="691.0" width="5.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="999.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.09%)</title><rect x="1001.7" y="915.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1004.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.09%)</title><rect x="1001.7" y="899.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.09%)</title><rect x="1001.7" y="883.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.07%)</title><rect x="1001.9" y="867.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1004.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.05%)</title><rect x="1001.9" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1004.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.05%)</title><rect x="1001.9" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1004.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.05%)</title><rect x="1001.9" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="1002.5" y="851.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.5" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="1002.5" y="835.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1002.5" y="819.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="1002.7" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="1002.7" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1005.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="1002.7" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="1002.7" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.02%)</title><rect x="1002.7" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="1003.0" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="1003.0" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="1003.0" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (29 samples, 0.65%)</title><rect x="1003.3" y="963.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.09%)</title><rect x="1003.3" y="947.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="1003.3" y="931.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.07%)</title><rect x="1003.3" y="915.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.3" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1003.8" y="899.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1006.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="1004.1" y="931.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1007.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.all (1 samples, 0.02%)</title><rect x="1004.3" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (24 samples, 0.54%)</title><rect x="1004.6" y="947.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.6" y="958.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (4 samples, 0.09%)</title><rect x="1004.6" y="931.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (2 samples, 0.05%)</title><rect x="1004.6" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1007.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="1004.6" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.6" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2 samples, 0.05%)</title><rect x="1005.1" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1008.1" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1005.1" y="899.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1008.1" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (16 samples, 0.36%)</title><rect x="1005.7" y="931.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (11 samples, 0.25%)</title><rect x="1005.7" y="915.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.7" y="926.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (9 samples, 0.20%)</title><rect x="1006.2" y="899.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.2" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3 samples, 0.07%)</title><rect x="1007.3" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.3" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3 samples, 0.07%)</title><rect x="1007.3" y="867.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.3" y="878.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (1 samples, 0.02%)</title><rect x="1007.5" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1 samples, 0.02%)</title><rect x="1007.8" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1007.8" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.8" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1008.1" y="883.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1011.1" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1008.3" y="883.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1011.3" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (1 samples, 0.02%)</title><rect x="1008.6" y="915.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (3 samples, 0.07%)</title><rect x="1008.9" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1011.9" y="926.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (3 samples, 0.07%)</title><rect x="1008.9" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.9" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (3 samples, 0.07%)</title><rect x="1008.9" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.9" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1009.4" y="867.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.4" y="878.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1009.4" y="851.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.4" y="862.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1009.4" y="835.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1009.4" y="819.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.4" y="830.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="1009.4" y="803.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1012.4" y="814.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.02%)</title><rect x="1009.6" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1012.6" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableRandomAccessList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1009.6" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1012.6" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1009.6" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.09%)</title><rect x="1009.9" y="931.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.09%)</title><rect x="1009.9" y="915.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="1010.4" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.4" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1010.7" y="883.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1013.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (154 samples, 3.47%)</title><rect x="1011.0" y="963.0" width="40.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.0" y="974.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (151 samples, 3.40%)</title><rect x="1011.2" y="947.0" width="40.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.2" y="958.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.09%)</title><rect x="1011.2" y="931.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.2" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="1011.2" y="915.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.get$Lambda (4 samples, 0.09%)</title><rect x="1011.2" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1011.2" y="883.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (146 samples, 3.29%)</title><rect x="1012.3" y="931.0" width="38.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.3" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (145 samples, 3.27%)</title><rect x="1012.6" y="915.0" width="38.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.6" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1012.8" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (3 samples, 0.07%)</title><rect x="1013.1" y="899.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (126 samples, 2.84%)</title><rect x="1013.9" y="899.0" width="33.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.9" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="1013.9" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1016.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="1013.9" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="1013.9" y="851.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="1013.9" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="1013.9" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="1013.9" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1013.9" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="1013.9" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (125 samples, 2.82%)</title><rect x="1014.2" y="883.0" width="33.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.2" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (125 samples, 2.82%)</title><rect x="1014.2" y="867.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.2" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (125 samples, 2.82%)</title><rect x="1014.2" y="851.0" width="33.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.2" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (125 samples, 2.82%)</title><rect x="1014.2" y="835.0" width="33.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.2" y="846.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (125 samples, 2.82%)</title><rect x="1014.2" y="819.0" width="33.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.2" y="830.0">jd..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="1015.0" y="803.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1018.0" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="1015.2" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1018.2" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="1015.5" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.5" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (16 samples, 0.36%)</title><rect x="1016.0" y="803.0" width="4.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1019.0" y="814.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="1017.4" y="787.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1020.4" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.02%)</title><rect x="1017.6" y="787.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1020.6" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="1017.9" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.9" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.05%)</title><rect x="1018.2" y="787.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1021.2" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="1018.7" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1021.7" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="1019.0" y="787.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1022.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1019.2" y="787.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1022.2" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="1019.5" y="787.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1022.5" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.09%)</title><rect x="1020.3" y="803.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1023.3" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.07%)</title><rect x="1021.4" y="803.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1024.4" y="814.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (95 samples, 2.14%)</title><rect x="1022.2" y="803.0" width="25.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1025.2" y="814.0">p..</text>
</g>
<g>
<title>[unknown] (81 samples, 1.83%)</title><rect x="1025.9" y="787.0" width="21.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1028.9" y="798.0">[..</text>
</g>
<g>
<title>[unknown] (81 samples, 1.83%)</title><rect x="1025.9" y="771.0" width="21.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1028.9" y="782.0">[..</text>
</g>
<g>
<title>[unknown] (77 samples, 1.74%)</title><rect x="1026.9" y="755.0" width="20.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1029.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 1.69%)</title><rect x="1027.5" y="739.0" width="19.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1030.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 1.69%)</title><rect x="1027.5" y="723.0" width="19.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1030.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.49%)</title><rect x="1029.9" y="707.0" width="17.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1032.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.38%)</title><rect x="1031.2" y="691.0" width="16.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1034.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 1.33%)</title><rect x="1031.7" y="675.0" width="15.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1034.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1047.2" y="659.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1050.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1047.2" y="643.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1050.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1047.2" y="627.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1050.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1047.2" y="611.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1050.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1047.2" y="595.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1050.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndIncrement (1 samples, 0.02%)</title><rect x="1047.4" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.14%)</title><rect x="1047.7" y="899.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.11%)</title><rect x="1048.0" y="883.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.07%)</title><rect x="1048.5" y="867.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.07%)</title><rect x="1048.5" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.05%)</title><rect x="1048.5" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.05%)</title><rect x="1048.5" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.05%)</title><rect x="1048.5" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="1049.0" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="1049.0" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1049.0" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.11%)</title><rect x="1049.3" y="899.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.11%)</title><rect x="1049.3" y="883.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1052.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.07%)</title><rect x="1049.8" y="867.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1052.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.07%)</title><rect x="1049.8" y="851.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.05%)</title><rect x="1050.1" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="1050.6" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="1050.6" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="1050.6" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="1050.9" y="851.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1051.1" y="931.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (2 samples, 0.05%)</title><rect x="1051.4" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.4" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="1051.4" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1054.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1051.4" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.get$Lambda (1 samples, 0.02%)</title><rect x="1051.7" y="899.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1051.7" y="883.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (31 samples, 0.70%)</title><rect x="1051.9" y="1027.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1054.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.32%)</title><rect x="1052.2" y="1011.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.20%)</title><rect x="1053.5" y="995.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.18%)</title><rect x="1053.8" y="979.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.14%)</title><rect x="1054.3" y="963.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.02%)</title><rect x="1055.4" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1058.4" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="1055.7" y="947.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.16%)</title><rect x="1055.9" y="1011.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.9" y="995.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1058.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.9" y="979.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1058.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.9" y="963.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1058.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.9" y="947.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1058.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.9" y="931.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1058.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.9" y="915.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1058.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.9" y="899.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1058.9" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.14%)</title><rect x="1056.2" y="995.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1057.5" y="979.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1060.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1057.5" y="963.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1060.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1057.5" y="947.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1060.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1057.5" y="931.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1060.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1057.5" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1060.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1057.5" y="899.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1060.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1057.5" y="883.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1060.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.20%)</title><rect x="1057.8" y="1011.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (8 samples, 0.18%)</title><rect x="1060.2" y="1027.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1063.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.09%)</title><rect x="1061.3" y="1011.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.09%)</title><rect x="1061.3" y="995.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="1061.5" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.5" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="1061.5" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="1061.8" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1062.1" y="963.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.1" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.11%)</title><rect x="1062.3" y="1027.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (19 samples, 0.43%)</title><rect x="1063.6" y="1027.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.11%)</title><rect x="1063.9" y="1011.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1066.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.05%)</title><rect x="1063.9" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="1064.4" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1067.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1065.0" y="995.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1068.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.11%)</title><rect x="1065.2" y="1011.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.11%)</title><rect x="1065.2" y="995.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1068.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1065.2" y="979.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.2" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1066.3" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.3" y="990.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (8 samples, 0.18%)</title><rect x="1066.6" y="1011.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1069.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.34%)</title><rect x="1068.7" y="1027.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.34%)</title><rect x="1068.7" y="1011.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1071.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1071.4" y="995.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1074.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1071.4" y="979.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1074.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1071.4" y="963.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1074.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1071.4" y="947.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1074.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1071.4" y="931.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1074.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1071.4" y="915.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1074.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1071.4" y="899.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1074.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1071.6" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1071.6" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="1071.6" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.6" y="974.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.05%)</title><rect x="1072.2" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (247 samples, 5.57%)</title><rect x="1072.7" y="1043.0" width="65.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.7" y="1054.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (246 samples, 5.55%)</title><rect x="1073.0" y="1027.0" width="65.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.0" y="1038.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.07%)</title><rect x="1075.9" y="1011.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1078.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.22%)</title><rect x="1076.7" y="1011.0" width="14.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1079.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.22%)</title><rect x="1076.7" y="995.0" width="14.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1079.7" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (46 samples, 1.04%)</title><rect x="1076.7" y="979.0" width="12.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1079.7" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.09%)</title><rect x="1077.7" y="963.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.7" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.05%)</title><rect x="1078.8" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1081.8" y="974.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (11 samples, 0.25%)</title><rect x="1079.3" y="963.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1082.3" y="974.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.05%)</title><rect x="1082.3" y="963.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1085.3" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (19 samples, 0.43%)</title><rect x="1082.8" y="963.0" width="5.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1085.8" y="974.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1083.9" y="947.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.9" y="958.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.09%)</title><rect x="1084.1" y="947.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1087.1" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.05%)</title><rect x="1085.2" y="947.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.2" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.18%)</title><rect x="1085.7" y="947.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1088.7" y="958.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.07%)</title><rect x="1087.1" y="931.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.1" y="942.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.05%)</title><rect x="1087.9" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1090.9" y="974.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.05%)</title><rect x="1088.4" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1091.4" y="974.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.02%)</title><rect x="1088.9" y="979.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1091.9" y="990.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (5 samples, 0.11%)</title><rect x="1089.2" y="979.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1092.2" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="1090.5" y="979.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1093.5" y="990.0"></text>
</g>
<g>
<title>__GI___recv (178 samples, 4.01%)</title><rect x="1091.0" y="1011.0" width="47.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1094.0" y="1022.0">__GI..</text>
</g>
<g>
<title>[unknown] (156 samples, 3.52%)</title><rect x="1096.9" y="995.0" width="41.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1099.9" y="1006.0">[un..</text>
</g>
<g>
<title>[unknown] (156 samples, 3.52%)</title><rect x="1096.9" y="979.0" width="41.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1099.9" y="990.0">[un..</text>
</g>
<g>
<title>[unknown] (134 samples, 3.02%)</title><rect x="1102.8" y="963.0" width="35.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1105.8" y="974.0">[un..</text>
</g>
<g>
<title>[unknown] (132 samples, 2.98%)</title><rect x="1103.3" y="947.0" width="35.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1106.3" y="958.0">[un..</text>
</g>
<g>
<title>[unknown] (125 samples, 2.82%)</title><rect x="1105.1" y="931.0" width="33.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1108.1" y="942.0">[u..</text>
</g>
<g>
<title>[unknown] (120 samples, 2.71%)</title><rect x="1106.5" y="915.0" width="31.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1109.5" y="926.0">[u..</text>
</g>
<g>
<title>[unknown] (109 samples, 2.46%)</title><rect x="1109.4" y="899.0" width="29.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1112.4" y="910.0">[u..</text>
</g>
<g>
<title>[unknown] (82 samples, 1.85%)</title><rect x="1116.6" y="883.0" width="21.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1119.6" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (63 samples, 1.42%)</title><rect x="1121.6" y="867.0" width="16.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1124.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.95%)</title><rect x="1127.2" y="851.0" width="11.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1130.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.65%)</title><rect x="1130.7" y="835.0" width="7.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1133.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.34%)</title><rect x="1134.4" y="819.0" width="4.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1137.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1137.9" y="803.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1140.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1137.9" y="787.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1140.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1137.9" y="771.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1140.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1137.9" y="755.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1140.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1137.9" y="739.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1140.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1138.1" y="723.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1141.1" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1138.4" y="1059.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.4" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1138.4" y="1043.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1141.4" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="1138.7" y="1043.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1141.7" y="1054.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1138.7" y="1027.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1141.7" y="1038.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="1138.9" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.9" y="1102.0"></text>
</g>
<g>
<title>start_thread (191 samples, 4.31%)</title><rect x="1139.2" y="1091.0" width="50.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1142.2" y="1102.0">start..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (191 samples, 4.31%)</title><rect x="1139.2" y="1075.0" width="50.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1142.2" y="1086.0">threa..</text>
</g>
<g>
<title>Thread::call_run() (191 samples, 4.31%)</title><rect x="1139.2" y="1059.0" width="50.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1142.2" y="1070.0">Threa..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.02%)</title><rect x="1139.2" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1142.2" y="1054.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.02%)</title><rect x="1139.2" y="1027.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1142.2" y="1038.0"></text>
</g>
<g>
<title>SuspendibleThreadSet::join() (1 samples, 0.02%)</title><rect x="1139.2" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.2" y="1022.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1139.2" y="995.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1142.2" y="1006.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1139.2" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1142.2" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1139.2" y="963.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1142.2" y="974.0"></text>
</g>
<g>
<title>GangWorker::loop() (91 samples, 2.05%)</title><rect x="1139.5" y="1043.0" width="24.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1142.5" y="1054.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (90 samples, 2.03%)</title><rect x="1139.5" y="1027.0" width="23.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1142.5" y="1038.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.09%)</title><rect x="1139.5" y="1011.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1142.5" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.09%)</title><rect x="1139.5" y="995.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.5" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.09%)</title><rect x="1139.5" y="979.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.5" y="990.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (80 samples, 1.80%)</title><rect x="1140.5" y="1011.0" width="21.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.5" y="1022.0">G..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (80 samples, 1.80%)</title><rect x="1140.5" y="995.0" width="21.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1143.5" y="1006.0">G..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (79 samples, 1.78%)</title><rect x="1140.5" y="979.0" width="21.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.5" y="990.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (79 samples, 1.78%)</title><rect x="1140.5" y="963.0" width="21.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.5" y="974.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (79 samples, 1.78%)</title><rect x="1140.5" y="947.0" width="21.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.5" y="958.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (63 samples, 1.42%)</title><rect x="1140.5" y="931.0" width="16.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.5" y="942.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (2 samples, 0.05%)</title><rect x="1144.0" y="915.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.0" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (45 samples, 1.01%)</title><rect x="1144.5" y="915.0" width="12.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.5" y="926.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.02%)</title><rect x="1151.7" y="899.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1152.0" y="899.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1155.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1152.0" y="883.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1155.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1152.0" y="867.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1155.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1152.0" y="851.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1155.0" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (15 samples, 0.34%)</title><rect x="1152.5" y="899.0" width="4.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.5" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1156.5" y="915.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.5" y="926.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1157.0" y="915.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.0" y="926.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (16 samples, 0.36%)</title><rect x="1157.3" y="931.0" width="4.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.3" y="942.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (15 samples, 0.34%)</title><rect x="1157.3" y="915.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.3" y="926.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.07%)</title><rect x="1158.6" y="899.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.6" y="910.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="1159.1" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.1" y="894.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) [clone .constprop.519] (1 samples, 0.02%)</title><rect x="1159.4" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.4" y="910.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.02%)</title><rect x="1159.7" y="899.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.7" y="910.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.05%)</title><rect x="1159.9" y="899.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.9" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (3 samples, 0.07%)</title><rect x="1160.5" y="899.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.5" y="910.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.02%)</title><rect x="1161.3" y="915.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.3" y="926.0"></text>
</g>
<g>
<title>G1HotCardCache::drain(CardTableEntryClosure*, unsigned int) (1 samples, 0.02%)</title><rect x="1161.5" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.5" y="990.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1161.8" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.8" y="1022.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="1161.8" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.8" y="1006.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1161.8" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.8" y="990.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.02%)</title><rect x="1161.8" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.8" y="974.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (1 samples, 0.02%)</title><rect x="1161.8" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.8" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1161.8" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.8" y="942.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.02%)</title><rect x="1161.8" y="915.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.8" y="926.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.11%)</title><rect x="1162.1" y="1011.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.1" y="1022.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (5 samples, 0.11%)</title><rect x="1162.1" y="995.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.1" y="1006.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (5 samples, 0.11%)</title><rect x="1162.1" y="979.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.1" y="990.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (5 samples, 0.11%)</title><rect x="1162.1" y="963.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.1" y="974.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (3 samples, 0.07%)</title><rect x="1162.3" y="947.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.3" y="958.0"></text>
</g>
<g>
<title>InterpreterOopMap::iterate_oop(OffsetClosure*) const (1 samples, 0.02%)</title><rect x="1162.6" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.6" y="942.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="1162.6" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.6" y="926.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.02%)</title><rect x="1162.9" y="931.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.9" y="942.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="1162.9" y="915.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1165.9" y="926.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.02%)</title><rect x="1163.1" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.1" y="958.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1163.4" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.4" y="1038.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.02%)</title><rect x="1163.4" y="1011.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.4" y="1022.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (1 samples, 0.02%)</title><rect x="1163.4" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.4" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (1 samples, 0.02%)</title><rect x="1163.4" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.4" y="990.0"></text>
</g>
<g>
<title>JavaThread::run() (94 samples, 2.12%)</title><rect x="1163.7" y="1043.0" width="25.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.7" y="1054.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (94 samples, 2.12%)</title><rect x="1163.7" y="1027.0" width="25.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.7" y="1038.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (94 samples, 2.12%)</title><rect x="1163.7" y="1011.0" width="25.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.7" y="1022.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (93 samples, 2.10%)</title><rect x="1163.7" y="995.0" width="24.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.7" y="1006.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (89 samples, 2.01%)</title><rect x="1163.7" y="979.0" width="23.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.7" y="990.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (89 samples, 2.01%)</title><rect x="1163.7" y="963.0" width="23.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.7" y="974.0">C..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.02%)</title><rect x="1163.7" y="947.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.7" y="958.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.02%)</title><rect x="1163.7" y="931.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.7" y="942.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1163.7" y="915.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.7" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1163.7" y="899.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.7" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1163.7" y="883.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.7" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1163.7" y="867.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.7" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1163.7" y="851.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.7" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1163.7" y="835.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.7" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1163.7" y="819.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.7" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1163.7" y="803.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.7" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1163.7" y="787.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.7" y="798.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1163.7" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.7" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1163.7" y="755.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.7" y="766.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1163.7" y="739.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.7" y="750.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1163.7" y="723.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.7" y="734.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.02%)</title><rect x="1163.7" y="707.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.7" y="718.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (51 samples, 1.15%)</title><rect x="1163.9" y="947.0" width="13.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.9" y="958.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.05%)</title><rect x="1163.9" y="931.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.9" y="942.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.02%)</title><rect x="1163.9" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.9" y="926.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.02%)</title><rect x="1164.2" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1167.2" y="926.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.02%)</title><rect x="1164.5" y="931.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.5" y="942.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.02%)</title><rect x="1164.5" y="915.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.5" y="926.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1164.5" y="899.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.5" y="910.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1164.5" y="883.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.5" y="894.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.07%)</title><rect x="1164.7" y="931.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.7" y="942.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="1164.7" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.7" y="926.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.05%)</title><rect x="1165.0" y="915.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.0" y="926.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.05%)</title><rect x="1165.0" y="899.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.0" y="910.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.05%)</title><rect x="1165.0" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.0" y="894.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.05%)</title><rect x="1165.0" y="867.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.0" y="878.0"></text>
</g>
<g>
<title>ConLNode::Opcode() const (1 samples, 0.02%)</title><rect x="1165.0" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.0" y="862.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="1165.3" y="851.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.3" y="862.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="1165.3" y="835.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.3" y="846.0"></text>
</g>
<g>
<title>State::_sub_Op_ConI(Node const*) (1 samples, 0.02%)</title><rect x="1165.3" y="819.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.3" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.11%)</title><rect x="1165.5" y="931.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.5" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 0.11%)</title><rect x="1165.5" y="915.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.5" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1165.5" y="899.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.5" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.02%)</title><rect x="1165.8" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.8" y="910.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.02%)</title><rect x="1166.1" y="899.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.1" y="910.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="1166.3" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.3" y="910.0"></text>
</g>
<g>
<title>jmpDirNode::pinned() const (1 samples, 0.02%)</title><rect x="1166.6" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.6" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.02%)</title><rect x="1166.9" y="931.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.9" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (39 samples, 0.88%)</title><rect x="1167.1" y="931.0" width="10.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.1" y="942.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.02%)</title><rect x="1167.1" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.1" y="926.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.02%)</title><rect x="1167.4" y="915.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.4" y="926.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.02%)</title><rect x="1167.7" y="915.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.7" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.07%)</title><rect x="1167.9" y="915.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.9" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.02%)</title><rect x="1167.9" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.9" y="910.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.05%)</title><rect x="1168.2" y="899.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.2" y="910.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1168.5" y="883.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.5" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.05%)</title><rect x="1168.7" y="915.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.7" y="926.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1169.0" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.0" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.09%)</title><rect x="1169.3" y="915.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.3" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.02%)</title><rect x="1170.0" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.0" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::insert_proj(Block*, unsigned int, Node*, unsigned int) (1 samples, 0.02%)</title><rect x="1170.0" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.0" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (12 samples, 0.27%)</title><rect x="1170.3" y="915.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="926.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.05%)</title><rect x="1171.1" y="899.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.1" y="910.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.02%)</title><rect x="1171.6" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.6" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (1 samples, 0.02%)</title><rect x="1171.9" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.9" y="910.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1171.9" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.9" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.09%)</title><rect x="1172.2" y="899.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.2" y="910.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1173.0" y="883.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.0" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="1173.2" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.2" y="910.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.02%)</title><rect x="1173.2" y="883.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.2" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.02%)</title><rect x="1173.5" y="915.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.5" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.11%)</title><rect x="1173.8" y="915.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.8" y="926.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.09%)</title><rect x="1174.0" y="899.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.0" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (1 samples, 0.02%)</title><rect x="1175.1" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.1" y="926.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1175.1" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.1" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.05%)</title><rect x="1175.4" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.4" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.07%)</title><rect x="1175.9" y="915.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.9" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.05%)</title><rect x="1176.2" y="899.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.2" y="910.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="1176.7" y="915.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.7" y="926.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.05%)</title><rect x="1177.0" y="915.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.0" y="926.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1177.0" y="899.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.0" y="910.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1177.2" y="899.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.2" y="910.0"></text>
</g>
<g>
<title>Compile::Optimize() (24 samples, 0.54%)</title><rect x="1177.5" y="947.0" width="6.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.5" y="958.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (2 samples, 0.05%)</title><rect x="1177.5" y="931.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.5" y="942.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.05%)</title><rect x="1178.0" y="931.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.0" y="942.0"></text>
</g>
<g>
<title>RegionNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1178.3" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.3" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (16 samples, 0.36%)</title><rect x="1178.6" y="931.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.6" y="942.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.02%)</title><rect x="1178.6" y="915.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.6" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.05%)</title><rect x="1178.8" y="915.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.8" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.07%)</title><rect x="1179.4" y="915.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.4" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1179.9" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.9" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.07%)</title><rect x="1180.2" y="915.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.2" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.05%)</title><rect x="1180.4" y="899.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.4" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.05%)</title><rect x="1180.4" y="883.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.4" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.05%)</title><rect x="1180.4" y="867.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.4" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.02%)</title><rect x="1181.0" y="915.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.0" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.02%)</title><rect x="1181.0" y="899.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.0" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.11%)</title><rect x="1181.2" y="915.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.2" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (4 samples, 0.09%)</title><rect x="1181.5" y="899.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.5" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.02%)</title><rect x="1181.5" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.5" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::register_new_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1181.8" y="883.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.8" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.02%)</title><rect x="1182.0" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.0" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.02%)</title><rect x="1182.0" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.0" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_move_store_before_loop(Node*, Node*) (1 samples, 0.02%)</title><rect x="1182.3" y="883.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.3" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.02%)</title><rect x="1182.3" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.3" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="1182.6" y="915.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.6" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1182.6" y="899.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.6" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1182.6" y="883.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.6" y="894.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.02%)</title><rect x="1182.6" y="867.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.6" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.09%)</title><rect x="1182.8" y="931.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.8" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.09%)</title><rect x="1182.8" y="915.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.8" y="926.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1182.8" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.8" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform(Node*) (1 samples, 0.02%)</title><rect x="1182.8" y="883.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.8" y="894.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1183.1" y="899.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.1" y="910.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1183.1" y="883.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.1" y="894.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.02%)</title><rect x="1183.1" y="867.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.1" y="878.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1183.1" y="851.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.1" y="862.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.02%)</title><rect x="1183.3" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.3" y="910.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.02%)</title><rect x="1183.3" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.3" y="894.0"></text>
</g>
<g>
<title>CastPPNode::Opcode() const (1 samples, 0.02%)</title><rect x="1183.3" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.3" y="878.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1183.6" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.6" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1183.6" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1183.6" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.02%)</title><rect x="1183.6" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.27%)</title><rect x="1183.9" y="947.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.9" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.27%)</title><rect x="1183.9" y="931.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.27%)</title><rect x="1183.9" y="915.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.27%)</title><rect x="1183.9" y="899.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.02%)</title><rect x="1183.9" y="883.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="894.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.02%)</title><rect x="1183.9" y="867.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.9" y="878.0"></text>
</g>
<g>
<title>Parse::merge_exception(int) (1 samples, 0.02%)</title><rect x="1183.9" y="851.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.25%)</title><rect x="1184.1" y="883.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.25%)</title><rect x="1184.1" y="867.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.1" y="878.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1184.1" y="851.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.1" y="862.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1184.1" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.1" y="846.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1184.1" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.1" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1184.1" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.1" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1184.1" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.1" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.1" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.1" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.1" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.1" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1184.1" y="739.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.1" y="750.0"></text>
</g>
<g>
<title>ciObjArrayKlass::make(ciKlass*) (1 samples, 0.02%)</title><rect x="1184.1" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.1" y="734.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.02%)</title><rect x="1184.4" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.4" y="862.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1184.4" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.4" y="846.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1184.4" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.18%)</title><rect x="1184.7" y="851.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.18%)</title><rect x="1184.7" y="835.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.18%)</title><rect x="1184.7" y="819.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.18%)</title><rect x="1184.7" y="803.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.18%)</title><rect x="1184.7" y="787.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.16%)</title><rect x="1184.7" y="771.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.16%)</title><rect x="1184.7" y="755.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.7" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.16%)</title><rect x="1184.7" y="739.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.16%)</title><rect x="1184.7" y="723.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.16%)</title><rect x="1184.7" y="707.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.16%)</title><rect x="1184.7" y="691.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.16%)</title><rect x="1184.7" y="675.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.7" y="686.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.05%)</title><rect x="1184.7" y="659.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.7" y="670.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.05%)</title><rect x="1184.7" y="643.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.7" y="654.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.05%)</title><rect x="1184.7" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.7" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1184.7" y="611.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.7" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1184.7" y="595.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.7" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.7" y="579.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.7" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1184.7" y="563.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.7" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1184.7" y="547.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1184.7" y="531.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="542.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1184.7" y="515.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.7" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1184.7" y="499.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.7" y="510.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1184.7" y="483.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.7" y="494.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.7" y="467.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.7" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1184.7" y="451.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="462.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.7" y="435.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.7" y="446.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1184.7" y="419.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.7" y="430.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.02%)</title><rect x="1184.7" y="403.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.7" y="414.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1184.7" y="387.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.7" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::map_blocks() (1 samples, 0.02%)</title><rect x="1184.9" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1185.2" y="659.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1185.2" y="643.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1185.2" y="627.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1185.2" y="611.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1185.2" y="595.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1185.2" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.2" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1185.2" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.2" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1185.2" y="547.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.2" y="558.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.02%)</title><rect x="1185.2" y="531.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.2" y="542.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1185.2" y="515.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.2" y="526.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1185.2" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="510.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1185.2" y="483.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.5" y="531.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.5" y="515.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.5" y="499.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.5" y="483.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.5" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.5" y="467.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.5" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.5" y="451.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1185.5" y="435.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1185.5" y="419.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1185.5" y="403.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.5" y="387.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.5" y="371.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.5" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1185.5" y="355.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.5" y="366.0"></text>
</g>
<g>
<title>ReplacedNodes::apply(Node*, unsigned int) (1 samples, 0.02%)</title><rect x="1185.5" y="339.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.02%)</title><rect x="1185.7" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="638.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1185.7" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.7" y="622.0"></text>
</g>
<g>
<title>MulNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1185.7" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.0" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.0" y="627.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.0" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.0" y="595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.0" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.0" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.0" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.0" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.0" y="531.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.0" y="515.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.0" y="499.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.0" y="483.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.0" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="451.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.0" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.0" y="435.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.0" y="419.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.0" y="403.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.0" y="387.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.0" y="371.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.0" y="382.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="355.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="339.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.0" y="323.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.0" y="307.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.0" y="291.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.0" y="275.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.0" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.0" y="259.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.0" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="243.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.0" y="227.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.0" y="211.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.0" y="195.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.0" y="179.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.0" y="163.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.0" y="174.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.0" y="147.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.0" y="158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.0" y="131.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.0" y="142.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.0" y="115.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.0" y="126.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.0" y="99.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="110.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.0" y="83.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.0" y="94.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.0" y="67.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.0" y="78.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.0" y="51.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="62.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1186.0" y="35.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.0" y="46.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1186.3" y="659.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="670.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1186.3" y="643.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="654.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1186.3" y="627.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.3" y="638.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.02%)</title><rect x="1186.3" y="611.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.3" y="622.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1186.3" y="595.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.3" y="606.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1186.3" y="579.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1186.5" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.5" y="750.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.5" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.5" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.5" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>StoreNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Node*, BasicType, MemNode::MemOrd) (1 samples, 0.02%)</title><rect x="1186.5" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1186.5" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="654.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1186.5" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.5" y="638.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.8" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="755.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="723.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="659.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="643.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.8" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="579.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.8" y="547.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.8" y="531.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1186.8" y="515.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.8" y="499.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="510.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.8" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.8" y="494.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.02%)</title><rect x="1186.8" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="478.0"></text>
</g>
<g>
<title>IdealKit::store(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool) (1 samples, 0.02%)</title><rect x="1186.8" y="451.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="462.0"></text>
</g>
<g>
<title>StoreNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1186.8" y="435.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.8" y="446.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.02%)</title><rect x="1187.1" y="947.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="958.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.09%)</title><rect x="1187.3" y="979.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.3" y="990.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 0.09%)</title><rect x="1187.3" y="963.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="974.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 0.09%)</title><rect x="1187.3" y="947.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="958.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 0.09%)</title><rect x="1187.3" y="931.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.3" y="942.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.05%)</title><rect x="1187.3" y="915.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1187.3" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.02%)</title><rect x="1187.3" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.02%)</title><rect x="1187.3" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1187.3" y="851.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1187.3" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1187.3" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.3" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.3" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1187.3" y="771.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1187.3" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1187.3" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>ciInstanceKlass::implementor() (1 samples, 0.02%)</title><rect x="1187.3" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.3" y="734.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 0.02%)</title><rect x="1187.6" y="899.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.6" y="910.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 0.02%)</title><rect x="1187.6" y="883.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.6" y="894.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (1 samples, 0.02%)</title><rect x="1187.6" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.6" y="878.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.02%)</title><rect x="1187.9" y="915.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.02%)</title><rect x="1187.9" y="899.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.02%)</title><rect x="1187.9" y="883.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>C1_MacroAssembler::build_frame(int, int) (1 samples, 0.02%)</title><rect x="1187.9" y="867.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.02%)</title><rect x="1188.1" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="926.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.02%)</title><rect x="1188.1" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="910.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.02%)</title><rect x="1188.1" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.02%)</title><rect x="1188.1" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.02%)</title><rect x="1188.1" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>LinearScanWalker::insert_move(int, Interval*, Interval*) (1 samples, 0.02%)</title><rect x="1188.1" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.1" y="846.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.02%)</title><rect x="1188.1" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>LIR_InsertionBuffer::append(int, LIR_Op*) (1 samples, 0.02%)</title><rect x="1188.1" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.02%)</title><rect x="1188.4" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="1006.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.07%)</title><rect x="1188.7" y="1043.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.7" y="1054.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.07%)</title><rect x="1188.7" y="1027.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="1038.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="1188.7" y="1011.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="1022.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.02%)</title><rect x="1188.7" y="995.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.7" y="1006.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.02%)</title><rect x="1188.7" y="979.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.7" y="990.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1188.7" y="963.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="974.0"></text>
</g>
<g>
<title>PosixSemaphore::wait() (1 samples, 0.02%)</title><rect x="1188.7" y="947.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.7" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (1 samples, 0.02%)</title><rect x="1188.9" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="1022.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.02%)</title><rect x="1189.2" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.2" y="1022.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.02%)</title><rect x="1189.2" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.2" y="1006.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.02%)</title><rect x="1189.2" y="979.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.2" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.02%)</title><rect x="1189.2" y="963.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.2" y="974.0"></text>
</g>
<g>
<title>TraceMemoryManagerStats::TraceMemoryManagerStats(GCMemoryManager*, GCCause::Cause, bool, bool, bool, bool, bool, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1189.2" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.2" y="958.0"></text>
</g>
<g>
<title>elapsedTimer::start() (1 samples, 0.02%)</title><rect x="1189.2" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="942.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.05%)</title><rect x="1189.5" y="1043.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.5" y="1054.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.05%)</title><rect x="1189.5" y="1027.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="1038.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.05%)</title><rect x="1189.5" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.5" y="1022.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.05%)</title><rect x="1189.5" y="995.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="1006.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="1189.7" y="979.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.7" y="963.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
</g>
</svg>
