<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (1,091,442 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (747,846 samples, 68.52%)</title><rect x="10.0" y="339.0" width="808.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (747,846 samples, 68.52%)</title><rect x="10.0" y="323.0" width="808.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (747,846 samples, 68.52%)</title><rect x="10.0" y="307.0" width="808.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,918 samples, 0.27%)</title><rect x="10.0" y="291.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,918 samples, 0.27%)</title><rect x="10.0" y="275.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,858 samples, 0.26%)</title><rect x="10.0" y="259.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,858 samples, 0.26%)</title><rect x="10.0" y="243.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,858 samples, 0.26%)</title><rect x="10.0" y="227.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.run (200,693 samples, 18.39%)</title><rect x="13.2" y="291.0" width="216.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.2" y="302.0">ru/mail/polis/service/Sharde..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$executeAsync$5 (200,693 samples, 18.39%)</title><rect x="13.2" y="275.0" width="216.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.2" y="286.0">ru/mail/polis/service/Sharde..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (26,647 samples, 2.44%)</title><rect x="13.2" y="259.0" width="28.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.2" y="270.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26,647 samples, 2.44%)</title><rect x="13.2" y="243.0" width="28.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.2" y="254.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15,322 samples, 1.40%)</title><rect x="13.2" y="227.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.2" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15,322 samples, 1.40%)</title><rect x="13.2" y="211.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.2" y="222.0"></text>
</g>
<g>
<title>byte[] (15,310 samples, 1.40%)</title><rect x="13.2" y="195.0" width="16.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="16.2" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11,325 samples, 1.04%)</title><rect x="29.7" y="227.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.7" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11,325 samples, 1.04%)</title><rect x="29.7" y="211.0" width="12.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="32.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$62/1747025583.act (39,961 samples, 3.66%)</title><rect x="42.0" y="259.0" width="43.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.0" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$entity$0 (39,961 samples, 3.66%)</title><rect x="42.0" y="243.0" width="43.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.0" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (39,961 samples, 3.66%)</title><rect x="42.0" y="227.0" width="43.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.0" y="238.0">ru/m..</text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (1,210 samples, 0.11%)</title><rect x="42.0" y="211.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="45.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CountDownLatch (847 samples, 0.08%)</title><rect x="43.3" y="211.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="46.3" y="222.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (851 samples, 0.08%)</title><rect x="44.2" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.2" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (851 samples, 0.08%)</title><rect x="44.2" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (851 samples, 0.08%)</title><rect x="44.2" y="179.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="47.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (1,728 samples, 0.16%)</title><rect x="45.1" y="211.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.1" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (855 samples, 0.08%)</title><rect x="45.1" y="195.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="48.1" y="206.0"></text>
</g>
<g>
<title>java.lang.Object (873 samples, 0.08%)</title><rect x="46.0" y="195.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="49.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.&lt;init&gt; (1,737 samples, 0.16%)</title><rect x="47.0" y="211.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CountDownLatch$Sync (1,737 samples, 0.16%)</title><rect x="47.0" y="195.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="50.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.await (3,341 samples, 0.31%)</title><rect x="48.9" y="211.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquireSharedNanos (3,341 samples, 0.31%)</title><rect x="48.9" y="195.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireSharedNanos (3,341 samples, 0.31%)</title><rect x="48.9" y="179.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3,341 samples, 0.31%)</title><rect x="48.9" y="163.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,723 samples, 0.16%)</title><rect x="48.9" y="147.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="51.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.initializeSyncQueue (1,618 samples, 0.15%)</title><rect x="50.7" y="147.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,618 samples, 0.15%)</title><rect x="50.7" y="131.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="53.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (10,616 samples, 0.97%)</title><rect x="52.5" y="211.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.5" y="222.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3,733 samples, 0.34%)</title><rect x="52.5" y="195.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.5" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap (3,733 samples, 0.34%)</title><rect x="52.5" y="179.0" width="4.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="55.5" y="190.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,883 samples, 0.63%)</title><rect x="56.5" y="195.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.5" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,883 samples, 0.63%)</title><rect x="56.5" y="179.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.5" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,883 samples, 0.63%)</title><rect x="56.5" y="163.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.5" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5,141 samples, 0.47%)</title><rect x="56.5" y="147.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.5" y="158.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5,141 samples, 0.47%)</title><rect x="56.5" y="131.0" width="5.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="59.5" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,742 samples, 0.16%)</title><rect x="62.1" y="147.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.1" y="158.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,742 samples, 0.16%)</title><rect x="62.1" y="131.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (1,218 samples, 0.11%)</title><rect x="63.9" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,218 samples, 0.11%)</title><rect x="63.9" y="195.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,218 samples, 0.11%)</title><rect x="63.9" y="179.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.get$Lambda (1,218 samples, 0.11%)</title><rect x="63.9" y="163.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$66 (1,218 samples, 0.11%)</title><rect x="63.9" y="147.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="66.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNode (6,070 samples, 0.56%)</title><rect x="65.3" y="211.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/903793657.linkToTargetMethod (3,479 samples, 0.32%)</title><rect x="65.3" y="195.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,479 samples, 0.32%)</title><rect x="65.3" y="179.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.get$Lambda (3,479 samples, 0.32%)</title><rect x="65.3" y="163.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$70 (3,479 samples, 0.32%)</title><rect x="65.3" y="147.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="68.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,591 samples, 0.24%)</title><rect x="69.0" y="195.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,591 samples, 0.24%)</title><rect x="69.0" y="179.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,588 samples, 0.24%)</title><rect x="69.0" y="163.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="72.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocally (2,523 samples, 0.23%)</title><rect x="71.8" y="211.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,260 samples, 0.12%)</title><rect x="71.8" y="195.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,260 samples, 0.12%)</title><rect x="71.8" y="179.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$68/1100131846.get$Lambda (1,260 samples, 0.12%)</title><rect x="71.8" y="163.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$68 (1,260 samples, 0.12%)</title><rect x="71.8" y="147.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="74.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,263 samples, 0.12%)</title><rect x="73.2" y="195.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,263 samples, 0.12%)</title><rect x="73.2" y="179.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,255 samples, 0.11%)</title><rect x="73.2" y="163.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="76.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponses (9,820 samples, 0.90%)</title><rect x="74.6" y="211.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.6" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (4,929 samples, 0.45%)</title><rect x="74.6" y="195.0" width="5.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="77.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,891 samples, 0.45%)</title><rect x="79.9" y="195.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.9" y="206.0"></text>
</g>
<g>
<title>byte[] (2,072 samples, 0.19%)</title><rect x="79.9" y="179.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="82.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (1,638 samples, 0.15%)</title><rect x="82.1" y="179.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="85.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1,181 samples, 0.11%)</title><rect x="83.9" y="179.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="86.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (134,085 samples, 12.29%)</title><rect x="85.2" y="259.0" width="144.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.2" y="270.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (134,085 samples, 12.29%)</title><rect x="85.2" y="243.0" width="144.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.2" y="254.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (134,085 samples, 12.29%)</title><rect x="85.2" y="227.0" width="144.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.2" y="238.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one.nio.http.Response (13,652 samples, 1.25%)</title><rect x="85.2" y="211.0" width="14.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12,529 samples, 1.15%)</title><rect x="99.9" y="211.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="102.9" y="222.0"></text>
</g>
<g>
<title>byte[] (12,491 samples, 1.14%)</title><rect x="99.9" y="195.0" width="13.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="102.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (107,904 samples, 9.89%)</title><rect x="113.5" y="211.0" width="116.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.5" y="222.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (107,904 samples, 9.89%)</title><rect x="113.5" y="195.0" width="116.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.5" y="206.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (56,162 samples, 5.15%)</title><rect x="113.5" y="179.0" width="60.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.5" y="190.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (56,162 samples, 5.15%)</title><rect x="113.5" y="163.0" width="60.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="116.5" y="174.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (51,742 samples, 4.74%)</title><rect x="174.2" y="179.0" width="55.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.2" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (51,734 samples, 4.74%)</title><rect x="174.2" y="163.0" width="55.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.2" y="174.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (51,734 samples, 4.74%)</title><rect x="174.2" y="147.0" width="55.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="177.2" y="158.0">java...</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$68/1100131846.run (20,365 samples, 1.87%)</title><rect x="230.1" y="291.0" width="22.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.1" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocally$0 (20,365 samples, 1.87%)</title><rect x="230.1" y="275.0" width="22.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.1" y="286.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1,325 samples, 0.12%)</title><rect x="230.1" y="259.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,325 samples, 0.12%)</title><rect x="230.1" y="243.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,325 samples, 0.12%)</title><rect x="230.1" y="227.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="233.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (19,040 samples, 1.74%)</title><rect x="231.6" y="259.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="234.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (19,040 samples, 1.74%)</title><rect x="231.6" y="243.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (19,040 samples, 1.74%)</title><rect x="231.6" y="227.0" width="20.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.6" y="238.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,167 samples, 0.11%)</title><rect x="231.6" y="211.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="234.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5,031 samples, 0.46%)</title><rect x="232.8" y="211.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.8" y="222.0"></text>
</g>
<g>
<title>byte[] (2,016 samples, 0.18%)</title><rect x="232.8" y="195.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="235.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (1,688 samples, 0.15%)</title><rect x="235.0" y="195.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="238.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1,327 samples, 0.12%)</title><rect x="236.8" y="195.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="239.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (12,842 samples, 1.18%)</title><rect x="238.3" y="211.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (12,842 samples, 1.18%)</title><rect x="238.3" y="195.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5,880 samples, 0.54%)</title><rect x="238.3" y="179.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,880 samples, 0.54%)</title><rect x="238.3" y="163.0" width="6.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="241.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (6,962 samples, 0.64%)</title><rect x="244.6" y="179.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5,263 samples, 0.48%)</title><rect x="244.6" y="163.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.6" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,263 samples, 0.48%)</title><rect x="244.6" y="147.0" width="5.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="247.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (1,699 samples, 0.16%)</title><rect x="250.3" y="163.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (1,699 samples, 0.16%)</title><rect x="250.3" y="147.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Value (1,699 samples, 0.16%)</title><rect x="250.3" y="131.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="253.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.run (523,870 samples, 48.00%)</title><rect x="252.2" y="291.0" width="566.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.2" y="302.0">ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.run</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNode$1 (523,870 samples, 48.00%)</title><rect x="252.2" y="275.0" width="566.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.2" y="286.0">ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNode$1</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3,143 samples, 0.29%)</title><rect x="252.2" y="259.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,143 samples, 0.29%)</title><rect x="252.2" y="243.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,143 samples, 0.29%)</title><rect x="252.2" y="227.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="255.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (520,727 samples, 47.71%)</title><rect x="255.5" y="259.0" width="563.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.5" y="270.0">ru/mail/polis/service/ShardedHttpApiBase.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (520,727 samples, 47.71%)</title><rect x="255.5" y="243.0" width="563.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.5" y="254.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (520,727 samples, 47.71%)</title><rect x="255.5" y="227.0" width="563.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.5" y="238.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (3,408 samples, 0.31%)</title><rect x="255.5" y="211.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="258.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (446,992 samples, 40.95%)</title><rect x="259.2" y="211.0" width="483.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.2" y="222.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (29,846 samples, 2.73%)</title><rect x="259.2" y="195.0" width="32.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="262.2" y="206.0">by..</text>
</g>
<g>
<title>byte[] (417,146 samples, 38.22%)</title><rect x="291.5" y="195.0" width="451.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="294.5" y="206.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (40,396 samples, 3.70%)</title><rect x="742.5" y="211.0" width="43.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.5" y="222.0">one/..</text>
</g>
<g>
<title>byte[] (1,801 samples, 0.17%)</title><rect x="742.5" y="195.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="745.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,684 samples, 0.15%)</title><rect x="744.4" y="195.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,684 samples, 0.15%)</title><rect x="744.4" y="179.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (488 samples, 0.04%)</title><rect x="744.4" y="163.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="747.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,196 samples, 0.11%)</title><rect x="745.0" y="163.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.0" y="174.0"></text>
</g>
<g>
<title>byte[] (1,196 samples, 0.11%)</title><rect x="745.0" y="147.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="748.0" y="158.0"></text>
</g>
<g>
<title>one.nio.http.Response (372 samples, 0.03%)</title><rect x="746.3" y="195.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="749.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (29,526 samples, 2.71%)</title><rect x="746.7" y="195.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.7" y="206.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (29,526 samples, 2.71%)</title><rect x="746.7" y="179.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="749.7" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (29,526 samples, 2.71%)</title><rect x="746.7" y="163.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.7" y="174.0">on..</text>
</g>
<g>
<title>char[] (14,137 samples, 1.30%)</title><rect x="746.7" y="147.0" width="15.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="749.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7,140 samples, 0.65%)</title><rect x="761.9" y="147.0" width="7.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="764.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,249 samples, 0.76%)</title><rect x="769.7" y="147.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8,249 samples, 0.76%)</title><rect x="769.7" y="131.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8,249 samples, 0.76%)</title><rect x="769.7" y="115.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.7" y="126.0"></text>
</g>
<g>
<title>byte[] (8,249 samples, 0.76%)</title><rect x="769.7" y="99.0" width="8.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="772.7" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,748 samples, 0.16%)</title><rect x="778.6" y="195.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (1,748 samples, 0.16%)</title><rect x="778.6" y="179.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="781.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5,265 samples, 0.48%)</title><rect x="780.5" y="195.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,265 samples, 0.48%)</title><rect x="780.5" y="179.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,265 samples, 0.48%)</title><rect x="780.5" y="163.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2,664 samples, 0.24%)</title><rect x="780.5" y="147.0" width="2.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="783.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,601 samples, 0.24%)</title><rect x="783.4" y="147.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.4" y="158.0"></text>
</g>
<g>
<title>byte[] (2,601 samples, 0.24%)</title><rect x="783.4" y="131.0" width="2.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="786.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (20,948 samples, 1.92%)</title><rect x="786.2" y="211.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.2" y="222.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (20,948 samples, 1.92%)</title><rect x="786.2" y="195.0" width="22.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.2" y="206.0">o..</text>
</g>
<g>
<title>byte[] (20,887 samples, 1.91%)</title><rect x="786.2" y="179.0" width="22.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="789.2" y="190.0">b..</text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6,207 samples, 0.57%)</title><rect x="808.8" y="211.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,207 samples, 0.57%)</title><rect x="808.8" y="195.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,207 samples, 0.57%)</title><rect x="808.8" y="179.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (2,576 samples, 0.24%)</title><rect x="808.8" y="163.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="811.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,631 samples, 0.33%)</title><rect x="811.6" y="163.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.6" y="174.0"></text>
</g>
<g>
<title>byte[] (3,631 samples, 0.33%)</title><rect x="811.6" y="147.0" width="3.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="814.6" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (2,776 samples, 0.25%)</title><rect x="815.5" y="211.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.5" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (2,776 samples, 0.25%)</title><rect x="815.5" y="195.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.5" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (2,776 samples, 0.25%)</title><rect x="815.5" y="179.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.5" y="190.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2,776 samples, 0.25%)</title><rect x="815.5" y="163.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="818.5" y="174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (343,589 samples, 31.48%)</title><rect x="818.5" y="339.0" width="371.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.5" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18,856 samples, 1.73%)</title><rect x="818.5" y="323.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.5" y="334.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (18,856 samples, 1.73%)</title><rect x="818.5" y="307.0" width="20.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="821.5" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (324,733 samples, 29.75%)</title><rect x="838.9" y="323.0" width="351.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.9" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (324,733 samples, 29.75%)</title><rect x="838.9" y="307.0" width="351.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.9" y="318.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (324,731 samples, 29.75%)</title><rect x="838.9" y="291.0" width="351.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.9" y="302.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (121,697 samples, 11.15%)</title><rect x="838.9" y="275.0" width="131.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.9" y="286.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (121,697 samples, 11.15%)</title><rect x="838.9" y="259.0" width="131.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.9" y="270.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (12,555 samples, 1.15%)</title><rect x="838.9" y="243.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (12,555 samples, 1.15%)</title><rect x="838.9" y="227.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12,555 samples, 1.15%)</title><rect x="838.9" y="211.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (7,761 samples, 0.71%)</title><rect x="838.9" y="195.0" width="8.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="841.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,794 samples, 0.44%)</title><rect x="847.3" y="195.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.3" y="206.0"></text>
</g>
<g>
<title>byte[] (4,794 samples, 0.44%)</title><rect x="847.3" y="179.0" width="5.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="850.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (109,142 samples, 10.00%)</title><rect x="852.5" y="243.0" width="118.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.5" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (14,123 samples, 1.29%)</title><rect x="852.5" y="227.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (14,123 samples, 1.29%)</title><rect x="852.5" y="211.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14,123 samples, 1.29%)</title><rect x="852.5" y="195.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (4,463 samples, 0.41%)</title><rect x="852.5" y="179.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="855.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9,660 samples, 0.89%)</title><rect x="857.3" y="179.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.3" y="190.0"></text>
</g>
<g>
<title>byte[] (9,660 samples, 0.89%)</title><rect x="857.3" y="163.0" width="10.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="860.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (95,019 samples, 8.71%)</title><rect x="867.8" y="227.0" width="102.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.8" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (3,817 samples, 0.35%)</title><rect x="867.8" y="211.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,817 samples, 0.35%)</title><rect x="867.8" y="195.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3,817 samples, 0.35%)</title><rect x="867.8" y="179.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,817 samples, 0.35%)</title><rect x="867.8" y="163.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.8" y="174.0"></text>
</g>
<g>
<title>byte[] (3,817 samples, 0.35%)</title><rect x="867.8" y="147.0" width="4.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="870.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5,576 samples, 0.51%)</title><rect x="871.9" y="211.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5,576 samples, 0.51%)</title><rect x="871.9" y="195.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$62/1747025583.get$Lambda (5,576 samples, 0.51%)</title><rect x="871.9" y="179.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.9" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApi$$Lambda$62 (5,576 samples, 0.51%)</title><rect x="871.9" y="163.0" width="6.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="874.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,938 samples, 1.37%)</title><rect x="877.9" y="211.0" width="16.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="880.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14,938 samples, 1.37%)</title><rect x="877.9" y="195.0" width="16.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (14,938 samples, 1.37%)</title><rect x="877.9" y="179.0" width="16.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="880.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,667 samples, 0.34%)</title><rect x="894.1" y="211.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,667 samples, 0.34%)</title><rect x="894.1" y="195.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,667 samples, 0.34%)</title><rect x="894.1" y="179.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String (2,464 samples, 0.23%)</title><rect x="894.1" y="163.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="897.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,203 samples, 0.11%)</title><rect x="896.7" y="163.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.7" y="174.0"></text>
</g>
<g>
<title>byte[] (1,203 samples, 0.11%)</title><rect x="896.7" y="147.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="899.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8,719 samples, 0.80%)</title><rect x="898.0" y="211.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,719 samples, 0.80%)</title><rect x="898.0" y="195.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,719 samples, 0.80%)</title><rect x="898.0" y="179.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (6,199 samples, 0.57%)</title><rect x="898.0" y="163.0" width="6.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="901.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,520 samples, 0.23%)</title><rect x="904.7" y="163.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.7" y="174.0"></text>
</g>
<g>
<title>byte[] (2,520 samples, 0.23%)</title><rect x="904.7" y="147.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="907.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (5,555 samples, 0.51%)</title><rect x="907.5" y="211.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,163 samples, 0.11%)</title><rect x="907.5" y="195.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,163 samples, 0.11%)</title><rect x="907.5" y="179.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.get$Lambda (1,163 samples, 0.11%)</title><rect x="907.5" y="163.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$63 (1,163 samples, 0.11%)</title><rect x="907.5" y="147.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="910.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4,392 samples, 0.40%)</title><rect x="908.7" y="195.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4,392 samples, 0.40%)</title><rect x="908.7" y="179.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (4,367 samples, 0.40%)</title><rect x="908.7" y="163.0" width="4.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="911.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (45,010 samples, 4.12%)</title><rect x="913.5" y="211.0" width="48.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.5" y="222.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7,862 samples, 0.72%)</title><rect x="913.5" y="195.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (7,862 samples, 0.72%)</title><rect x="913.5" y="179.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7,862 samples, 0.72%)</title><rect x="913.5" y="163.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1,353 samples, 0.12%)</title><rect x="913.5" y="147.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="916.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6,509 samples, 0.60%)</title><rect x="914.9" y="147.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.9" y="158.0"></text>
</g>
<g>
<title>byte[] (6,509 samples, 0.60%)</title><rect x="914.9" y="131.0" width="7.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="917.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.all (7,153 samples, 0.66%)</title><rect x="922.0" y="195.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.0" y="206.0"></text>
</g>
<g>
<title>java/util/Set.of (7,153 samples, 0.66%)</title><rect x="922.0" y="179.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.0" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (5,490 samples, 0.50%)</title><rect x="922.0" y="163.0" width="5.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="925.0" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,663 samples, 0.15%)</title><rect x="927.9" y="163.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,663 samples, 0.15%)</title><rect x="927.9" y="147.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="930.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (29,995 samples, 2.75%)</title><rect x="929.7" y="195.0" width="32.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.7" y="206.0">ru..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,527 samples, 0.14%)</title><rect x="929.7" y="179.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (522 samples, 0.05%)</title><rect x="929.7" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="932.7" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (522 samples, 0.05%)</title><rect x="929.7" y="147.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="932.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,005 samples, 0.09%)</title><rect x="930.3" y="163.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="933.3" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (1,005 samples, 0.09%)</title><rect x="930.3" y="147.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="933.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (25,206 samples, 2.31%)</title><rect x="931.3" y="179.0" width="27.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="934.3" y="190.0">c..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (12,171 samples, 1.12%)</title><rect x="931.3" y="163.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="934.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (12,171 samples, 1.12%)</title><rect x="931.3" y="147.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (12,171 samples, 1.12%)</title><rect x="931.3" y="131.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.3" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (12,171 samples, 1.12%)</title><rect x="931.3" y="115.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="934.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (12,171 samples, 1.12%)</title><rect x="931.3" y="99.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.3" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (12,171 samples, 1.12%)</title><rect x="931.3" y="83.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12,171 samples, 1.12%)</title><rect x="931.3" y="67.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.3" y="78.0"></text>
</g>
<g>
<title>java.lang.String (9,842 samples, 0.90%)</title><rect x="931.3" y="51.0" width="10.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="934.3" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,329 samples, 0.21%)</title><rect x="942.0" y="51.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.0" y="62.0"></text>
</g>
<g>
<title>byte[] (2,329 samples, 0.21%)</title><rect x="942.0" y="35.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="945.0" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (4,522 samples, 0.41%)</title><rect x="944.5" y="163.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4,522 samples, 0.41%)</title><rect x="944.5" y="147.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4,522 samples, 0.41%)</title><rect x="944.5" y="131.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.5" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (4,522 samples, 0.41%)</title><rect x="944.5" y="115.0" width="4.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="947.5" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (6,012 samples, 0.55%)</title><rect x="949.4" y="163.0" width="6.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="952.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,501 samples, 0.23%)</title><rect x="955.9" y="163.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,501 samples, 0.23%)</title><rect x="955.9" y="147.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,501 samples, 0.23%)</title><rect x="955.9" y="131.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="958.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,501 samples, 0.23%)</title><rect x="955.9" y="115.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,501 samples, 0.23%)</title><rect x="955.9" y="99.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.9" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,486 samples, 0.23%)</title><rect x="955.9" y="83.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="958.9" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.RF (3,262 samples, 0.30%)</title><rect x="958.6" y="179.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="961.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (7,737 samples, 0.71%)</title><rect x="962.1" y="211.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (5,495 samples, 0.50%)</title><rect x="962.1" y="195.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,826 samples, 0.26%)</title><rect x="962.1" y="179.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,826 samples, 0.26%)</title><rect x="962.1" y="163.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.get$Lambda (2,826 samples, 0.26%)</title><rect x="962.1" y="147.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$63 (2,826 samples, 0.26%)</title><rect x="962.1" y="131.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="965.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,669 samples, 0.24%)</title><rect x="965.2" y="179.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,669 samples, 0.24%)</title><rect x="965.2" y="163.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,669 samples, 0.24%)</title><rect x="965.2" y="147.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="968.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (2,242 samples, 0.21%)</title><rect x="968.1" y="195.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,242 samples, 0.21%)</title><rect x="968.1" y="179.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,242 samples, 0.21%)</title><rect x="968.1" y="163.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.get$Lambda (2,242 samples, 0.21%)</title><rect x="968.1" y="147.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$66 (2,242 samples, 0.21%)</title><rect x="968.1" y="131.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="971.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (79,359 samples, 7.27%)</title><rect x="970.5" y="275.0" width="85.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.5" y="286.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (12,762 samples, 1.17%)</title><rect x="970.5" y="259.0" width="13.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="973.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (22,110 samples, 2.03%)</title><rect x="984.3" y="259.0" width="23.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.3" y="270.0">o..</text>
</g>
<g>
<title>java.lang.String[] (16,662 samples, 1.53%)</title><rect x="984.3" y="243.0" width="18.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="987.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (5,448 samples, 0.50%)</title><rect x="1002.3" y="243.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (44,487 samples, 4.08%)</title><rect x="1008.2" y="259.0" width="48.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1011.2" y="270.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (44,487 samples, 4.08%)</title><rect x="1008.2" y="243.0" width="48.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.2" y="254.0">one/..</text>
</g>
<g>
<title>char[] (15,065 samples, 1.38%)</title><rect x="1008.2" y="227.0" width="16.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1011.2" y="238.0"></text>
</g>
<g>
<title>char[] (8,034 samples, 0.74%)</title><rect x="1024.5" y="227.0" width="8.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1027.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (4,211 samples, 0.39%)</title><rect x="1033.2" y="227.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1036.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17,177 samples, 1.57%)</title><rect x="1037.7" y="227.0" width="18.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17,177 samples, 1.57%)</title><rect x="1037.7" y="211.0" width="18.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (17,177 samples, 1.57%)</title><rect x="1037.7" y="195.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.7" y="206.0"></text>
</g>
<g>
<title>byte[] (16,603 samples, 1.52%)</title><rect x="1037.7" y="179.0" width="18.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1040.7" y="190.0"></text>
</g>
<g>
<title>byte[] (574 samples, 0.05%)</title><rect x="1055.7" y="179.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1058.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7,216 samples, 0.66%)</title><rect x="1056.3" y="275.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.3" y="286.0"></text>
</g>
<g>
<title>byte[] (7,216 samples, 0.66%)</title><rect x="1056.3" y="259.0" width="7.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1059.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14,342 samples, 1.31%)</title><rect x="1064.1" y="275.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (14,342 samples, 1.31%)</title><rect x="1064.1" y="259.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14,342 samples, 1.31%)</title><rect x="1064.1" y="243.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (10,451 samples, 0.96%)</title><rect x="1064.1" y="227.0" width="11.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1067.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,891 samples, 0.36%)</title><rect x="1075.4" y="227.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.4" y="238.0"></text>
</g>
<g>
<title>byte[] (3,891 samples, 0.36%)</title><rect x="1075.4" y="211.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1078.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (102,117 samples, 9.36%)</title><rect x="1079.6" y="275.0" width="110.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.6" y="286.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (102,117 samples, 9.36%)</title><rect x="1079.6" y="259.0" width="110.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.6" y="270.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (45,468 samples, 4.17%)</title><rect x="1079.6" y="243.0" width="49.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1082.6" y="254.0">char[]</text>
</g>
<g>
<title>char[] (7,589 samples, 0.70%)</title><rect x="1128.8" y="243.0" width="8.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1131.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String (21,548 samples, 1.97%)</title><rect x="1137.0" y="243.0" width="23.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1140.0" y="254.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27,512 samples, 2.52%)</title><rect x="1160.3" y="243.0" width="29.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1163.3" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27,512 samples, 2.52%)</title><rect x="1160.3" y="227.0" width="29.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.3" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27,512 samples, 2.52%)</title><rect x="1160.3" y="211.0" width="29.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.3" y="222.0">ja..</text>
</g>
<g>
<title>byte[] (27,512 samples, 2.52%)</title><rect x="1160.3" y="195.0" width="29.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1163.3" y="206.0">by..</text>
</g>
</g>
</svg>
