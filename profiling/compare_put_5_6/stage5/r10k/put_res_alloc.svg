<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (1,037,877 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (748,528 samples, 72.12%)</title><rect x="10.0" y="339.0" width="851.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (748,528 samples, 72.12%)</title><rect x="10.0" y="323.0" width="851.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (748,528 samples, 72.12%)</title><rect x="10.0" y="307.0" width="851.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (789 samples, 0.08%)</title><rect x="10.0" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (789 samples, 0.08%)</title><rect x="10.0" y="275.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (780 samples, 0.08%)</title><rect x="10.0" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (780 samples, 0.08%)</title><rect x="10.0" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (780 samples, 0.08%)</title><rect x="10.0" y="227.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.run (214,940 samples, 20.71%)</title><rect x="10.9" y="291.0" width="244.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.9" y="302.0">ru/mail/polis/service/ShardedHtt..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$executeAsync$5 (214,940 samples, 20.71%)</title><rect x="10.9" y="275.0" width="244.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.9" y="286.0">ru/mail/polis/service/ShardedHtt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30,817 samples, 2.97%)</title><rect x="10.9" y="259.0" width="35.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.9" y="270.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30,817 samples, 2.97%)</title><rect x="10.9" y="243.0" width="35.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17,629 samples, 1.70%)</title><rect x="10.9" y="227.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17,629 samples, 1.70%)</title><rect x="10.9" y="211.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.9" y="222.0"></text>
</g>
<g>
<title>byte[] (17,609 samples, 1.70%)</title><rect x="10.9" y="195.0" width="20.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (13,188 samples, 1.27%)</title><rect x="30.9" y="227.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.9" y="238.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (13,188 samples, 1.27%)</title><rect x="30.9" y="211.0" width="15.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="33.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$62/1747025583.act (40,350 samples, 3.89%)</title><rect x="45.9" y="259.0" width="45.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.9" y="270.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$entity$0 (40,350 samples, 3.89%)</title><rect x="45.9" y="243.0" width="45.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.9" y="254.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (40,350 samples, 3.89%)</title><rect x="45.9" y="227.0" width="45.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.9" y="238.0">ru/m..</text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (1,387 samples, 0.13%)</title><rect x="45.9" y="211.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="48.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CountDownLatch (876 samples, 0.08%)</title><rect x="47.5" y="211.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="50.5" y="222.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (825 samples, 0.08%)</title><rect x="48.5" y="211.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.5" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (825 samples, 0.08%)</title><rect x="48.5" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.5" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (825 samples, 0.08%)</title><rect x="48.5" y="179.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="51.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (1,909 samples, 0.18%)</title><rect x="49.4" y="211.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (932 samples, 0.09%)</title><rect x="49.4" y="195.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="52.4" y="206.0"></text>
</g>
<g>
<title>java.lang.Object (977 samples, 0.09%)</title><rect x="50.5" y="195.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="53.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.&lt;init&gt; (1,824 samples, 0.18%)</title><rect x="51.6" y="211.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CountDownLatch$Sync (1,824 samples, 0.18%)</title><rect x="51.6" y="195.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="54.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CountDownLatch.await (3,446 samples, 0.33%)</title><rect x="53.7" y="211.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquireSharedNanos (3,446 samples, 0.33%)</title><rect x="53.7" y="195.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireSharedNanos (3,446 samples, 0.33%)</title><rect x="53.7" y="179.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3,446 samples, 0.33%)</title><rect x="53.7" y="163.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,768 samples, 0.17%)</title><rect x="53.7" y="147.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="56.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.initializeSyncQueue (1,678 samples, 0.16%)</title><rect x="55.7" y="147.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,678 samples, 0.16%)</title><rect x="55.7" y="131.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="58.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (9,627 samples, 0.93%)</title><rect x="57.6" y="211.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.6" y="222.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2,769 samples, 0.27%)</title><rect x="57.6" y="195.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.6" y="206.0"></text>
</g>
<g>
<title>java.util.HashMap (2,769 samples, 0.27%)</title><rect x="57.6" y="179.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="60.6" y="190.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,858 samples, 0.66%)</title><rect x="60.8" y="195.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.8" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,858 samples, 0.66%)</title><rect x="60.8" y="179.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.8" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,858 samples, 0.66%)</title><rect x="60.8" y="163.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.8" y="174.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5,158 samples, 0.50%)</title><rect x="60.8" y="147.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.8" y="158.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5,158 samples, 0.50%)</title><rect x="60.8" y="131.0" width="5.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="63.8" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,700 samples, 0.16%)</title><rect x="66.6" y="147.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.6" y="158.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,700 samples, 0.16%)</title><rect x="66.6" y="131.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="69.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (1,296 samples, 0.12%)</title><rect x="68.6" y="211.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,296 samples, 0.12%)</title><rect x="68.6" y="195.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,296 samples, 0.12%)</title><rect x="68.6" y="179.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.get$Lambda (1,296 samples, 0.12%)</title><rect x="68.6" y="163.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$66 (1,296 samples, 0.12%)</title><rect x="68.6" y="147.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="71.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNode (6,098 samples, 0.59%)</title><rect x="70.0" y="211.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/903793657.linkToTargetMethod (3,435 samples, 0.33%)</title><rect x="70.0" y="195.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3,435 samples, 0.33%)</title><rect x="70.0" y="179.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.get$Lambda (3,435 samples, 0.33%)</title><rect x="70.0" y="163.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$70 (3,435 samples, 0.33%)</title><rect x="70.0" y="147.0" width="3.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="73.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,663 samples, 0.26%)</title><rect x="73.9" y="195.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,663 samples, 0.26%)</title><rect x="73.9" y="179.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,663 samples, 0.26%)</title><rect x="73.9" y="163.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="76.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocally (2,624 samples, 0.25%)</title><rect x="77.0" y="211.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,327 samples, 0.13%)</title><rect x="77.0" y="195.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,327 samples, 0.13%)</title><rect x="77.0" y="179.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$68/1100131846.get$Lambda (1,327 samples, 0.13%)</title><rect x="77.0" y="163.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$68 (1,327 samples, 0.13%)</title><rect x="77.0" y="147.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="80.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,297 samples, 0.12%)</title><rect x="78.5" y="195.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,297 samples, 0.12%)</title><rect x="78.5" y="179.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,296 samples, 0.12%)</title><rect x="78.5" y="163.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="81.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponses (10,438 samples, 1.01%)</title><rect x="79.9" y="211.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.9" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (5,427 samples, 0.52%)</title><rect x="79.9" y="195.0" width="6.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="82.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5,011 samples, 0.48%)</title><rect x="86.1" y="195.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.1" y="206.0"></text>
</g>
<g>
<title>byte[] (2,144 samples, 0.21%)</title><rect x="86.1" y="179.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="89.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (1,690 samples, 0.16%)</title><rect x="88.6" y="179.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="91.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1,177 samples, 0.11%)</title><rect x="90.5" y="179.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="93.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (143,773 samples, 13.85%)</title><rect x="91.8" y="259.0" width="163.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.8" y="270.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (143,773 samples, 13.85%)</title><rect x="91.8" y="243.0" width="163.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.8" y="254.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (143,773 samples, 13.85%)</title><rect x="91.8" y="227.0" width="163.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.8" y="238.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one.nio.http.Response (16,045 samples, 1.55%)</title><rect x="91.8" y="211.0" width="18.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="94.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14,459 samples, 1.39%)</title><rect x="110.1" y="211.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.1" y="222.0"></text>
</g>
<g>
<title>byte[] (14,435 samples, 1.39%)</title><rect x="110.1" y="195.0" width="16.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="113.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (113,269 samples, 10.91%)</title><rect x="126.5" y="211.0" width="128.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.5" y="222.0">ru/mail/polis/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (113,269 samples, 10.91%)</title><rect x="126.5" y="195.0" width="128.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.5" y="206.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (58,859 samples, 5.67%)</title><rect x="126.5" y="179.0" width="66.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.5" y="190.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58,859 samples, 5.67%)</title><rect x="126.5" y="163.0" width="66.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="129.5" y="174.0">java.ni..</text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (54,410 samples, 5.24%)</title><rect x="193.4" y="179.0" width="61.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.4" y="190.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (54,399 samples, 5.24%)</title><rect x="193.4" y="163.0" width="61.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.4" y="174.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (54,399 samples, 5.24%)</title><rect x="193.4" y="147.0" width="61.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="196.4" y="158.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$68/1100131846.run (18,493 samples, 1.78%)</title><rect x="255.3" y="291.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.3" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocally$0 (18,493 samples, 1.78%)</title><rect x="255.3" y="275.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.3" y="286.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1,207 samples, 0.12%)</title><rect x="255.3" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,207 samples, 0.12%)</title><rect x="255.3" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,207 samples, 0.12%)</title><rect x="255.3" y="227.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="258.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.act (17,286 samples, 1.67%)</title><rect x="256.6" y="259.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$3 (17,286 samples, 1.67%)</title><rect x="256.6" y="243.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (17,286 samples, 1.67%)</title><rect x="256.6" y="227.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.6" y="238.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,210 samples, 0.12%)</title><rect x="256.6" y="211.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="259.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,641 samples, 0.45%)</title><rect x="258.0" y="211.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.0" y="222.0"></text>
</g>
<g>
<title>byte[] (1,866 samples, 0.18%)</title><rect x="258.0" y="195.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="261.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (1,515 samples, 0.15%)</title><rect x="260.1" y="195.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="263.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1,260 samples, 0.12%)</title><rect x="261.9" y="195.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="264.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (11,435 samples, 1.10%)</title><rect x="263.3" y="211.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (11,435 samples, 1.10%)</title><rect x="263.3" y="195.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.3" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4,951 samples, 0.48%)</title><rect x="263.3" y="179.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,951 samples, 0.48%)</title><rect x="263.3" y="163.0" width="5.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="266.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (6,484 samples, 0.62%)</title><rect x="268.9" y="179.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.9" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4,961 samples, 0.48%)</title><rect x="268.9" y="163.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.9" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,961 samples, 0.48%)</title><rect x="268.9" y="147.0" width="5.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="271.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (1,522 samples, 0.15%)</title><rect x="274.6" y="163.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (1,522 samples, 0.15%)</title><rect x="274.6" y="147.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Value (1,522 samples, 0.15%)</title><rect x="274.6" y="131.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="277.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.run (514,306 samples, 49.55%)</title><rect x="276.3" y="291.0" width="584.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.3" y="302.0">ru/mail/polis/service/ShardedHttpApiBase$$Lambda$70/424418497.run</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNode$1 (514,306 samples, 49.55%)</title><rect x="276.3" y="275.0" width="584.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.3" y="286.0">ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNode$1</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3,243 samples, 0.31%)</title><rect x="276.3" y="259.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,243 samples, 0.31%)</title><rect x="276.3" y="243.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (3,243 samples, 0.31%)</title><rect x="276.3" y="227.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="279.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (511,063 samples, 49.24%)</title><rect x="280.0" y="259.0" width="581.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.0" y="270.0">ru/mail/polis/service/ShardedHttpApiBase.proxy</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (511,063 samples, 49.24%)</title><rect x="280.0" y="243.0" width="581.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.0" y="254.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (511,063 samples, 49.24%)</title><rect x="280.0" y="227.0" width="581.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.0" y="238.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (3,240 samples, 0.31%)</title><rect x="280.0" y="211.0" width="3.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="283.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (441,948 samples, 42.58%)</title><rect x="283.7" y="211.0" width="502.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.7" y="222.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (37,696 samples, 3.63%)</title><rect x="283.7" y="195.0" width="42.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="286.7" y="206.0">byte[]</text>
</g>
<g>
<title>byte[] (404,252 samples, 38.95%)</title><rect x="326.5" y="195.0" width="459.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="329.5" y="206.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (35,432 samples, 3.41%)</title><rect x="786.1" y="211.0" width="40.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.1" y="222.0">one..</text>
</g>
<g>
<title>byte[] (1,760 samples, 0.17%)</title><rect x="786.1" y="195.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="789.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,645 samples, 0.16%)</title><rect x="788.1" y="195.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,645 samples, 0.16%)</title><rect x="788.1" y="179.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String (565 samples, 0.05%)</title><rect x="788.1" y="163.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="791.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,080 samples, 0.10%)</title><rect x="788.8" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.8" y="174.0"></text>
</g>
<g>
<title>byte[] (1,080 samples, 0.10%)</title><rect x="788.8" y="147.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="791.8" y="158.0"></text>
</g>
<g>
<title>one.nio.http.Response (419 samples, 0.04%)</title><rect x="790.0" y="195.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="793.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (25,221 samples, 2.43%)</title><rect x="790.5" y="195.0" width="28.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.5" y="206.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (25,221 samples, 2.43%)</title><rect x="790.5" y="179.0" width="28.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.5" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (25,221 samples, 2.43%)</title><rect x="790.5" y="163.0" width="28.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.5" y="174.0">on..</text>
</g>
<g>
<title>char[] (12,041 samples, 1.16%)</title><rect x="790.5" y="147.0" width="13.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="793.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (6,126 samples, 0.59%)</title><rect x="804.2" y="147.0" width="6.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="807.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,054 samples, 0.68%)</title><rect x="811.1" y="147.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,054 samples, 0.68%)</title><rect x="811.1" y="131.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7,054 samples, 0.68%)</title><rect x="811.1" y="115.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.1" y="126.0"></text>
</g>
<g>
<title>byte[] (7,054 samples, 0.68%)</title><rect x="811.1" y="99.0" width="8.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="814.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,391 samples, 0.13%)</title><rect x="819.2" y="195.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (1,391 samples, 0.13%)</title><rect x="819.2" y="179.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="822.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4,996 samples, 0.48%)</title><rect x="820.7" y="195.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,996 samples, 0.48%)</title><rect x="820.7" y="179.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,996 samples, 0.48%)</title><rect x="820.7" y="163.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2,413 samples, 0.23%)</title><rect x="820.7" y="147.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="823.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,583 samples, 0.25%)</title><rect x="823.5" y="147.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.5" y="158.0"></text>
</g>
<g>
<title>byte[] (2,583 samples, 0.25%)</title><rect x="823.5" y="131.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="826.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (21,860 samples, 2.11%)</title><rect x="826.4" y="211.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.4" y="222.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21,860 samples, 2.11%)</title><rect x="826.4" y="195.0" width="24.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.4" y="206.0">o..</text>
</g>
<g>
<title>byte[] (21,793 samples, 2.10%)</title><rect x="826.4" y="179.0" width="24.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="829.4" y="190.0">b..</text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5,941 samples, 0.57%)</title><rect x="851.3" y="211.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,941 samples, 0.57%)</title><rect x="851.3" y="195.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,941 samples, 0.57%)</title><rect x="851.3" y="179.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (2,448 samples, 0.24%)</title><rect x="851.3" y="163.0" width="2.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="854.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,493 samples, 0.34%)</title><rect x="854.1" y="163.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.1" y="174.0"></text>
</g>
<g>
<title>byte[] (3,493 samples, 0.34%)</title><rect x="854.1" y="147.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="857.1" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (2,642 samples, 0.25%)</title><rect x="858.0" y="211.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.0" y="222.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (2,642 samples, 0.25%)</title><rect x="858.0" y="195.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.0" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (2,642 samples, 0.25%)</title><rect x="858.0" y="179.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.0" y="190.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2,642 samples, 0.25%)</title><rect x="858.0" y="163.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="861.0" y="174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (289,342 samples, 27.88%)</title><rect x="861.0" y="339.0" width="329.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="864.0" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19,711 samples, 1.90%)</title><rect x="861.0" y="323.0" width="22.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.0" y="334.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (19,711 samples, 1.90%)</title><rect x="861.0" y="307.0" width="22.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="864.0" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (269,631 samples, 25.98%)</title><rect x="883.4" y="323.0" width="306.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="886.4" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (269,631 samples, 25.98%)</title><rect x="883.4" y="307.0" width="306.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.4" y="318.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (269,630 samples, 25.98%)</title><rect x="883.4" y="291.0" width="306.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.4" y="302.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (93,693 samples, 9.03%)</title><rect x="883.4" y="275.0" width="106.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.4" y="286.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (93,693 samples, 9.03%)</title><rect x="883.4" y="259.0" width="106.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.4" y="270.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (12,230 samples, 1.18%)</title><rect x="883.4" y="243.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (12,230 samples, 1.18%)</title><rect x="883.4" y="227.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12,230 samples, 1.18%)</title><rect x="883.4" y="211.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (7,810 samples, 0.75%)</title><rect x="883.4" y="195.0" width="8.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="886.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4,420 samples, 0.43%)</title><rect x="892.3" y="195.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.3" y="206.0"></text>
</g>
<g>
<title>byte[] (4,420 samples, 0.43%)</title><rect x="892.3" y="179.0" width="5.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="895.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (81,463 samples, 7.85%)</title><rect x="897.4" y="243.0" width="92.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.4" y="254.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (11,854 samples, 1.14%)</title><rect x="897.4" y="227.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (11,854 samples, 1.14%)</title><rect x="897.4" y="211.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11,854 samples, 1.14%)</title><rect x="897.4" y="195.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String (3,379 samples, 0.33%)</title><rect x="897.4" y="179.0" width="3.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="900.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8,475 samples, 0.82%)</title><rect x="901.2" y="179.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.2" y="190.0"></text>
</g>
<g>
<title>byte[] (8,475 samples, 0.82%)</title><rect x="901.2" y="163.0" width="9.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="904.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (69,609 samples, 6.71%)</title><rect x="910.8" y="227.0" width="79.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.8" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (3,422 samples, 0.33%)</title><rect x="910.8" y="211.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,422 samples, 0.33%)</title><rect x="910.8" y="195.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3,422 samples, 0.33%)</title><rect x="910.8" y="179.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,422 samples, 0.33%)</title><rect x="910.8" y="163.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.8" y="174.0"></text>
</g>
<g>
<title>byte[] (3,422 samples, 0.33%)</title><rect x="910.8" y="147.0" width="3.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="913.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4,887 samples, 0.47%)</title><rect x="914.7" y="211.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4,887 samples, 0.47%)</title><rect x="914.7" y="195.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$62/1747025583.get$Lambda (4,887 samples, 0.47%)</title><rect x="914.7" y="179.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApi$$Lambda$62 (4,887 samples, 0.47%)</title><rect x="914.7" y="163.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="917.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,405 samples, 0.71%)</title><rect x="920.3" y="211.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7,405 samples, 0.71%)</title><rect x="920.3" y="195.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7,405 samples, 0.71%)</title><rect x="920.3" y="179.0" width="8.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="923.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,611 samples, 0.35%)</title><rect x="928.7" y="211.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,611 samples, 0.35%)</title><rect x="928.7" y="195.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,611 samples, 0.35%)</title><rect x="928.7" y="179.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (2,576 samples, 0.25%)</title><rect x="928.7" y="163.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="931.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,035 samples, 0.10%)</title><rect x="931.6" y="163.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.6" y="174.0"></text>
</g>
<g>
<title>byte[] (1,035 samples, 0.10%)</title><rect x="931.6" y="147.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="934.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5,720 samples, 0.55%)</title><rect x="932.8" y="211.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,720 samples, 0.55%)</title><rect x="932.8" y="195.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,720 samples, 0.55%)</title><rect x="932.8" y="179.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (3,451 samples, 0.33%)</title><rect x="932.8" y="163.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="935.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,269 samples, 0.22%)</title><rect x="936.7" y="163.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="939.7" y="174.0"></text>
</g>
<g>
<title>byte[] (2,269 samples, 0.22%)</title><rect x="936.7" y="147.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="939.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (2,546 samples, 0.25%)</title><rect x="939.3" y="211.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,166 samples, 0.11%)</title><rect x="939.3" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,166 samples, 0.11%)</title><rect x="939.3" y="179.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.get$Lambda (1,166 samples, 0.11%)</title><rect x="939.3" y="163.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$63 (1,166 samples, 0.11%)</title><rect x="939.3" y="147.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="942.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,380 samples, 0.13%)</title><rect x="940.6" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,380 samples, 0.13%)</title><rect x="940.6" y="179.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,365 samples, 0.13%)</title><rect x="940.6" y="163.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="943.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (35,932 samples, 3.46%)</title><rect x="942.2" y="211.0" width="40.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.2" y="222.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6,562 samples, 0.63%)</title><rect x="942.2" y="195.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,562 samples, 0.63%)</title><rect x="942.2" y="179.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,562 samples, 0.63%)</title><rect x="942.2" y="163.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1,111 samples, 0.11%)</title><rect x="942.2" y="147.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="945.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,451 samples, 0.53%)</title><rect x="943.5" y="147.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.5" y="158.0"></text>
</g>
<g>
<title>byte[] (5,451 samples, 0.53%)</title><rect x="943.5" y="131.0" width="6.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="946.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.all (7,075 samples, 0.68%)</title><rect x="949.7" y="195.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.7" y="206.0"></text>
</g>
<g>
<title>java/util/Set.of (7,075 samples, 0.68%)</title><rect x="949.7" y="179.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.7" y="190.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (4,982 samples, 0.48%)</title><rect x="949.7" y="163.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="952.7" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (2,093 samples, 0.20%)</title><rect x="955.3" y="163.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,093 samples, 0.20%)</title><rect x="955.3" y="147.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="958.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (22,295 samples, 2.15%)</title><rect x="957.7" y="195.0" width="25.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="960.7" y="206.0">r..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,495 samples, 0.14%)</title><rect x="957.7" y="179.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (688 samples, 0.07%)</title><rect x="957.7" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.7" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (688 samples, 0.07%)</title><rect x="957.7" y="147.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="960.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (807 samples, 0.08%)</title><rect x="958.5" y="163.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (807 samples, 0.08%)</title><rect x="958.5" y="147.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="961.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (19,196 samples, 1.85%)</title><rect x="959.4" y="179.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.4" y="190.0">c..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (9,501 samples, 0.92%)</title><rect x="959.4" y="163.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (9,501 samples, 0.92%)</title><rect x="959.4" y="147.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9,501 samples, 0.92%)</title><rect x="959.4" y="131.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.4" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (9,501 samples, 0.92%)</title><rect x="959.4" y="115.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (9,501 samples, 0.92%)</title><rect x="959.4" y="99.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (9,501 samples, 0.92%)</title><rect x="959.4" y="83.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9,501 samples, 0.92%)</title><rect x="959.4" y="67.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.4" y="78.0"></text>
</g>
<g>
<title>java.lang.String (6,233 samples, 0.60%)</title><rect x="959.4" y="51.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="962.4" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,268 samples, 0.31%)</title><rect x="966.5" y="51.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.5" y="62.0"></text>
</g>
<g>
<title>byte[] (3,268 samples, 0.31%)</title><rect x="966.5" y="35.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="969.5" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (2,330 samples, 0.22%)</title><rect x="970.2" y="163.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2,330 samples, 0.22%)</title><rect x="970.2" y="147.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2,330 samples, 0.22%)</title><rect x="970.2" y="131.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.2" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (2,330 samples, 0.22%)</title><rect x="970.2" y="115.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="973.2" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (4,610 samples, 0.44%)</title><rect x="972.9" y="163.0" width="5.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="975.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,755 samples, 0.27%)</title><rect x="978.1" y="163.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,755 samples, 0.27%)</title><rect x="978.1" y="147.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,755 samples, 0.27%)</title><rect x="978.1" y="131.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,755 samples, 0.27%)</title><rect x="978.1" y="115.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,755 samples, 0.27%)</title><rect x="978.1" y="99.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.1" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,741 samples, 0.26%)</title><rect x="978.1" y="83.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="981.1" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.service.RF (1,604 samples, 0.15%)</title><rect x="981.2" y="179.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="984.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (6,086 samples, 0.59%)</title><rect x="983.1" y="211.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.executeAsync (4,335 samples, 0.42%)</title><rect x="983.1" y="195.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,969 samples, 0.19%)</title><rect x="983.1" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,969 samples, 0.19%)</title><rect x="983.1" y="163.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$63/1784510725.get$Lambda (1,969 samples, 0.19%)</title><rect x="983.1" y="147.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$63 (1,969 samples, 0.19%)</title><rect x="983.1" y="131.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="986.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,366 samples, 0.23%)</title><rect x="985.3" y="179.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,366 samples, 0.23%)</title><rect x="985.3" y="163.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,366 samples, 0.23%)</title><rect x="985.3" y="147.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="988.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (1,751 samples, 0.17%)</title><rect x="988.0" y="195.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,751 samples, 0.17%)</title><rect x="988.0" y="179.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,751 samples, 0.17%)</title><rect x="988.0" y="163.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$66/1265288566.get$Lambda (1,751 samples, 0.17%)</title><rect x="988.0" y="147.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$66 (1,751 samples, 0.17%)</title><rect x="988.0" y="131.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="991.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (68,772 samples, 6.63%)</title><rect x="990.0" y="275.0" width="78.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.0" y="286.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (8,240 samples, 0.79%)</title><rect x="990.0" y="259.0" width="9.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="993.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21,068 samples, 2.03%)</title><rect x="999.3" y="259.0" width="24.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.3" y="270.0">o..</text>
</g>
<g>
<title>java.lang.String[] (17,862 samples, 1.72%)</title><rect x="999.3" y="243.0" width="20.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1002.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (3,206 samples, 0.31%)</title><rect x="1019.6" y="243.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1022.6" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39,464 samples, 3.80%)</title><rect x="1023.3" y="259.0" width="44.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.3" y="270.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (39,464 samples, 3.80%)</title><rect x="1023.3" y="243.0" width="44.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.3" y="254.0">one/..</text>
</g>
<g>
<title>char[] (12,228 samples, 1.18%)</title><rect x="1023.3" y="227.0" width="13.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1026.3" y="238.0"></text>
</g>
<g>
<title>char[] (6,376 samples, 0.61%)</title><rect x="1037.2" y="227.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1040.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (6,909 samples, 0.67%)</title><rect x="1044.4" y="227.0" width="7.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1047.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,951 samples, 1.34%)</title><rect x="1052.3" y="227.0" width="15.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1055.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13,951 samples, 1.34%)</title><rect x="1052.3" y="211.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13,951 samples, 1.34%)</title><rect x="1052.3" y="195.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.3" y="206.0"></text>
</g>
<g>
<title>byte[] (13,124 samples, 1.26%)</title><rect x="1052.3" y="179.0" width="14.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1055.3" y="190.0"></text>
</g>
<g>
<title>byte[] (827 samples, 0.08%)</title><rect x="1067.2" y="179.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4,840 samples, 0.47%)</title><rect x="1068.2" y="275.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.2" y="286.0"></text>
</g>
<g>
<title>byte[] (4,840 samples, 0.47%)</title><rect x="1068.2" y="259.0" width="5.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1071.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9,676 samples, 0.93%)</title><rect x="1073.7" y="275.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (9,676 samples, 0.93%)</title><rect x="1073.7" y="259.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9,676 samples, 0.93%)</title><rect x="1073.7" y="243.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (6,397 samples, 0.62%)</title><rect x="1073.7" y="227.0" width="7.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1076.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,279 samples, 0.32%)</title><rect x="1080.9" y="227.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.9" y="238.0"></text>
</g>
<g>
<title>byte[] (3,279 samples, 0.32%)</title><rect x="1080.9" y="211.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1083.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (92,649 samples, 8.93%)</title><rect x="1084.7" y="275.0" width="105.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.7" y="286.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (92,649 samples, 8.93%)</title><rect x="1084.7" y="259.0" width="105.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.7" y="270.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (36,291 samples, 3.50%)</title><rect x="1084.7" y="243.0" width="41.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1087.7" y="254.0">cha..</text>
</g>
<g>
<title>char[] (9,527 samples, 0.92%)</title><rect x="1125.9" y="243.0" width="10.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1128.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (20,531 samples, 1.98%)</title><rect x="1136.8" y="243.0" width="23.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1139.8" y="254.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26,300 samples, 2.53%)</title><rect x="1160.1" y="243.0" width="29.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1163.1" y="254.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26,300 samples, 2.53%)</title><rect x="1160.1" y="227.0" width="29.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.1" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26,300 samples, 2.53%)</title><rect x="1160.1" y="211.0" width="29.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.1" y="222.0">ja..</text>
</g>
<g>
<title>byte[] (26,300 samples, 2.53%)</title><rect x="1160.1" y="195.0" width="29.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1163.1" y="206.0">by..</text>
</g>
</g>
</svg>
