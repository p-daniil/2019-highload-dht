<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (234,021 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (134,244 samples, 57.36%)</title><rect x="10.0" y="867.0" width="676.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (134,244 samples, 57.36%)</title><rect x="10.0" y="851.0" width="676.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (134,244 samples, 57.36%)</title><rect x="10.0" y="835.0" width="676.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (49,430 samples, 21.12%)</title><rect x="10.0" y="819.0" width="249.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (49,430 samples, 21.12%)</title><rect x="10.0" y="803.0" width="249.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (49,430 samples, 21.12%)</title><rect x="10.0" y="787.0" width="249.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableF..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1746722692.apply (49,427 samples, 21.12%)</title><rect x="10.0" y="771.0" width="249.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="782.0">jdk/internal/net/http/MultiExchan..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (49,427 samples, 21.12%)</title><rect x="10.0" y="755.0" width="249.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchan..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (49,427 samples, 21.12%)</title><rect x="10.0" y="739.0" width="249.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchan..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (30,658 samples, 13.10%)</title><rect x="10.0" y="723.0" width="154.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (30,658 samples, 13.10%)</title><rect x="10.0" y="707.0" width="154.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (30,658 samples, 13.10%)</title><rect x="10.0" y="691.0" width="154.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (29,894 samples, 12.77%)</title><rect x="10.0" y="675.0" width="150.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (29,894 samples, 12.77%)</title><rect x="10.0" y="659.0" width="150.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (29,894 samples, 12.77%)</title><rect x="10.0" y="643.0" width="150.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurren..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/505924666.apply (29,894 samples, 12.77%)</title><rect x="10.0" y="627.0" width="150.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="638.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (29,894 samples, 12.77%)</title><rect x="10.0" y="611.0" width="150.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (29,894 samples, 12.77%)</title><rect x="10.0" y="595.0" width="150.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/544549740.apply (29,894 samples, 12.77%)</title><rect x="10.0" y="579.0" width="150.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (29,894 samples, 12.77%)</title><rect x="10.0" y="563.0" width="150.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (29,894 samples, 12.77%)</title><rect x="10.0" y="547.0" width="150.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (29,894 samples, 12.77%)</title><rect x="10.0" y="531.0" width="150.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (29,894 samples, 12.77%)</title><rect x="10.0" y="515.0" width="150.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurren..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/1123664723.apply (29,894 samples, 12.77%)</title><rect x="10.0" y="499.0" width="150.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (29,894 samples, 12.77%)</title><rect x="10.0" y="483.0" width="150.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (29,894 samples, 12.77%)</title><rect x="10.0" y="467.0" width="150.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (29,894 samples, 12.77%)</title><rect x="10.0" y="451.0" width="150.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (5,575 samples, 2.38%)</title><rect x="10.0" y="435.0" width="28.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="446.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5,575 samples, 2.38%)</title><rect x="10.0" y="419.0" width="28.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5,575 samples, 2.38%)</title><rect x="10.0" y="403.0" width="28.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,565 samples, 2.38%)</title><rect x="10.0" y="387.0" width="28.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,565 samples, 2.38%)</title><rect x="10.0" y="371.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="382.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,520 samples, 0.65%)</title><rect x="10.0" y="355.0" width="7.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4,045 samples, 1.73%)</title><rect x="17.7" y="355.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (4,045 samples, 1.73%)</title><rect x="17.7" y="339.0" width="20.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (24,319 samples, 10.39%)</title><rect x="38.1" y="435.0" width="122.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.1" y="446.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (24,319 samples, 10.39%)</title><rect x="38.1" y="419.0" width="122.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.1" y="430.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (22,976 samples, 9.82%)</title><rect x="38.1" y="403.0" width="115.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.1" y="414.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (22,976 samples, 9.82%)</title><rect x="38.1" y="387.0" width="115.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.1" y="398.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (22,976 samples, 9.82%)</title><rect x="38.1" y="371.0" width="115.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.1" y="382.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (16,353 samples, 6.99%)</title><rect x="38.1" y="355.0" width="82.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="41.1" y="366.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6,623 samples, 2.83%)</title><rect x="120.6" y="355.0" width="33.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.6" y="366.0">su..</text>
</g>
<g>
<title>java.lang.Object (6,623 samples, 2.83%)</title><rect x="120.6" y="339.0" width="33.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="123.6" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1,343 samples, 0.57%)</title><rect x="154.0" y="403.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1,343 samples, 0.57%)</title><rect x="154.0" y="387.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,343 samples, 0.57%)</title><rect x="154.0" y="371.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,343 samples, 0.57%)</title><rect x="154.0" y="355.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1,343 samples, 0.57%)</title><rect x="154.0" y="339.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1,343 samples, 0.57%)</title><rect x="154.0" y="323.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1,343 samples, 0.57%)</title><rect x="154.0" y="307.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1,343 samples, 0.57%)</title><rect x="154.0" y="291.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,343 samples, 0.57%)</title><rect x="154.0" y="275.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,290 samples, 0.55%)</title><rect x="154.0" y="259.0" width="6.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="157.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (53 samples, 0.02%)</title><rect x="160.5" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object (53 samples, 0.02%)</title><rect x="160.5" y="243.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="163.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (764 samples, 0.33%)</title><rect x="160.8" y="675.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (764 samples, 0.33%)</title><rect x="160.8" y="659.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (665 samples, 0.28%)</title><rect x="160.8" y="643.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (665 samples, 0.28%)</title><rect x="160.8" y="627.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (665 samples, 0.28%)</title><rect x="160.8" y="611.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$153/493368255.apply (665 samples, 0.28%)</title><rect x="160.8" y="595.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (665 samples, 0.28%)</title><rect x="160.8" y="579.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (665 samples, 0.28%)</title><rect x="160.8" y="563.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (665 samples, 0.28%)</title><rect x="160.8" y="547.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (665 samples, 0.28%)</title><rect x="160.8" y="531.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (665 samples, 0.28%)</title><rect x="160.8" y="515.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (665 samples, 0.28%)</title><rect x="160.8" y="499.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (665 samples, 0.28%)</title><rect x="160.8" y="483.0" width="3.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="163.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (99 samples, 0.04%)</title><rect x="164.1" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (99 samples, 0.04%)</title><rect x="164.1" y="627.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="167.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (17,405 samples, 7.44%)</title><rect x="164.6" y="723.0" width="87.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.6" y="734.0">jdk/intern..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (6,365 samples, 2.72%)</title><rect x="164.6" y="707.0" width="32.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="167.6" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (11,040 samples, 4.72%)</title><rect x="196.7" y="707.0" width="55.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.7" y="718.0">jdk/i..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11,040 samples, 4.72%)</title><rect x="196.7" y="691.0" width="55.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.7" y="702.0">sun/n..</text>
</g>
<g>
<title>java.lang.Object (11,040 samples, 4.72%)</title><rect x="196.7" y="675.0" width="55.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.7" y="686.0">java...</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1,359 samples, 0.58%)</title><rect x="252.4" y="723.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (1,359 samples, 0.58%)</title><rect x="252.4" y="707.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1,339 samples, 0.57%)</title><rect x="252.5" y="691.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.5" y="702.0"></text>
</g>
<g>
<title>java.lang.Class (1,339 samples, 0.57%)</title><rect x="252.5" y="675.0" width="6.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="255.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24,234 samples, 10.36%)</title><rect x="259.2" y="819.0" width="122.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.2" y="830.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (24,234 samples, 10.36%)</title><rect x="259.2" y="803.0" width="122.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.2" y="814.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4,639 samples, 1.98%)</title><rect x="259.2" y="787.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.2" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,639 samples, 1.98%)</title><rect x="259.2" y="771.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.2" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,639 samples, 1.98%)</title><rect x="259.2" y="755.0" width="23.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.2" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,639 samples, 1.98%)</title><rect x="259.2" y="739.0" width="23.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.2" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,639 samples, 1.98%)</title><rect x="259.2" y="723.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.2" y="734.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,639 samples, 1.98%)</title><rect x="259.2" y="707.0" width="23.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="262.2" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (19,595 samples, 8.37%)</title><rect x="282.6" y="787.0" width="98.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.6" y="798.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (19,595 samples, 8.37%)</title><rect x="282.6" y="771.0" width="98.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.6" y="782.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (19,595 samples, 8.37%)</title><rect x="282.6" y="755.0" width="98.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.6" y="766.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19,595 samples, 8.37%)</title><rect x="282.6" y="739.0" width="98.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.6" y="750.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19,595 samples, 8.37%)</title><rect x="282.6" y="723.0" width="98.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.6" y="734.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19,595 samples, 8.37%)</title><rect x="282.6" y="707.0" width="98.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.6" y="718.0">jdk/internal..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19,595 samples, 8.37%)</title><rect x="282.6" y="691.0" width="98.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="285.6" y="702.0">java.util.co..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$249/1883349404.run (448 samples, 0.19%)</title><rect x="381.4" y="819.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (448 samples, 0.19%)</title><rect x="381.4" y="803.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (448 samples, 0.19%)</title><rect x="381.4" y="787.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (441 samples, 0.19%)</title><rect x="381.5" y="771.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (441 samples, 0.19%)</title><rect x="381.5" y="755.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (441 samples, 0.19%)</title><rect x="381.5" y="739.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (441 samples, 0.19%)</title><rect x="381.5" y="723.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (441 samples, 0.19%)</title><rect x="381.5" y="707.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (441 samples, 0.19%)</title><rect x="381.5" y="691.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (441 samples, 0.19%)</title><rect x="381.5" y="675.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (441 samples, 0.19%)</title><rect x="381.5" y="659.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (438 samples, 0.19%)</title><rect x="381.5" y="643.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (438 samples, 0.19%)</title><rect x="381.5" y="627.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (438 samples, 0.19%)</title><rect x="381.5" y="611.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (438 samples, 0.19%)</title><rect x="381.5" y="595.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (438 samples, 0.19%)</title><rect x="381.5" y="579.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (364 samples, 0.16%)</title><rect x="381.5" y="563.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/323025519.apply (345 samples, 0.15%)</title><rect x="381.5" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (345 samples, 0.15%)</title><rect x="381.5" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (345 samples, 0.15%)</title><rect x="381.5" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (345 samples, 0.15%)</title><rect x="381.5" y="499.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (345 samples, 0.15%)</title><rect x="381.5" y="483.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="384.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (345 samples, 0.15%)</title><rect x="381.5" y="467.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/173598784.run (345 samples, 0.15%)</title><rect x="381.5" y="451.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (345 samples, 0.15%)</title><rect x="381.5" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (345 samples, 0.15%)</title><rect x="381.5" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (345 samples, 0.15%)</title><rect x="381.5" y="403.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="384.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (345 samples, 0.15%)</title><rect x="381.5" y="387.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (345 samples, 0.15%)</title><rect x="381.5" y="371.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (345 samples, 0.15%)</title><rect x="381.5" y="355.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (345 samples, 0.15%)</title><rect x="381.5" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (345 samples, 0.15%)</title><rect x="381.5" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (345 samples, 0.15%)</title><rect x="381.5" y="307.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (345 samples, 0.15%)</title><rect x="381.5" y="291.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (345 samples, 0.15%)</title><rect x="381.5" y="275.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (345 samples, 0.15%)</title><rect x="381.5" y="259.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1257117945.run (345 samples, 0.15%)</title><rect x="381.5" y="243.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (345 samples, 0.15%)</title><rect x="381.5" y="227.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (345 samples, 0.15%)</title><rect x="381.5" y="211.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (345 samples, 0.15%)</title><rect x="381.5" y="195.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (345 samples, 0.15%)</title><rect x="381.5" y="179.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="384.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (339 samples, 0.14%)</title><rect x="381.5" y="163.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (339 samples, 0.14%)</title><rect x="381.5" y="147.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (62 samples, 0.03%)</title><rect x="381.5" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="384.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (62 samples, 0.03%)</title><rect x="381.5" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (62 samples, 0.03%)</title><rect x="381.5" y="99.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (62 samples, 0.03%)</title><rect x="381.5" y="83.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (62 samples, 0.03%)</title><rect x="381.5" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (277 samples, 0.12%)</title><rect x="381.8" y="131.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (277 samples, 0.12%)</title><rect x="381.8" y="115.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (277 samples, 0.12%)</title><rect x="381.8" y="99.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (277 samples, 0.12%)</title><rect x="381.8" y="83.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (277 samples, 0.12%)</title><rect x="381.8" y="67.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.8" y="78.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (218 samples, 0.09%)</title><rect x="381.8" y="51.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="384.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (59 samples, 0.03%)</title><rect x="382.9" y="51.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.9" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (59 samples, 0.03%)</title><rect x="382.9" y="35.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="385.9" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (74 samples, 0.03%)</title><rect x="383.3" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (74 samples, 0.03%)</title><rect x="383.3" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$239/1779741848.apply (74 samples, 0.03%)</title><rect x="383.3" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (74 samples, 0.03%)</title><rect x="383.3" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (74 samples, 0.03%)</title><rect x="383.3" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (74 samples, 0.03%)</title><rect x="383.3" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (74 samples, 0.03%)</title><rect x="383.3" y="467.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="386.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (60,132 samples, 25.70%)</title><rect x="383.7" y="819.0" width="303.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.7" y="830.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (60,132 samples, 25.70%)</title><rect x="383.7" y="803.0" width="303.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.7" y="814.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (27,497 samples, 11.75%)</title><rect x="383.7" y="787.0" width="138.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.7" y="798.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (27,497 samples, 11.75%)</title><rect x="383.7" y="771.0" width="138.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="386.7" y="782.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (27,497 samples, 11.75%)</title><rect x="383.7" y="755.0" width="138.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.7" y="766.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (22,658 samples, 9.68%)</title><rect x="383.7" y="739.0" width="114.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.7" y="750.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (22,658 samples, 9.68%)</title><rect x="383.7" y="723.0" width="114.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.7" y="734.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (22,658 samples, 9.68%)</title><rect x="383.7" y="707.0" width="114.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.7" y="718.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (22,658 samples, 9.68%)</title><rect x="383.7" y="691.0" width="114.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.7" y="702.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (22,658 samples, 9.68%)</title><rect x="383.7" y="675.0" width="114.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.7" y="686.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (22,658 samples, 9.68%)</title><rect x="383.7" y="659.0" width="114.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.7" y="670.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (22,658 samples, 9.68%)</title><rect x="383.7" y="643.0" width="114.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.7" y="654.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (22,658 samples, 9.68%)</title><rect x="383.7" y="627.0" width="114.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.7" y="638.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (22,658 samples, 9.68%)</title><rect x="383.7" y="611.0" width="114.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.7" y="622.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (16,236 samples, 6.94%)</title><rect x="383.7" y="595.0" width="81.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="386.7" y="606.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6,422 samples, 2.74%)</title><rect x="465.6" y="595.0" width="32.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.6" y="606.0">su..</text>
</g>
<g>
<title>java.lang.Object (6,422 samples, 2.74%)</title><rect x="465.6" y="579.0" width="32.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="468.6" y="590.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4,839 samples, 2.07%)</title><rect x="497.9" y="739.0" width="24.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.9" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,839 samples, 2.07%)</title><rect x="497.9" y="723.0" width="24.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.9" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,839 samples, 2.07%)</title><rect x="497.9" y="707.0" width="24.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,839 samples, 2.07%)</title><rect x="497.9" y="691.0" width="24.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.9" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4,839 samples, 2.07%)</title><rect x="497.9" y="675.0" width="24.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.9" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,839 samples, 2.07%)</title><rect x="497.9" y="659.0" width="24.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.9" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,839 samples, 2.07%)</title><rect x="497.9" y="643.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4,839 samples, 2.07%)</title><rect x="497.9" y="627.0" width="24.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.9" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,839 samples, 2.07%)</title><rect x="497.9" y="611.0" width="24.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4,839 samples, 2.07%)</title><rect x="497.9" y="595.0" width="24.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="500.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4,839 samples, 2.07%)</title><rect x="497.9" y="579.0" width="24.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4,839 samples, 2.07%)</title><rect x="497.9" y="563.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="500.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,839 samples, 2.07%)</title><rect x="497.9" y="547.0" width="24.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,065 samples, 0.46%)</title><rect x="497.9" y="531.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1134623909.apply (1,063 samples, 0.45%)</title><rect x="498.0" y="515.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1,063 samples, 0.45%)</title><rect x="498.0" y="499.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1,063 samples, 0.45%)</title><rect x="498.0" y="483.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1,063 samples, 0.45%)</title><rect x="498.0" y="467.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1,063 samples, 0.45%)</title><rect x="498.0" y="451.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Class (1,063 samples, 0.45%)</title><rect x="498.0" y="435.0" width="5.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="501.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3,774 samples, 1.61%)</title><rect x="503.3" y="531.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,774 samples, 1.61%)</title><rect x="503.3" y="515.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$239/1779741848.apply (3,774 samples, 1.61%)</title><rect x="503.3" y="499.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3,774 samples, 1.61%)</title><rect x="503.3" y="483.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3,774 samples, 1.61%)</title><rect x="503.3" y="467.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3,774 samples, 1.61%)</title><rect x="503.3" y="451.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (3,774 samples, 1.61%)</title><rect x="503.3" y="435.0" width="19.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="506.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (32,635 samples, 13.95%)</title><rect x="522.3" y="787.0" width="164.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.3" y="798.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (32,635 samples, 13.95%)</title><rect x="522.3" y="771.0" width="164.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.3" y="782.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (32,635 samples, 13.95%)</title><rect x="522.3" y="755.0" width="164.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.3" y="766.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (32,635 samples, 13.95%)</title><rect x="522.3" y="739.0" width="164.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.3" y="750.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (32,635 samples, 13.95%)</title><rect x="522.3" y="723.0" width="164.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.3" y="734.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (32,516 samples, 13.89%)</title><rect x="522.3" y="707.0" width="164.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.3" y="718.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (32,516 samples, 13.89%)</title><rect x="522.3" y="691.0" width="164.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.3" y="702.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (32,516 samples, 13.89%)</title><rect x="522.3" y="675.0" width="164.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.3" y="686.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1257117945.run (32,515 samples, 13.89%)</title><rect x="522.3" y="659.0" width="164.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.3" y="670.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (32,515 samples, 13.89%)</title><rect x="522.3" y="643.0" width="164.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.3" y="654.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (32,515 samples, 13.89%)</title><rect x="522.3" y="627.0" width="164.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.3" y="638.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (32,515 samples, 13.89%)</title><rect x="522.3" y="611.0" width="164.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.3" y="622.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (32,515 samples, 13.89%)</title><rect x="522.3" y="595.0" width="164.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.3" y="606.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (463 samples, 0.20%)</title><rect x="522.3" y="579.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="525.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (32,052 samples, 13.70%)</title><rect x="524.7" y="579.0" width="161.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.7" y="590.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (32,052 samples, 13.70%)</title><rect x="524.7" y="563.0" width="161.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="527.7" y="574.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5,963 samples, 2.55%)</title><rect x="524.7" y="547.0" width="30.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.7" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5,963 samples, 2.55%)</title><rect x="524.7" y="531.0" width="30.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.7" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5,963 samples, 2.55%)</title><rect x="524.7" y="515.0" width="30.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.7" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5,963 samples, 2.55%)</title><rect x="524.7" y="499.0" width="30.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.7" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,963 samples, 2.55%)</title><rect x="524.7" y="483.0" width="30.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.7" y="494.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,260 samples, 0.97%)</title><rect x="524.7" y="467.0" width="11.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="527.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3,703 samples, 1.58%)</title><rect x="536.1" y="467.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (3,703 samples, 1.58%)</title><rect x="536.1" y="451.0" width="18.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="539.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26,089 samples, 11.15%)</title><rect x="554.7" y="547.0" width="131.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.7" y="558.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26,089 samples, 11.15%)</title><rect x="554.7" y="531.0" width="131.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="557.7" y="542.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (26,089 samples, 11.15%)</title><rect x="554.7" y="515.0" width="131.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.7" y="526.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (26,089 samples, 11.15%)</title><rect x="554.7" y="499.0" width="131.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.7" y="510.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26,089 samples, 11.15%)</title><rect x="554.7" y="483.0" width="131.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.7" y="494.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (21,275 samples, 9.09%)</title><rect x="554.7" y="467.0" width="107.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="557.7" y="478.0">jdk.internal...</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4,814 samples, 2.06%)</title><rect x="662.0" y="467.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.0" y="478.0">s..</text>
</g>
<g>
<title>java.lang.Object (4,814 samples, 2.06%)</title><rect x="662.0" y="451.0" width="24.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="665.0" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (119 samples, 0.05%)</title><rect x="686.3" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (119 samples, 0.05%)</title><rect x="686.3" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (119 samples, 0.05%)</title><rect x="686.3" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (119 samples, 0.05%)</title><rect x="686.3" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (119 samples, 0.05%)</title><rect x="686.3" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (119 samples, 0.05%)</title><rect x="686.3" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (119 samples, 0.05%)</title><rect x="686.3" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (119 samples, 0.05%)</title><rect x="686.3" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (119 samples, 0.05%)</title><rect x="686.3" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (119 samples, 0.05%)</title><rect x="686.3" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (119 samples, 0.05%)</title><rect x="686.3" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (119 samples, 0.05%)</title><rect x="686.3" y="531.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (119 samples, 0.05%)</title><rect x="686.3" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (92 samples, 0.04%)</title><rect x="686.4" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (92 samples, 0.04%)</title><rect x="686.4" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$239/1779741848.apply (92 samples, 0.04%)</title><rect x="686.4" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (92 samples, 0.04%)</title><rect x="686.4" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (92 samples, 0.04%)</title><rect x="686.4" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (92 samples, 0.04%)</title><rect x="686.4" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (92 samples, 0.04%)</title><rect x="686.4" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="689.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (60 samples, 0.03%)</title><rect x="686.9" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (60 samples, 0.03%)</title><rect x="686.9" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (60 samples, 0.03%)</title><rect x="686.9" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (60 samples, 0.03%)</title><rect x="686.9" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (60 samples, 0.03%)</title><rect x="686.9" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (60 samples, 0.03%)</title><rect x="686.9" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (60 samples, 0.03%)</title><rect x="686.9" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (60 samples, 0.03%)</title><rect x="686.9" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$151/1114120118.accept (60 samples, 0.03%)</title><rect x="686.9" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$sendResponseAsync$0 (60 samples, 0.03%)</title><rect x="686.9" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (60 samples, 0.03%)</title><rect x="686.9" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.9" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.StorageSession (60 samples, 0.03%)</title><rect x="686.9" y="691.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="689.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (80,986 samples, 34.61%)</title><rect x="687.2" y="867.0" width="408.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.2" y="878.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (707 samples, 0.30%)</title><rect x="687.2" y="851.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/765718646.accept (707 samples, 0.30%)</title><rect x="687.2" y="835.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (707 samples, 0.30%)</title><rect x="687.2" y="819.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (707 samples, 0.30%)</title><rect x="687.2" y="803.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (707 samples, 0.30%)</title><rect x="687.2" y="787.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (707 samples, 0.30%)</title><rect x="687.2" y="771.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (707 samples, 0.30%)</title><rect x="687.2" y="755.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (707 samples, 0.30%)</title><rect x="687.2" y="739.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (707 samples, 0.30%)</title><rect x="687.2" y="723.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (707 samples, 0.30%)</title><rect x="687.2" y="707.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (707 samples, 0.30%)</title><rect x="687.2" y="691.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/1546095920.run (707 samples, 0.30%)</title><rect x="687.2" y="675.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (707 samples, 0.30%)</title><rect x="687.2" y="659.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (693 samples, 0.30%)</title><rect x="687.2" y="643.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (693 samples, 0.30%)</title><rect x="687.2" y="627.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (693 samples, 0.30%)</title><rect x="687.2" y="611.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (693 samples, 0.30%)</title><rect x="687.2" y="595.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (693 samples, 0.30%)</title><rect x="687.2" y="579.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (693 samples, 0.30%)</title><rect x="687.2" y="563.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (693 samples, 0.30%)</title><rect x="687.2" y="547.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (693 samples, 0.30%)</title><rect x="687.2" y="531.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (590 samples, 0.25%)</title><rect x="687.2" y="515.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (590 samples, 0.25%)</title><rect x="687.2" y="499.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (590 samples, 0.25%)</title><rect x="687.2" y="483.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (590 samples, 0.25%)</title><rect x="687.2" y="467.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (590 samples, 0.25%)</title><rect x="687.2" y="451.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (590 samples, 0.25%)</title><rect x="687.2" y="435.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (590 samples, 0.25%)</title><rect x="687.2" y="419.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (590 samples, 0.25%)</title><rect x="687.2" y="403.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="690.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (103 samples, 0.04%)</title><rect x="690.2" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (103 samples, 0.04%)</title><rect x="690.2" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (103 samples, 0.04%)</title><rect x="690.2" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (103 samples, 0.04%)</title><rect x="690.2" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (103 samples, 0.04%)</title><rect x="690.2" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (103 samples, 0.04%)</title><rect x="690.2" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (103 samples, 0.04%)</title><rect x="690.2" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="693.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (54,505 samples, 23.29%)</title><rect x="690.8" y="851.0" width="274.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="693.8" y="862.0">jdk.internal.net.http.HttpClientImpl$..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,982 samples, 0.85%)</title><rect x="965.6" y="851.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$182/4401270.run (530 samples, 0.23%)</title><rect x="965.6" y="835.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (530 samples, 0.23%)</title><rect x="965.6" y="819.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (530 samples, 0.23%)</title><rect x="965.6" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (530 samples, 0.23%)</title><rect x="965.6" y="787.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (530 samples, 0.23%)</title><rect x="965.6" y="771.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (530 samples, 0.23%)</title><rect x="965.6" y="755.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/1546095920.run (530 samples, 0.23%)</title><rect x="965.6" y="739.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (530 samples, 0.23%)</title><rect x="965.6" y="723.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (530 samples, 0.23%)</title><rect x="965.6" y="707.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (530 samples, 0.23%)</title><rect x="965.6" y="691.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (530 samples, 0.23%)</title><rect x="965.6" y="675.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (530 samples, 0.23%)</title><rect x="965.6" y="659.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (530 samples, 0.23%)</title><rect x="965.6" y="643.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (530 samples, 0.23%)</title><rect x="965.6" y="627.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (530 samples, 0.23%)</title><rect x="965.6" y="611.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (530 samples, 0.23%)</title><rect x="965.6" y="595.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (468 samples, 0.20%)</title><rect x="965.6" y="579.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (468 samples, 0.20%)</title><rect x="965.6" y="563.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (468 samples, 0.20%)</title><rect x="965.6" y="547.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (468 samples, 0.20%)</title><rect x="965.6" y="531.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (468 samples, 0.20%)</title><rect x="965.6" y="515.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (468 samples, 0.20%)</title><rect x="965.6" y="499.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (468 samples, 0.20%)</title><rect x="965.6" y="483.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (468 samples, 0.20%)</title><rect x="965.6" y="467.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="968.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (62 samples, 0.03%)</title><rect x="968.0" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (62 samples, 0.03%)</title><rect x="968.0" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (62 samples, 0.03%)</title><rect x="968.0" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (62 samples, 0.03%)</title><rect x="968.0" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.03%)</title><rect x="968.0" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.03%)</title><rect x="968.0" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.03%)</title><rect x="968.0" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="971.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$185/203120582.run (1,452 samples, 0.62%)</title><rect x="968.3" y="835.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (1,452 samples, 0.62%)</title><rect x="968.3" y="819.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,452 samples, 0.62%)</title><rect x="968.3" y="803.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,452 samples, 0.62%)</title><rect x="968.3" y="787.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,452 samples, 0.62%)</title><rect x="968.3" y="771.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1,299 samples, 0.56%)</title><rect x="968.3" y="755.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,299 samples, 0.56%)</title><rect x="968.3" y="739.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,299 samples, 0.56%)</title><rect x="968.3" y="723.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,299 samples, 0.56%)</title><rect x="968.3" y="707.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,299 samples, 0.56%)</title><rect x="968.3" y="691.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,299 samples, 0.56%)</title><rect x="968.3" y="675.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,299 samples, 0.56%)</title><rect x="968.3" y="659.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,299 samples, 0.56%)</title><rect x="968.3" y="643.0" width="6.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="971.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (153 samples, 0.07%)</title><rect x="974.8" y="755.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (153 samples, 0.07%)</title><rect x="974.8" y="739.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (153 samples, 0.07%)</title><rect x="974.8" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (153 samples, 0.07%)</title><rect x="974.8" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (153 samples, 0.07%)</title><rect x="974.8" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (153 samples, 0.07%)</title><rect x="974.8" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="977.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (153 samples, 0.07%)</title><rect x="974.8" y="659.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="977.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (976 samples, 0.42%)</title><rect x="975.6" y="851.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (976 samples, 0.42%)</title><rect x="975.6" y="835.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="978.6" y="846.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (976 samples, 0.42%)</title><rect x="975.6" y="819.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="978.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (14,551 samples, 6.22%)</title><rect x="980.5" y="851.0" width="73.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.5" y="862.0">jdk/inte..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (14,551 samples, 6.22%)</title><rect x="980.5" y="835.0" width="73.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="983.5" y="846.0">jdk.inte..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (8,207 samples, 3.51%)</title><rect x="1053.9" y="851.0" width="41.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.9" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (8,207 samples, 3.51%)</title><rect x="1053.9" y="835.0" width="41.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.9" y="846.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (8,207 samples, 3.51%)</title><rect x="1053.9" y="819.0" width="41.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.9" y="830.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (8,207 samples, 3.51%)</title><rect x="1053.9" y="803.0" width="41.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.9" y="814.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (8,207 samples, 3.51%)</title><rect x="1053.9" y="787.0" width="41.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.9" y="798.0">sun..</text>
</g>
<g>
<title>java.lang.Object (8,207 samples, 3.51%)</title><rect x="1053.9" y="771.0" width="41.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1056.9" y="782.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (58 samples, 0.02%)</title><rect x="1095.3" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (58 samples, 0.02%)</title><rect x="1095.3" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (58 samples, 0.02%)</title><rect x="1095.3" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (58 samples, 0.02%)</title><rect x="1095.3" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (58 samples, 0.02%)</title><rect x="1095.3" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.3" y="798.0"></text>
</g>
<g>
<title>java.lang.Object (58 samples, 0.02%)</title><rect x="1095.3" y="771.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1098.3" y="782.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (18,731 samples, 8.00%)</title><rect x="1095.6" y="867.0" width="94.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.6" y="878.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/Session.process (18,731 samples, 8.00%)</title><rect x="1095.6" y="851.0" width="94.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.6" y="862.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,038 samples, 0.44%)</title><rect x="1095.6" y="835.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,038 samples, 0.44%)</title><rect x="1095.6" y="819.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,038 samples, 0.44%)</title><rect x="1095.6" y="803.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,038 samples, 0.44%)</title><rect x="1095.6" y="787.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (1,038 samples, 0.44%)</title><rect x="1095.6" y="771.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (1,038 samples, 0.44%)</title><rect x="1095.6" y="755.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (981 samples, 0.42%)</title><rect x="1095.6" y="739.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNodeAsync (458 samples, 0.20%)</title><rect x="1095.6" y="723.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (458 samples, 0.20%)</title><rect x="1095.6" y="707.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.proxy (458 samples, 0.20%)</title><rect x="1095.6" y="691.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (458 samples, 0.20%)</title><rect x="1095.6" y="675.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (458 samples, 0.20%)</title><rect x="1095.6" y="659.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1098.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (458 samples, 0.20%)</title><rect x="1095.6" y="643.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (458 samples, 0.20%)</title><rect x="1095.6" y="627.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (458 samples, 0.20%)</title><rect x="1095.6" y="611.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1098.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (458 samples, 0.20%)</title><rect x="1095.6" y="595.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (458 samples, 0.20%)</title><rect x="1095.6" y="579.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (458 samples, 0.20%)</title><rect x="1095.6" y="563.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (372 samples, 0.16%)</title><rect x="1095.6" y="547.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (372 samples, 0.16%)</title><rect x="1095.6" y="531.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (372 samples, 0.16%)</title><rect x="1095.6" y="515.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (372 samples, 0.16%)</title><rect x="1095.6" y="499.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (372 samples, 0.16%)</title><rect x="1095.6" y="483.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (372 samples, 0.16%)</title><rect x="1095.6" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (372 samples, 0.16%)</title><rect x="1095.6" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (372 samples, 0.16%)</title><rect x="1095.6" y="435.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1098.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (86 samples, 0.04%)</title><rect x="1097.4" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (86 samples, 0.04%)</title><rect x="1097.4" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (86 samples, 0.04%)</title><rect x="1097.4" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (86 samples, 0.04%)</title><rect x="1097.4" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (86 samples, 0.04%)</title><rect x="1097.4" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (86 samples, 0.04%)</title><rect x="1097.4" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (86 samples, 0.04%)</title><rect x="1097.4" y="451.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1100.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocallyAsync (523 samples, 0.22%)</title><rect x="1097.9" y="723.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (523 samples, 0.22%)</title><rect x="1097.9" y="707.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (523 samples, 0.22%)</title><rect x="1097.9" y="691.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (349 samples, 0.15%)</title><rect x="1097.9" y="675.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (349 samples, 0.15%)</title><rect x="1097.9" y="659.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (349 samples, 0.15%)</title><rect x="1097.9" y="643.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1100.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (349 samples, 0.15%)</title><rect x="1097.9" y="627.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (349 samples, 0.15%)</title><rect x="1097.9" y="611.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (349 samples, 0.15%)</title><rect x="1097.9" y="595.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (349 samples, 0.15%)</title><rect x="1097.9" y="579.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (349 samples, 0.15%)</title><rect x="1097.9" y="563.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1100.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (174 samples, 0.07%)</title><rect x="1099.6" y="675.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1102.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (174 samples, 0.07%)</title><rect x="1099.6" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (174 samples, 0.07%)</title><rect x="1099.6" y="643.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (174 samples, 0.07%)</title><rect x="1099.6" y="627.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (174 samples, 0.07%)</title><rect x="1099.6" y="611.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (174 samples, 0.07%)</title><rect x="1099.6" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (174 samples, 0.07%)</title><rect x="1099.6" y="579.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1102.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (57 samples, 0.02%)</title><rect x="1100.5" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (57 samples, 0.02%)</title><rect x="1100.5" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (57 samples, 0.02%)</title><rect x="1100.5" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (55 samples, 0.02%)</title><rect x="1100.5" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (55 samples, 0.02%)</title><rect x="1100.5" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (55 samples, 0.02%)</title><rect x="1100.5" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (55 samples, 0.02%)</title><rect x="1100.5" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (55 samples, 0.02%)</title><rect x="1100.5" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (55 samples, 0.02%)</title><rect x="1100.5" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (55 samples, 0.02%)</title><rect x="1100.5" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (55 samples, 0.02%)</title><rect x="1100.5" y="579.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1103.5" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.StorageSession (17,693 samples, 7.56%)</title><rect x="1100.8" y="835.0" width="89.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1103.8" y="846.0">ru.mail.po..</text>
</g>
</g>
</svg>
