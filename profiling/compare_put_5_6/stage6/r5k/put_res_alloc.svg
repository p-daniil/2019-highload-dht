<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (93,248 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (36,198 samples, 38.82%)</title><rect x="10.0" y="803.0" width="458.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (36,198 samples, 38.82%)</title><rect x="10.0" y="787.0" width="458.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (36,198 samples, 38.82%)</title><rect x="10.0" y="771.0" width="458.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8,767 samples, 9.40%)</title><rect x="10.0" y="755.0" width="110.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,767 samples, 9.40%)</title><rect x="10.0" y="739.0" width="110.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,767 samples, 9.40%)</title><rect x="10.0" y="723.0" width="110.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (36 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/1345656667.apply (8,731 samples, 9.36%)</title><rect x="10.5" y="707.0" width="110.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.5" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (8,731 samples, 9.36%)</title><rect x="10.5" y="691.0" width="110.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.5" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (8,731 samples, 9.36%)</title><rect x="10.5" y="675.0" width="110.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.5" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.05%)</title><rect x="10.5" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.05%)</title><rect x="10.5" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/60851830.get$Lambda (24 samples, 0.03%)</title><rect x="10.5" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$235 (24 samples, 0.03%)</title><rect x="10.5" y="611.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.get$Lambda (27 samples, 0.03%)</title><rect x="10.8" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (27 samples, 0.03%)</title><rect x="10.8" y="611.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (100 samples, 0.11%)</title><rect x="11.1" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (100 samples, 0.11%)</title><rect x="11.1" y="643.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (55 samples, 0.06%)</title><rect x="11.1" y="627.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="14.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="11.8" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="11.8" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="11.8" y="595.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (184 samples, 0.20%)</title><rect x="12.4" y="659.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (184 samples, 0.20%)</title><rect x="12.4" y="643.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (104 samples, 0.11%)</title><rect x="12.4" y="627.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="15.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.09%)</title><rect x="13.7" y="627.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.09%)</title><rect x="13.7" y="611.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (80 samples, 0.09%)</title><rect x="13.7" y="595.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="16.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (8,218 samples, 8.81%)</title><rect x="14.7" y="659.0" width="104.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.7" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (8,218 samples, 8.81%)</title><rect x="14.7" y="643.0" width="104.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.7" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (8,218 samples, 8.81%)</title><rect x="14.7" y="627.0" width="104.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.7" y="638.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.09%)</title><rect x="14.7" y="611.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.09%)</title><rect x="14.7" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.get$Lambda (29 samples, 0.03%)</title><rect x="14.7" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$132 (29 samples, 0.03%)</title><rect x="14.7" y="563.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="17.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.get$Lambda (32 samples, 0.03%)</title><rect x="15.1" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$134 (32 samples, 0.03%)</title><rect x="15.1" y="563.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="18.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/873270299.get$Lambda (27 samples, 0.03%)</title><rect x="15.5" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$208 (27 samples, 0.03%)</title><rect x="15.5" y="563.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="18.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,126 samples, 5.50%)</title><rect x="15.8" y="611.0" width="64.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="622.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,126 samples, 5.50%)</title><rect x="15.8" y="595.0" width="64.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="606.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,086 samples, 5.45%)</title><rect x="15.8" y="579.0" width="64.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.8" y="590.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/873270299.apply (5,086 samples, 5.45%)</title><rect x="15.8" y="563.0" width="64.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.8" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,086 samples, 5.45%)</title><rect x="15.8" y="547.0" width="64.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.8" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,086 samples, 5.45%)</title><rect x="15.8" y="531.0" width="64.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.8" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.apply (5,086 samples, 5.45%)</title><rect x="15.8" y="515.0" width="64.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.8" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,086 samples, 5.45%)</title><rect x="15.8" y="499.0" width="64.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="510.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.03%)</title><rect x="15.8" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.03%)</title><rect x="15.8" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.get$Lambda (32 samples, 0.03%)</title><rect x="15.8" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$234 (32 samples, 0.03%)</title><rect x="15.8" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="18.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (132 samples, 0.14%)</title><rect x="16.2" y="483.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (132 samples, 0.14%)</title><rect x="16.2" y="467.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (49 samples, 0.05%)</title><rect x="16.2" y="451.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="19.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (37 samples, 0.04%)</title><rect x="16.8" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (37 samples, 0.04%)</title><rect x="16.8" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (37 samples, 0.04%)</title><rect x="16.8" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (37 samples, 0.04%)</title><rect x="16.8" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (37 samples, 0.04%)</title><rect x="16.8" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (37 samples, 0.04%)</title><rect x="16.8" y="371.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (32 samples, 0.03%)</title><rect x="16.9" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="17.3" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="17.3" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="17.3" y="419.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="20.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (107 samples, 0.11%)</title><rect x="17.9" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (107 samples, 0.11%)</title><rect x="17.9" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (62 samples, 0.07%)</title><rect x="17.9" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="20.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="18.7" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="18.7" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="18.7" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="21.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,815 samples, 5.16%)</title><rect x="19.2" y="483.0" width="61.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.2" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="19.2" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="19.2" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/2043781199.get$Lambda (23 samples, 0.02%)</title><rect x="19.2" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (23 samples, 0.02%)</title><rect x="19.2" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="22.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$233/660082140.get$Lambda (20 samples, 0.02%)</title><rect x="19.5" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$233 (20 samples, 0.02%)</title><rect x="19.5" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,079 samples, 4.37%)</title><rect x="19.8" y="467.0" width="51.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.8" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,079 samples, 4.37%)</title><rect x="19.8" y="451.0" width="51.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.8" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (33 samples, 0.04%)</title><rect x="19.8" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="22.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/2043781199.apply (3,960 samples, 4.25%)</title><rect x="20.2" y="435.0" width="50.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.2" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,960 samples, 4.25%)</title><rect x="20.2" y="419.0" width="50.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.2" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (86 samples, 0.09%)</title><rect x="20.4" y="403.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (86 samples, 0.09%)</title><rect x="20.4" y="387.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (47 samples, 0.05%)</title><rect x="20.4" y="371.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="23.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="21.0" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="21.0" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.04%)</title><rect x="21.0" y="339.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="24.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.04%)</title><rect x="21.5" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="24.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (73 samples, 0.08%)</title><rect x="21.9" y="403.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (36 samples, 0.04%)</title><rect x="21.9" y="387.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="24.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (37 samples, 0.04%)</title><rect x="22.4" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (27 samples, 0.03%)</title><rect x="22.4" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (27 samples, 0.03%)</title><rect x="22.4" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (27 samples, 0.03%)</title><rect x="22.4" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (27 samples, 0.03%)</title><rect x="22.4" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (27 samples, 0.03%)</title><rect x="22.4" y="307.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (110 samples, 0.12%)</title><rect x="22.8" y="403.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (110 samples, 0.12%)</title><rect x="22.8" y="387.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (48 samples, 0.05%)</title><rect x="22.8" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (48 samples, 0.05%)</title><rect x="22.8" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (48 samples, 0.05%)</title><rect x="22.8" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (48 samples, 0.05%)</title><rect x="22.8" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="25.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (62 samples, 0.07%)</title><rect x="23.5" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="26.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (62 samples, 0.07%)</title><rect x="23.5" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (46 samples, 0.05%)</title><rect x="23.5" y="339.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="26.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,641 samples, 3.90%)</title><rect x="24.2" y="403.0" width="46.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.2" y="414.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (24 samples, 0.03%)</title><rect x="24.2" y="387.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="27.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (54 samples, 0.06%)</title><rect x="24.5" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.5" y="398.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="24.5" y="371.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="27.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.03%)</title><rect x="24.9" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="27.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (350 samples, 0.38%)</title><rect x="25.2" y="387.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (350 samples, 0.38%)</title><rect x="25.2" y="371.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (350 samples, 0.38%)</title><rect x="25.2" y="355.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.2" y="366.0"></text>
</g>
<g>
<title>byte[] (350 samples, 0.38%)</title><rect x="25.2" y="339.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="28.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (96 samples, 0.10%)</title><rect x="29.7" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.7" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (96 samples, 0.10%)</title><rect x="29.7" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.7" y="382.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.10%)</title><rect x="29.7" y="355.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="32.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (390 samples, 0.42%)</title><rect x="30.9" y="387.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (390 samples, 0.42%)</title><rect x="30.9" y="371.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.03%)</title><rect x="30.9" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="33.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (365 samples, 0.39%)</title><rect x="31.2" y="355.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.2" y="366.0"></text>
</g>
<g>
<title>byte[] (365 samples, 0.39%)</title><rect x="31.2" y="339.0" width="4.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="34.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.07%)</title><rect x="35.8" y="387.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (64 samples, 0.07%)</title><rect x="35.8" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.8" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (64 samples, 0.07%)</title><rect x="35.8" y="355.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="38.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (23 samples, 0.02%)</title><rect x="36.6" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.6" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (23 samples, 0.02%)</title><rect x="36.6" y="371.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="39.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,181 samples, 2.34%)</title><rect x="36.9" y="387.0" width="27.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.9" y="398.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (29 samples, 0.03%)</title><rect x="36.9" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.03%)</title><rect x="36.9" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.03%)</title><rect x="36.9" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.get$Lambda (29 samples, 0.03%)</title><rect x="36.9" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.9" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$254 (29 samples, 0.03%)</title><rect x="36.9" y="307.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="39.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,130 samples, 1.21%)</title><rect x="37.3" y="371.0" width="14.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (565 samples, 0.61%)</title><rect x="37.3" y="355.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.3" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (565 samples, 0.61%)</title><rect x="37.3" y="339.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.3" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (565 samples, 0.61%)</title><rect x="37.3" y="323.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (565 samples, 0.61%)</title><rect x="37.3" y="307.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.3" y="318.0"></text>
</g>
<g>
<title>byte[] (565 samples, 0.61%)</title><rect x="37.3" y="291.0" width="7.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="40.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (94 samples, 0.10%)</title><rect x="44.4" y="355.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (94 samples, 0.10%)</title><rect x="44.4" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (94 samples, 0.10%)</title><rect x="44.4" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (94 samples, 0.10%)</title><rect x="44.4" y="307.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="47.4" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (90 samples, 0.10%)</title><rect x="45.6" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.6" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (43 samples, 0.05%)</title><rect x="45.6" y="339.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="48.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (47 samples, 0.05%)</title><rect x="46.2" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (47 samples, 0.05%)</title><rect x="46.2" y="323.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="49.2" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.test (381 samples, 0.41%)</title><rect x="46.7" y="355.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.7" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (381 samples, 0.41%)</title><rect x="46.7" y="339.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/960733886.test (381 samples, 0.41%)</title><rect x="46.7" y="323.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (381 samples, 0.41%)</title><rect x="46.7" y="307.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.7" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/707161353.test (381 samples, 0.41%)</title><rect x="46.7" y="291.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.7" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (381 samples, 0.41%)</title><rect x="46.7" y="275.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/90767234.test (381 samples, 0.41%)</title><rect x="46.7" y="259.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (381 samples, 0.41%)</title><rect x="46.7" y="243.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (381 samples, 0.41%)</title><rect x="46.7" y="227.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (381 samples, 0.41%)</title><rect x="46.7" y="211.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (195 samples, 0.21%)</title><rect x="46.7" y="195.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="49.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (186 samples, 0.20%)</title><rect x="49.2" y="195.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.2" y="206.0"></text>
</g>
<g>
<title>byte[] (186 samples, 0.20%)</title><rect x="49.2" y="179.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="52.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (1,022 samples, 1.10%)</title><rect x="51.6" y="371.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,022 samples, 1.10%)</title><rect x="51.6" y="355.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,022 samples, 1.10%)</title><rect x="51.6" y="339.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (42 samples, 0.05%)</title><rect x="51.8" y="323.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="54.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (77 samples, 0.08%)</title><rect x="52.3" y="323.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="55.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (21 samples, 0.02%)</title><rect x="53.3" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="56.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.06%)</title><rect x="53.6" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.06%)</title><rect x="53.6" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.6" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (53 samples, 0.06%)</title><rect x="53.6" y="291.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.6" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (53 samples, 0.06%)</title><rect x="53.6" y="275.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="56.6" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (41 samples, 0.04%)</title><rect x="54.3" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.3" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (41 samples, 0.04%)</title><rect x="54.3" y="307.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="57.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (710 samples, 0.76%)</title><rect x="54.8" y="323.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (710 samples, 0.76%)</title><rect x="54.8" y="307.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (710 samples, 0.76%)</title><rect x="54.8" y="291.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (76 samples, 0.08%)</title><rect x="54.8" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (76 samples, 0.08%)</title><rect x="54.8" y="259.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (76 samples, 0.08%)</title><rect x="54.8" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (76 samples, 0.08%)</title><rect x="54.8" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (76 samples, 0.08%)</title><rect x="54.8" y="211.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (76 samples, 0.08%)</title><rect x="54.8" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (76 samples, 0.08%)</title><rect x="54.8" y="179.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (76 samples, 0.08%)</title><rect x="54.8" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (76 samples, 0.08%)</title><rect x="54.8" y="147.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="57.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (347 samples, 0.37%)</title><rect x="55.7" y="275.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.7" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (347 samples, 0.37%)</title><rect x="55.7" y="259.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (179 samples, 0.19%)</title><rect x="55.7" y="243.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (179 samples, 0.19%)</title><rect x="55.7" y="227.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (179 samples, 0.19%)</title><rect x="55.7" y="211.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="58.7" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (168 samples, 0.18%)</title><rect x="58.0" y="243.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.0" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (168 samples, 0.18%)</title><rect x="58.0" y="227.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="61.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (287 samples, 0.31%)</title><rect x="60.1" y="275.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.1" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (287 samples, 0.31%)</title><rect x="60.1" y="259.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="63.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (59 samples, 0.06%)</title><rect x="63.8" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (59 samples, 0.06%)</title><rect x="63.8" y="307.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="66.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (105 samples, 0.11%)</title><rect x="64.5" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (34 samples, 0.04%)</title><rect x="64.5" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.5" y="382.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.04%)</title><rect x="64.5" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="67.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.08%)</title><rect x="64.9" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (71 samples, 0.08%)</title><rect x="64.9" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754894440.invoke (71 samples, 0.08%)</title><rect x="64.9" y="339.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.08%)</title><rect x="64.9" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (34 samples, 0.04%)</title><rect x="64.9" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.04%)</title><rect x="64.9" y="291.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="67.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (37 samples, 0.04%)</title><rect x="65.4" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (37 samples, 0.04%)</title><rect x="65.4" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.4" y="302.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.04%)</title><rect x="65.4" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (106 samples, 0.11%)</title><rect x="65.8" y="387.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (106 samples, 0.11%)</title><rect x="65.8" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.11%)</title><rect x="65.8" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (106 samples, 0.11%)</title><rect x="65.8" y="339.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754894440.invoke (106 samples, 0.11%)</title><rect x="65.8" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.11%)</title><rect x="65.8" y="307.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (31 samples, 0.03%)</title><rect x="65.8" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.03%)</title><rect x="65.8" y="275.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="68.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (75 samples, 0.08%)</title><rect x="66.2" y="291.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (75 samples, 0.08%)</title><rect x="66.2" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.2" y="286.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.08%)</title><rect x="66.2" y="259.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (248 samples, 0.27%)</title><rect x="67.2" y="387.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.2" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (58 samples, 0.06%)</title><rect x="67.2" y="371.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="70.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (80 samples, 0.09%)</title><rect x="67.9" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (80 samples, 0.09%)</title><rect x="67.9" y="355.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="70.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (110 samples, 0.12%)</title><rect x="68.9" y="371.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.9" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (110 samples, 0.12%)</title><rect x="68.9" y="355.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.09%)</title><rect x="70.3" y="435.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.09%)</title><rect x="70.3" y="419.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.09%)</title><rect x="70.3" y="403.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="73.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (106 samples, 0.11%)</title><rect x="71.4" y="467.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="74.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.06%)</title><rect x="72.7" y="467.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="75.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (535 samples, 0.57%)</title><rect x="73.4" y="467.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="73.4" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="73.4" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/208720215.get$Lambda (24 samples, 0.03%)</title><rect x="73.5" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (24 samples, 0.03%)</title><rect x="73.5" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="76.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (54 samples, 0.06%)</title><rect x="73.8" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="76.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (40 samples, 0.04%)</title><rect x="74.5" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="77.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (52 samples, 0.06%)</title><rect x="75.0" y="451.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="78.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (160 samples, 0.17%)</title><rect x="75.7" y="451.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (160 samples, 0.17%)</title><rect x="75.7" y="435.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (160 samples, 0.17%)</title><rect x="75.7" y="419.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (160 samples, 0.17%)</title><rect x="75.7" y="403.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (160 samples, 0.17%)</title><rect x="75.7" y="387.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (160 samples, 0.17%)</title><rect x="75.7" y="371.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (160 samples, 0.17%)</title><rect x="75.7" y="355.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (160 samples, 0.17%)</title><rect x="75.7" y="339.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (160 samples, 0.17%)</title><rect x="75.7" y="323.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.06%)</title><rect x="75.7" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.06%)</title><rect x="75.7" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1371022227.get$Lambda (24 samples, 0.03%)</title><rect x="75.7" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (24 samples, 0.03%)</title><rect x="75.7" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="78.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (31 samples, 0.03%)</title><rect x="76.0" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$223 (31 samples, 0.03%)</title><rect x="76.0" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="79.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (54 samples, 0.06%)</title><rect x="76.4" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="79.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (51 samples, 0.05%)</title><rect x="77.1" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (51 samples, 0.05%)</title><rect x="77.1" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (34 samples, 0.04%)</title><rect x="77.3" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (34 samples, 0.04%)</title><rect x="77.3" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="80.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (153 samples, 0.16%)</title><rect x="77.7" y="451.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.7" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (45 samples, 0.05%)</title><rect x="77.7" y="435.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="80.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (63 samples, 0.07%)</title><rect x="78.3" y="435.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="81.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (45 samples, 0.05%)</title><rect x="79.1" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (45 samples, 0.05%)</title><rect x="79.1" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.1" y="430.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="79.1" y="403.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="82.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (41 samples, 0.04%)</title><rect x="79.6" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="79.6" y="435.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="82.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="80.2" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="80.2" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="80.2" y="547.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="83.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (125 samples, 0.13%)</title><rect x="80.7" y="611.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (125 samples, 0.13%)</title><rect x="80.7" y="595.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (60 samples, 0.06%)</title><rect x="80.7" y="579.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="83.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.07%)</title><rect x="81.4" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.07%)</title><rect x="81.4" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.07%)</title><rect x="81.4" y="547.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="84.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,879 samples, 3.09%)</title><rect x="82.3" y="611.0" width="36.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.3" y="622.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.05%)</title><rect x="82.3" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.05%)</title><rect x="82.3" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1400471465.get$Lambda (27 samples, 0.03%)</title><rect x="82.3" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$202 (27 samples, 0.03%)</title><rect x="82.3" y="547.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="85.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1560002630.get$Lambda (20 samples, 0.02%)</title><rect x="82.6" y="563.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$204 (20 samples, 0.02%)</title><rect x="82.6" y="547.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="85.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (78 samples, 0.08%)</title><rect x="82.9" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (78 samples, 0.08%)</title><rect x="82.9" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1560002630.apply (37 samples, 0.04%)</title><rect x="82.9" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (37 samples, 0.04%)</title><rect x="82.9" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (37 samples, 0.04%)</title><rect x="82.9" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="82.9" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="85.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="83.3" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="83.3" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="83.3" y="531.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="86.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.05%)</title><rect x="83.8" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.05%)</title><rect x="83.8" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="83.8" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="83.8" y="547.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.05%)</title><rect x="83.8" y="531.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="86.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (2,705 samples, 2.90%)</title><rect x="84.5" y="595.0" width="34.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.5" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="84.5" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="84.5" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1237283969.get$Lambda (33 samples, 0.04%)</title><rect x="84.5" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$143 (33 samples, 0.04%)</title><rect x="84.5" y="531.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="87.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,539 samples, 2.72%)</title><rect x="84.9" y="579.0" width="32.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.9" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,539 samples, 2.72%)</title><rect x="84.9" y="563.0" width="32.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.9" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,500 samples, 2.68%)</title><rect x="84.9" y="547.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.9" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1237283969.apply (2,500 samples, 2.68%)</title><rect x="84.9" y="531.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.9" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (2,500 samples, 2.68%)</title><rect x="84.9" y="515.0" width="31.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.9" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (2,500 samples, 2.68%)</title><rect x="84.9" y="499.0" width="31.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.9" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="84.9" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="84.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$199/1705845297.get$Lambda (27 samples, 0.03%)</title><rect x="84.9" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$199 (27 samples, 0.03%)</title><rect x="84.9" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="87.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,050 samples, 1.13%)</title><rect x="85.2" y="483.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,050 samples, 1.13%)</title><rect x="85.2" y="467.0" width="13.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1,050 samples, 1.13%)</title><rect x="85.2" y="451.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$199/1705845297.apply (1,011 samples, 1.08%)</title><rect x="85.2" y="435.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1,011 samples, 1.08%)</title><rect x="85.2" y="419.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1,011 samples, 1.08%)</title><rect x="85.2" y="403.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="88.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1,011 samples, 1.08%)</title><rect x="85.2" y="387.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (633 samples, 0.68%)</title><rect x="85.2" y="371.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.2" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (168 samples, 0.18%)</title><rect x="85.2" y="355.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.03%)</title><rect x="85.2" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="88.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (74 samples, 0.08%)</title><rect x="85.6" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.08%)</title><rect x="85.6" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.6" y="334.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.08%)</title><rect x="85.6" y="307.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="88.6" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (64 samples, 0.07%)</title><rect x="86.5" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.5" y="350.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.07%)</title><rect x="86.5" y="323.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="89.5" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (36 samples, 0.04%)</title><rect x="87.3" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.3" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (36 samples, 0.04%)</title><rect x="87.3" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="90.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (293 samples, 0.31%)</title><rect x="87.8" y="355.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (35 samples, 0.04%)</title><rect x="87.8" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="90.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (219 samples, 0.23%)</title><rect x="88.2" y="339.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (219 samples, 0.23%)</title><rect x="88.2" y="323.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (161 samples, 0.17%)</title><rect x="88.2" y="307.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (161 samples, 0.17%)</title><rect x="88.2" y="291.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/2001223946.get$Lambda (161 samples, 0.17%)</title><rect x="88.2" y="275.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (161 samples, 0.17%)</title><rect x="88.2" y="259.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="91.2" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (58 samples, 0.06%)</title><rect x="90.3" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/2001223946.run (58 samples, 0.06%)</title><rect x="90.3" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (58 samples, 0.06%)</title><rect x="90.3" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.3" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (58 samples, 0.06%)</title><rect x="90.3" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (58 samples, 0.06%)</title><rect x="90.3" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (58 samples, 0.06%)</title><rect x="90.3" y="227.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="93.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (39 samples, 0.04%)</title><rect x="91.0" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (39 samples, 0.04%)</title><rect x="91.0" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.0" y="334.0"></text>
</g>
<g>
<title>int[] (39 samples, 0.04%)</title><rect x="91.0" y="307.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="94.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (136 samples, 0.15%)</title><rect x="91.5" y="355.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.5" y="366.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.08%)</title><rect x="91.5" y="339.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="94.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (59 samples, 0.06%)</title><rect x="92.5" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (59 samples, 0.06%)</title><rect x="92.5" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (59 samples, 0.06%)</title><rect x="92.5" y="307.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (378 samples, 0.41%)</title><rect x="93.2" y="371.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.2" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (106 samples, 0.11%)</title><rect x="93.2" y="355.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="96.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (110 samples, 0.12%)</title><rect x="94.6" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (110 samples, 0.12%)</title><rect x="94.6" y="339.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="97.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (162 samples, 0.17%)</title><rect x="96.0" y="355.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.0" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (162 samples, 0.17%)</title><rect x="96.0" y="339.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="99.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="98.0" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="98.0" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.04%)</title><rect x="98.0" y="403.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="101.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,423 samples, 1.53%)</title><rect x="98.5" y="483.0" width="18.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (117 samples, 0.13%)</title><rect x="98.5" y="467.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="101.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,270 samples, 1.36%)</title><rect x="100.0" y="467.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (24 samples, 0.03%)</title><rect x="100.0" y="451.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="103.0" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (29 samples, 0.03%)</title><rect x="100.3" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="103.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (35 samples, 0.04%)</title><rect x="100.7" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="103.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (63 samples, 0.07%)</title><rect x="101.1" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (63 samples, 0.07%)</title><rect x="101.1" y="435.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.1" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (63 samples, 0.07%)</title><rect x="101.1" y="419.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="104.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (25 samples, 0.03%)</title><rect x="101.9" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (25 samples, 0.03%)</title><rect x="101.9" y="435.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="104.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (85 samples, 0.09%)</title><rect x="102.2" y="451.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="105.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (56 samples, 0.06%)</title><rect x="103.3" y="451.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="106.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (71 samples, 0.08%)</title><rect x="104.0" y="451.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="107.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (70 samples, 0.08%)</title><rect x="104.9" y="451.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="107.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (410 samples, 0.44%)</title><rect x="105.8" y="451.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (28 samples, 0.03%)</title><rect x="105.8" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="108.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (20 samples, 0.02%)</title><rect x="106.1" y="435.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="109.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (36 samples, 0.04%)</title><rect x="106.4" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="109.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (26 samples, 0.03%)</title><rect x="106.8" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="109.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="107.2" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="107.2" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.get$Lambda (22 samples, 0.02%)</title><rect x="107.2" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$196 (22 samples, 0.02%)</title><rect x="107.2" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (31 samples, 0.03%)</title><rect x="107.5" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (31 samples, 0.03%)</title><rect x="107.5" y="419.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="110.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (33 samples, 0.04%)</title><rect x="107.8" y="435.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="110.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.05%)</title><rect x="108.3" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="111.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (171 samples, 0.18%)</title><rect x="108.8" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (37 samples, 0.04%)</title><rect x="108.8" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="111.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (44 samples, 0.05%)</title><rect x="109.3" y="419.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="112.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (25 samples, 0.03%)</title><rect x="109.8" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (25 samples, 0.03%)</title><rect x="109.8" y="403.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="112.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (65 samples, 0.07%)</title><rect x="110.1" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (29 samples, 0.03%)</title><rect x="110.1" y="403.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="113.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (26 samples, 0.03%)</title><rect x="110.6" y="403.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="113.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (246 samples, 0.26%)</title><rect x="111.0" y="451.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (27 samples, 0.03%)</title><rect x="111.0" y="435.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="114.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (21 samples, 0.02%)</title><rect x="111.3" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="114.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (26 samples, 0.03%)</title><rect x="111.8" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (26 samples, 0.03%)</title><rect x="111.8" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="114.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (156 samples, 0.17%)</title><rect x="112.1" y="435.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (31 samples, 0.03%)</title><rect x="112.1" y="419.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="115.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (44 samples, 0.05%)</title><rect x="112.5" y="419.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="115.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (20 samples, 0.02%)</title><rect x="113.1" y="419.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (20 samples, 0.02%)</title><rect x="113.1" y="403.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="116.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (61 samples, 0.07%)</title><rect x="113.3" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (20 samples, 0.02%)</title><rect x="113.3" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="116.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (30 samples, 0.03%)</title><rect x="113.6" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="116.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (41 samples, 0.04%)</title><rect x="114.1" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (41 samples, 0.04%)</title><rect x="114.1" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (41 samples, 0.04%)</title><rect x="114.1" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (41 samples, 0.04%)</title><rect x="114.1" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (41 samples, 0.04%)</title><rect x="114.1" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (41 samples, 0.04%)</title><rect x="114.1" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.04%)</title><rect x="114.1" y="355.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="117.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (115 samples, 0.12%)</title><rect x="114.6" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (29 samples, 0.03%)</title><rect x="114.6" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.03%)</title><rect x="114.6" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1084093799.get$Lambda (29 samples, 0.03%)</title><rect x="114.6" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$153 (29 samples, 0.03%)</title><rect x="114.6" y="387.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="117.6" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (86 samples, 0.09%)</title><rect x="115.0" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1084093799.run (86 samples, 0.09%)</title><rect x="115.0" y="419.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (86 samples, 0.09%)</title><rect x="115.0" y="403.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.0" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (21 samples, 0.02%)</title><rect x="115.0" y="387.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="118.0" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (65 samples, 0.07%)</title><rect x="115.2" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.2" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (30 samples, 0.03%)</title><rect x="115.2" y="371.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="118.2" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (35 samples, 0.04%)</title><rect x="115.6" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.6" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (35 samples, 0.04%)</title><rect x="115.6" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.6" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (35 samples, 0.04%)</title><rect x="115.6" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.6" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (35 samples, 0.04%)</title><rect x="115.6" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.6" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (35 samples, 0.04%)</title><rect x="115.6" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="118.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (36 samples, 0.04%)</title><rect x="116.1" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="116.1" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="119.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="116.5" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="116.5" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.04%)</title><rect x="116.5" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="119.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (45 samples, 0.05%)</title><rect x="117.0" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (45 samples, 0.05%)</title><rect x="117.0" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="117.0" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="117.0" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="117.0" y="515.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="120.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (88 samples, 0.09%)</title><rect x="117.6" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (57 samples, 0.06%)</title><rect x="117.6" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (57 samples, 0.06%)</title><rect x="117.6" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1534255922.linkToTargetMethod (57 samples, 0.06%)</title><rect x="117.6" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1819550379.invoke (57 samples, 0.06%)</title><rect x="117.6" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1014054035.invoke (57 samples, 0.06%)</title><rect x="117.6" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.06%)</title><rect x="117.6" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (57 samples, 0.06%)</title><rect x="117.6" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (57 samples, 0.06%)</title><rect x="117.6" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.6" y="462.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.06%)</title><rect x="117.6" y="435.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="120.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (31 samples, 0.03%)</title><rect x="118.3" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="121.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.03%)</title><rect x="118.3" y="547.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="121.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (59 samples, 0.06%)</title><rect x="118.7" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (59 samples, 0.06%)</title><rect x="118.7" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (59 samples, 0.06%)</title><rect x="118.7" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.7" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (59 samples, 0.06%)</title><rect x="118.7" y="611.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="121.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (119 samples, 0.13%)</title><rect x="119.4" y="659.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="122.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (73 samples, 0.08%)</title><rect x="119.4" y="643.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="122.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (46 samples, 0.05%)</title><rect x="120.4" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (46 samples, 0.05%)</title><rect x="120.4" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="123.4" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="120.4" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.4" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (46 samples, 0.05%)</title><rect x="120.4" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.4" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="120.4" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.4" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="120.4" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.4" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (46 samples, 0.05%)</title><rect x="120.4" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="120.4" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.4" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (46 samples, 0.05%)</title><rect x="120.4" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (46 samples, 0.05%)</title><rect x="120.4" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.4" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (46 samples, 0.05%)</title><rect x="120.4" y="483.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="123.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,221 samples, 2.38%)</title><rect x="120.9" y="755.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.9" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,221 samples, 2.38%)</title><rect x="120.9" y="739.0" width="28.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.9" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,209 samples, 2.37%)</title><rect x="120.9" y="723.0" width="28.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,209 samples, 2.37%)</title><rect x="120.9" y="707.0" width="28.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.9" y="718.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,209 samples, 2.37%)</title><rect x="120.9" y="691.0" width="28.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="123.9" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$252/1669380854.run (1,792 samples, 1.92%)</title><rect x="149.0" y="755.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.0" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,792 samples, 1.92%)</title><rect x="149.0" y="739.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.0" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,792 samples, 1.92%)</title><rect x="149.0" y="723.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.0" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,792 samples, 1.92%)</title><rect x="149.0" y="707.0" width="22.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.0" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,792 samples, 1.92%)</title><rect x="149.0" y="691.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.0" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,792 samples, 1.92%)</title><rect x="149.0" y="675.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.0" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,792 samples, 1.92%)</title><rect x="149.0" y="659.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.0" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,792 samples, 1.92%)</title><rect x="149.0" y="643.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.0" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,792 samples, 1.92%)</title><rect x="149.0" y="627.0" width="22.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.0" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,792 samples, 1.92%)</title><rect x="149.0" y="611.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.0" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,792 samples, 1.92%)</title><rect x="149.0" y="595.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.0" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,648 samples, 1.77%)</title><rect x="149.0" y="579.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.13%)</title><rect x="149.0" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.13%)</title><rect x="149.0" y="547.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$257/3868478.get$Lambda (38 samples, 0.04%)</title><rect x="149.0" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$257 (38 samples, 0.04%)</title><rect x="149.0" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="152.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$273/1081468444.get$Lambda (47 samples, 0.05%)</title><rect x="149.5" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$273 (47 samples, 0.05%)</title><rect x="149.5" y="515.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="152.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$278/875190164.get$Lambda (38 samples, 0.04%)</title><rect x="150.1" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$278 (38 samples, 0.04%)</title><rect x="150.1" y="515.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="153.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,525 samples, 1.64%)</title><rect x="150.6" y="563.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (66 samples, 0.07%)</title><rect x="150.6" y="547.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="153.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,459 samples, 1.56%)</title><rect x="151.4" y="547.0" width="18.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,459 samples, 1.56%)</title><rect x="151.4" y="531.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,459 samples, 1.56%)</title><rect x="151.4" y="515.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (243 samples, 0.26%)</title><rect x="151.4" y="499.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (65 samples, 0.07%)</title><rect x="151.4" y="483.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="154.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$266/153627331.apply (145 samples, 0.16%)</title><rect x="152.3" y="483.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (145 samples, 0.16%)</title><rect x="152.3" y="467.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (145 samples, 0.16%)</title><rect x="152.3" y="451.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (37 samples, 0.04%)</title><rect x="152.3" y="435.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.3" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (37 samples, 0.04%)</title><rect x="152.3" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.3" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (37 samples, 0.04%)</title><rect x="152.3" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="155.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (108 samples, 0.12%)</title><rect x="152.7" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (89 samples, 0.10%)</title><rect x="153.0" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (89 samples, 0.10%)</title><rect x="153.0" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (46 samples, 0.05%)</title><rect x="153.0" y="387.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="156.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.05%)</title><rect x="153.6" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (42 samples, 0.05%)</title><rect x="153.6" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.05%)</title><rect x="153.6" y="355.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="156.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (32 samples, 0.03%)</title><rect x="154.1" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (32 samples, 0.03%)</title><rect x="154.1" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (29 samples, 0.03%)</title><rect x="154.1" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (28 samples, 0.03%)</title><rect x="154.2" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (27 samples, 0.03%)</title><rect x="154.2" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.03%)</title><rect x="154.2" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (25 samples, 0.03%)</title><rect x="154.2" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (25 samples, 0.03%)</title><rect x="154.2" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,216 samples, 1.30%)</title><rect x="154.5" y="499.0" width="15.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,216 samples, 1.30%)</title><rect x="154.5" y="483.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (1,215 samples, 1.30%)</title><rect x="154.5" y="467.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,215 samples, 1.30%)</title><rect x="154.5" y="451.0" width="15.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,215 samples, 1.30%)</title><rect x="154.5" y="435.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (1,215 samples, 1.30%)</title><rect x="154.5" y="419.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,215 samples, 1.30%)</title><rect x="154.5" y="403.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (91 samples, 0.10%)</title><rect x="154.8" y="387.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (91 samples, 0.10%)</title><rect x="154.8" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (55 samples, 0.06%)</title><rect x="154.8" y="355.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="157.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="155.4" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="155.4" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="155.4" y="323.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="158.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (117 samples, 0.13%)</title><rect x="155.9" y="387.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (100 samples, 0.11%)</title><rect x="156.1" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (100 samples, 0.11%)</title><rect x="156.1" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (51 samples, 0.05%)</title><rect x="156.1" y="339.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="159.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="156.8" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="156.8" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.05%)</title><rect x="156.8" y="307.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="159.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (988 samples, 1.06%)</title><rect x="157.4" y="387.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="160.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (368 samples, 0.39%)</title><rect x="157.4" y="371.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (368 samples, 0.39%)</title><rect x="157.4" y="355.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (368 samples, 0.39%)</title><rect x="157.4" y="339.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$259/340323460.accept (124 samples, 0.13%)</title><rect x="157.4" y="323.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (124 samples, 0.13%)</title><rect x="157.4" y="307.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (124 samples, 0.13%)</title><rect x="157.4" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.03%)</title><rect x="157.4" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.03%)</title><rect x="157.4" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/281969796.get$Lambda (30 samples, 0.03%)</title><rect x="157.4" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$260 (30 samples, 0.03%)</title><rect x="157.4" y="227.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="160.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (94 samples, 0.10%)</title><rect x="157.8" y="275.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (94 samples, 0.10%)</title><rect x="157.8" y="259.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.06%)</title><rect x="157.8" y="243.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="160.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="158.4" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (40 samples, 0.04%)</title><rect x="158.4" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="158.4" y="211.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="161.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$265/590862494.accept (159 samples, 0.17%)</title><rect x="159.0" y="323.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (159 samples, 0.17%)</title><rect x="159.0" y="307.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (159 samples, 0.17%)</title><rect x="159.0" y="291.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (159 samples, 0.17%)</title><rect x="159.0" y="275.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (159 samples, 0.17%)</title><rect x="159.0" y="259.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.17%)</title><rect x="159.0" y="243.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (159 samples, 0.17%)</title><rect x="159.0" y="227.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (159 samples, 0.17%)</title><rect x="159.0" y="211.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (159 samples, 0.17%)</title><rect x="159.0" y="195.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (159 samples, 0.17%)</title><rect x="159.0" y="179.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (64 samples, 0.07%)</title><rect x="159.0" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (64 samples, 0.07%)</title><rect x="159.0" y="147.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (34 samples, 0.04%)</title><rect x="159.0" y="131.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="162.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (30 samples, 0.03%)</title><rect x="159.4" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (30 samples, 0.03%)</title><rect x="159.4" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (30 samples, 0.03%)</title><rect x="159.4" y="99.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (30 samples, 0.03%)</title><rect x="159.4" y="83.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (30 samples, 0.03%)</title><rect x="159.4" y="67.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (30 samples, 0.03%)</title><rect x="159.4" y="51.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="162.4" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (95 samples, 0.10%)</title><rect x="159.8" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (95 samples, 0.10%)</title><rect x="159.8" y="147.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (37 samples, 0.04%)</title><rect x="159.8" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (37 samples, 0.04%)</title><rect x="159.8" y="115.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="162.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (58 samples, 0.06%)</title><rect x="160.2" y="131.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.2" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (26 samples, 0.03%)</title><rect x="160.2" y="115.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="163.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (32 samples, 0.03%)</title><rect x="160.6" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (32 samples, 0.03%)</title><rect x="160.6" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (32 samples, 0.03%)</title><rect x="160.6" y="83.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (32 samples, 0.03%)</title><rect x="160.6" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (32 samples, 0.03%)</title><rect x="160.6" y="51.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (32 samples, 0.03%)</title><rect x="160.6" y="35.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="163.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.09%)</title><rect x="161.0" y="323.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.09%)</title><rect x="161.0" y="307.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.09%)</title><rect x="161.0" y="291.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="164.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (620 samples, 0.66%)</title><rect x="162.0" y="371.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (52 samples, 0.06%)</title><rect x="162.0" y="355.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="165.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (42 samples, 0.05%)</title><rect x="162.7" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (42 samples, 0.05%)</title><rect x="162.7" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.05%)</title><rect x="162.7" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="165.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (526 samples, 0.56%)</title><rect x="163.2" y="355.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (28 samples, 0.03%)</title><rect x="163.2" y="339.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="166.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (278 samples, 0.30%)</title><rect x="163.6" y="339.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (42 samples, 0.05%)</title><rect x="163.6" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.6" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (42 samples, 0.05%)</title><rect x="163.6" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="166.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (46 samples, 0.05%)</title><rect x="164.1" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="167.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (190 samples, 0.20%)</title><rect x="164.7" y="323.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (26 samples, 0.03%)</title><rect x="164.7" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="167.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (47 samples, 0.05%)</title><rect x="165.2" y="307.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="168.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (38 samples, 0.04%)</title><rect x="165.8" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (38 samples, 0.04%)</title><rect x="165.8" y="291.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="168.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (63 samples, 0.07%)</title><rect x="166.3" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (26 samples, 0.03%)</title><rect x="166.3" y="291.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="169.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (220 samples, 0.24%)</title><rect x="167.1" y="339.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.03%)</title><rect x="167.1" y="323.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="170.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (118 samples, 0.13%)</title><rect x="167.5" y="323.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.5" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.06%)</title><rect x="167.5" y="307.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="170.5" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (58 samples, 0.06%)</title><rect x="168.3" y="307.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.3" y="318.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.06%)</title><rect x="168.3" y="291.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="171.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (70 samples, 0.08%)</title><rect x="169.0" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (70 samples, 0.08%)</title><rect x="169.0" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (70 samples, 0.08%)</title><rect x="169.0" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (70 samples, 0.08%)</title><rect x="169.0" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.0" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.08%)</title><rect x="169.0" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (70 samples, 0.08%)</title><rect x="169.0" y="243.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="172.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (144 samples, 0.15%)</title><rect x="169.9" y="579.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (144 samples, 0.15%)</title><rect x="169.9" y="563.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (144 samples, 0.15%)</title><rect x="169.9" y="547.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (144 samples, 0.15%)</title><rect x="169.9" y="531.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (144 samples, 0.15%)</title><rect x="169.9" y="515.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (144 samples, 0.15%)</title><rect x="169.9" y="499.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (62 samples, 0.07%)</title><rect x="169.9" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.9" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (62 samples, 0.07%)</title><rect x="169.9" y="467.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.9" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (82 samples, 0.09%)</title><rect x="170.7" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.7" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (82 samples, 0.09%)</title><rect x="170.7" y="467.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="173.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,428 samples, 5.82%)</title><rect x="171.7" y="755.0" width="68.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.7" y="766.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,428 samples, 5.82%)</title><rect x="171.7" y="739.0" width="68.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.7" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,539 samples, 4.87%)</title><rect x="171.7" y="723.0" width="57.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.7" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (4,539 samples, 4.87%)</title><rect x="171.7" y="707.0" width="57.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.7" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,539 samples, 4.87%)</title><rect x="171.7" y="691.0" width="57.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.7" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (109 samples, 0.12%)</title><rect x="171.7" y="675.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (109 samples, 0.12%)</title><rect x="171.7" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (109 samples, 0.12%)</title><rect x="171.7" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (109 samples, 0.12%)</title><rect x="171.7" y="627.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1151844284.linkToTargetMethod (63 samples, 0.07%)</title><rect x="171.7" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1380806038.invoke (63 samples, 0.07%)</title><rect x="171.7" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.07%)</title><rect x="171.7" y="579.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (63 samples, 0.07%)</title><rect x="171.7" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (63 samples, 0.07%)</title><rect x="171.7" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.7" y="558.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.07%)</title><rect x="171.7" y="531.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="174.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (46 samples, 0.05%)</title><rect x="172.5" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.05%)</title><rect x="172.5" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.05%)</title><rect x="172.5" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (46 samples, 0.05%)</title><rect x="172.5" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (46 samples, 0.05%)</title><rect x="172.5" y="547.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="175.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4,430 samples, 4.75%)</title><rect x="173.1" y="675.0" width="56.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.1" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,430 samples, 4.75%)</title><rect x="173.1" y="659.0" width="56.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.1" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,430 samples, 4.75%)</title><rect x="173.1" y="643.0" width="56.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.1" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,430 samples, 4.75%)</title><rect x="173.1" y="627.0" width="56.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.1" y="638.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,040 samples, 2.19%)</title><rect x="173.1" y="611.0" width="25.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.1" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,040 samples, 2.19%)</title><rect x="173.1" y="595.0" width="25.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.1" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,040 samples, 2.19%)</title><rect x="173.1" y="579.0" width="25.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.1" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,040 samples, 2.19%)</title><rect x="173.1" y="563.0" width="25.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.1" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,040 samples, 2.19%)</title><rect x="173.1" y="547.0" width="25.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.1" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,040 samples, 2.19%)</title><rect x="173.1" y="531.0" width="25.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.1" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,040 samples, 2.19%)</title><rect x="173.1" y="515.0" width="25.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.1" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,980 samples, 2.12%)</title><rect x="173.1" y="499.0" width="25.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,980 samples, 2.12%)</title><rect x="173.1" y="483.0" width="25.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.1" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,932 samples, 2.07%)</title><rect x="173.1" y="467.0" width="24.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.1" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (42 samples, 0.05%)</title><rect x="173.1" y="451.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="176.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1524095918.apply (44 samples, 0.05%)</title><rect x="173.6" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (44 samples, 0.05%)</title><rect x="173.6" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (44 samples, 0.05%)</title><rect x="173.6" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (44 samples, 0.05%)</title><rect x="173.6" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="173.6" y="387.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="176.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (1,759 samples, 1.89%)</title><rect x="174.2" y="451.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.2" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,759 samples, 1.89%)</title><rect x="174.2" y="435.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.2" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="174.2" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="174.2" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.get$Lambda (33 samples, 0.04%)</title><rect x="174.2" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$306 (33 samples, 0.04%)</title><rect x="174.2" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="177.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (84 samples, 0.09%)</title><rect x="174.6" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (84 samples, 0.09%)</title><rect x="174.6" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (53 samples, 0.06%)</title><rect x="174.6" y="387.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="177.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.03%)</title><rect x="175.3" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.03%)</title><rect x="175.3" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.03%)</title><rect x="175.3" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="178.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,642 samples, 1.76%)</title><rect x="175.7" y="419.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.02%)</title><rect x="175.7" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.02%)</title><rect x="175.7" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/444722083.get$Lambda (23 samples, 0.02%)</title><rect x="175.7" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (23 samples, 0.02%)</title><rect x="175.7" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="178.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (101 samples, 0.11%)</title><rect x="176.0" y="403.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (101 samples, 0.11%)</title><rect x="176.0" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (58 samples, 0.06%)</title><rect x="176.0" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="179.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.05%)</title><rect x="176.7" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.05%)</title><rect x="176.7" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.05%)</title><rect x="176.7" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="179.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,518 samples, 1.63%)</title><rect x="177.2" y="403.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$116/1476717268.apply (97 samples, 0.10%)</title><rect x="177.2" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="180.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (97 samples, 0.10%)</title><rect x="177.2" y="371.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (97 samples, 0.10%)</title><rect x="177.2" y="355.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (35 samples, 0.04%)</title><rect x="177.2" y="339.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="180.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (62 samples, 0.07%)</title><rect x="177.7" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (20 samples, 0.02%)</title><rect x="177.7" y="323.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="180.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.05%)</title><rect x="177.9" y="323.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="180.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,421 samples, 1.52%)</title><rect x="178.5" y="387.0" width="18.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.05%)</title><rect x="178.5" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.05%)</title><rect x="178.5" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$302/1038352260.get$Lambda (29 samples, 0.03%)</title><rect x="178.7" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$302 (29 samples, 0.03%)</title><rect x="178.7" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="181.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/357846757.linkToTargetMethod (59 samples, 0.06%)</title><rect x="179.1" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/951328009.invokeStatic (59 samples, 0.06%)</title><rect x="179.1" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.get$Lambda (59 samples, 0.06%)</title><rect x="179.1" y="339.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (59 samples, 0.06%)</title><rect x="179.1" y="323.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="182.1" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (264 samples, 0.28%)</title><rect x="179.8" y="371.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.8" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (105 samples, 0.11%)</title><rect x="179.8" y="355.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.8" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (39 samples, 0.04%)</title><rect x="179.8" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.8" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (39 samples, 0.04%)</title><rect x="179.8" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="182.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (66 samples, 0.07%)</title><rect x="180.3" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (66 samples, 0.07%)</title><rect x="180.3" y="323.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="183.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (90 samples, 0.10%)</title><rect x="181.1" y="355.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (90 samples, 0.10%)</title><rect x="181.1" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (90 samples, 0.10%)</title><rect x="181.1" y="323.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (35 samples, 0.04%)</title><rect x="181.1" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (35 samples, 0.04%)</title><rect x="181.1" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (35 samples, 0.04%)</title><rect x="181.1" y="275.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.1" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (35 samples, 0.04%)</title><rect x="181.1" y="259.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="184.1" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$285/349554149.get (33 samples, 0.04%)</title><rect x="181.6" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.6" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (33 samples, 0.04%)</title><rect x="181.6" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="184.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.02%)</title><rect x="182.0" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (22 samples, 0.02%)</title><rect x="182.0" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.0" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (22 samples, 0.02%)</title><rect x="182.0" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.0" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (22 samples, 0.02%)</title><rect x="182.0" y="259.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="185.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (69 samples, 0.07%)</title><rect x="182.3" y="355.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (69 samples, 0.07%)</title><rect x="182.3" y="339.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="185.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (198 samples, 0.21%)</title><rect x="183.1" y="371.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (108 samples, 0.12%)</title><rect x="183.1" y="355.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (61 samples, 0.07%)</title><rect x="183.1" y="339.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="186.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="183.9" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="183.9" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="183.9" y="307.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="186.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (90 samples, 0.10%)</title><rect x="184.5" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (90 samples, 0.10%)</title><rect x="184.5" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (39 samples, 0.04%)</title><rect x="184.5" y="323.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="187.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.05%)</title><rect x="185.0" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.05%)</title><rect x="185.0" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.05%)</title><rect x="185.0" y="291.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="188.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (31 samples, 0.03%)</title><rect x="185.6" y="371.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="188.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (31 samples, 0.03%)</title><rect x="186.0" y="371.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="189.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="186.4" y="371.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="189.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (22 samples, 0.02%)</title><rect x="186.9" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (22 samples, 0.02%)</title><rect x="186.9" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="189.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (730 samples, 0.78%)</title><rect x="187.2" y="371.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (730 samples, 0.78%)</title><rect x="187.2" y="355.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (730 samples, 0.78%)</title><rect x="187.2" y="339.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.09%)</title><rect x="187.2" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.09%)</title><rect x="187.2" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.get$Lambda (28 samples, 0.03%)</title><rect x="187.2" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$291 (28 samples, 0.03%)</title><rect x="187.2" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="190.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1587562441.get$Lambda (26 samples, 0.03%)</title><rect x="187.6" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$292 (26 samples, 0.03%)</title><rect x="187.6" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="190.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1163391232.get$Lambda (32 samples, 0.03%)</title><rect x="187.9" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$295 (32 samples, 0.03%)</title><rect x="187.9" y="275.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="190.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (104 samples, 0.11%)</title><rect x="188.3" y="323.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (104 samples, 0.11%)</title><rect x="188.3" y="307.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="191.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.07%)</title><rect x="188.3" y="291.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="191.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="189.1" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="189.1" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.04%)</title><rect x="189.1" y="259.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="192.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (53 samples, 0.06%)</title><rect x="189.6" y="323.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="192.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (37 samples, 0.04%)</title><rect x="190.3" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="190.3" y="307.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="193.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (113 samples, 0.12%)</title><rect x="190.8" y="323.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (113 samples, 0.12%)</title><rect x="190.8" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="190.8" y="291.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="190.8" y="275.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$298/1051934413.get$Lambda (22 samples, 0.02%)</title><rect x="190.8" y="259.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$298 (22 samples, 0.02%)</title><rect x="190.8" y="243.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="193.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (91 samples, 0.10%)</title><rect x="191.0" y="291.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (91 samples, 0.10%)</title><rect x="191.0" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (91 samples, 0.10%)</title><rect x="191.0" y="259.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (50 samples, 0.05%)</title><rect x="191.0" y="243.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="194.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="191.7" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="191.7" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="191.7" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="194.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (111 samples, 0.12%)</title><rect x="192.2" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (111 samples, 0.12%)</title><rect x="192.2" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116237769.invoke (111 samples, 0.12%)</title><rect x="192.2" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.12%)</title><rect x="192.2" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (39 samples, 0.04%)</title><rect x="192.2" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.04%)</title><rect x="192.2" y="243.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="195.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (72 samples, 0.08%)</title><rect x="192.7" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (72 samples, 0.08%)</title><rect x="192.7" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.7" y="254.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.08%)</title><rect x="192.7" y="227.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="195.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (226 samples, 0.24%)</title><rect x="193.6" y="323.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (67 samples, 0.07%)</title><rect x="193.6" y="307.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="196.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (159 samples, 0.17%)</title><rect x="194.4" y="307.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (159 samples, 0.17%)</title><rect x="194.4" y="291.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="197.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116237769.invoke (159 samples, 0.17%)</title><rect x="194.4" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (159 samples, 0.17%)</title><rect x="194.4" y="259.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (35 samples, 0.04%)</title><rect x="194.4" y="243.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.04%)</title><rect x="194.4" y="227.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="197.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (124 samples, 0.13%)</title><rect x="194.9" y="243.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (124 samples, 0.13%)</title><rect x="194.9" y="227.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.9" y="238.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.13%)</title><rect x="194.9" y="211.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="197.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/60851830.apply (87 samples, 0.09%)</title><rect x="196.5" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (87 samples, 0.09%)</title><rect x="196.5" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (41 samples, 0.04%)</title><rect x="196.5" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (41 samples, 0.04%)</title><rect x="196.5" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.5" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (41 samples, 0.04%)</title><rect x="196.5" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.5" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (41 samples, 0.04%)</title><rect x="196.5" y="371.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="199.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (46 samples, 0.05%)</title><rect x="197.0" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="197.0" y="403.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="200.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (48 samples, 0.05%)</title><rect x="197.6" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (48 samples, 0.05%)</title><rect x="197.6" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.apply (48 samples, 0.05%)</title><rect x="197.6" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (48 samples, 0.05%)</title><rect x="197.6" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (48 samples, 0.05%)</title><rect x="197.6" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.05%)</title><rect x="197.6" y="387.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="200.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1477862221.apply (60 samples, 0.06%)</title><rect x="198.2" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (60 samples, 0.06%)</title><rect x="198.2" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (60 samples, 0.06%)</title><rect x="198.2" y="467.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="201.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,390 samples, 2.56%)</title><rect x="198.9" y="611.0" width="30.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.9" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (169 samples, 0.18%)</title><rect x="198.9" y="595.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (169 samples, 0.18%)</title><rect x="198.9" y="579.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (169 samples, 0.18%)</title><rect x="198.9" y="563.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (169 samples, 0.18%)</title><rect x="198.9" y="547.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (169 samples, 0.18%)</title><rect x="198.9" y="531.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.9" y="542.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.18%)</title><rect x="198.9" y="515.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="201.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (96 samples, 0.10%)</title><rect x="201.1" y="595.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (96 samples, 0.10%)</title><rect x="201.1" y="579.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (96 samples, 0.10%)</title><rect x="201.1" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (96 samples, 0.10%)</title><rect x="201.1" y="547.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (96 samples, 0.10%)</title><rect x="201.1" y="531.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.1" y="542.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.10%)</title><rect x="201.1" y="515.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="204.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (184 samples, 0.20%)</title><rect x="202.3" y="595.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.3" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (41 samples, 0.04%)</title><rect x="202.3" y="579.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="205.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.05%)</title><rect x="202.8" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.05%)</title><rect x="202.8" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.03%)</title><rect x="202.8" y="547.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="205.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.03%)</title><rect x="203.1" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.1" y="558.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.03%)</title><rect x="203.1" y="531.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="206.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (32 samples, 0.03%)</title><rect x="203.4" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (32 samples, 0.03%)</title><rect x="203.4" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.4" y="574.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="203.4" y="547.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="206.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (60 samples, 0.06%)</title><rect x="203.8" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.06%)</title><rect x="203.8" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.02%)</title><rect x="203.8" y="547.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="206.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.04%)</title><rect x="204.1" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.1" y="558.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.04%)</title><rect x="204.1" y="531.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="207.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (595 samples, 0.64%)</title><rect x="204.6" y="595.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (595 samples, 0.64%)</title><rect x="204.6" y="579.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (595 samples, 0.64%)</title><rect x="204.6" y="563.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.6" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (35 samples, 0.04%)</title><rect x="204.8" y="547.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="207.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (70 samples, 0.08%)</title><rect x="205.3" y="547.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="208.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.06%)</title><rect x="206.4" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.06%)</title><rect x="206.4" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.4" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (52 samples, 0.06%)</title><rect x="206.4" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.4" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (52 samples, 0.06%)</title><rect x="206.4" y="499.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="209.4" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (35 samples, 0.04%)</title><rect x="207.0" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.0" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (35 samples, 0.04%)</title><rect x="207.0" y="531.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="210.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (284 samples, 0.30%)</title><rect x="207.5" y="547.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (284 samples, 0.30%)</title><rect x="207.5" y="531.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (284 samples, 0.30%)</title><rect x="207.5" y="515.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (63 samples, 0.07%)</title><rect x="207.5" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.5" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (63 samples, 0.07%)</title><rect x="207.5" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (63 samples, 0.07%)</title><rect x="207.5" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (63 samples, 0.07%)</title><rect x="207.5" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (63 samples, 0.07%)</title><rect x="207.5" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (63 samples, 0.07%)</title><rect x="207.5" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (63 samples, 0.07%)</title><rect x="207.5" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.07%)</title><rect x="207.5" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (63 samples, 0.07%)</title><rect x="207.5" y="371.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="210.5" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (125 samples, 0.13%)</title><rect x="208.3" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.3" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (125 samples, 0.13%)</title><rect x="208.3" y="483.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (64 samples, 0.07%)</title><rect x="208.3" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.07%)</title><rect x="208.3" y="451.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.07%)</title><rect x="208.3" y="435.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="211.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (61 samples, 0.07%)</title><rect x="209.1" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.1" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (61 samples, 0.07%)</title><rect x="209.1" y="451.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="212.1" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (96 samples, 0.10%)</title><rect x="209.8" y="499.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (96 samples, 0.10%)</title><rect x="209.8" y="483.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="212.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (85 samples, 0.09%)</title><rect x="211.1" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (85 samples, 0.09%)</title><rect x="211.1" y="531.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="214.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,346 samples, 1.44%)</title><rect x="212.1" y="595.0" width="17.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (69 samples, 0.07%)</title><rect x="212.1" y="579.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="215.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (82 samples, 0.09%)</title><rect x="213.0" y="579.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (82 samples, 0.09%)</title><rect x="213.0" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.0" y="574.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.09%)</title><rect x="213.0" y="547.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="216.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (172 samples, 0.18%)</title><rect x="214.0" y="579.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (172 samples, 0.18%)</title><rect x="214.0" y="563.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.09%)</title><rect x="214.0" y="547.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="217.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (90 samples, 0.10%)</title><rect x="215.1" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.1" y="558.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.10%)</title><rect x="215.1" y="531.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="218.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,023 samples, 1.10%)</title><rect x="216.2" y="579.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (324 samples, 0.35%)</title><rect x="216.2" y="563.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (324 samples, 0.35%)</title><rect x="216.2" y="547.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="219.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (152 samples, 0.16%)</title><rect x="216.2" y="531.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="219.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (172 samples, 0.18%)</title><rect x="218.1" y="531.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.1" y="542.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.18%)</title><rect x="218.1" y="515.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="221.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (150 samples, 0.16%)</title><rect x="220.3" y="563.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (150 samples, 0.16%)</title><rect x="220.3" y="547.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.3" y="558.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.09%)</title><rect x="220.3" y="531.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="223.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.07%)</title><rect x="221.4" y="531.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="224.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (128 samples, 0.14%)</title><rect x="222.2" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (128 samples, 0.14%)</title><rect x="222.2" y="547.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (128 samples, 0.14%)</title><rect x="222.2" y="531.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.07%)</title><rect x="222.2" y="515.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="225.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.07%)</title><rect x="223.0" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.0" y="526.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.07%)</title><rect x="223.0" y="499.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="226.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (156 samples, 0.17%)</title><rect x="223.8" y="563.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (156 samples, 0.17%)</title><rect x="223.8" y="547.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (156 samples, 0.17%)</title><rect x="223.8" y="531.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (156 samples, 0.17%)</title><rect x="223.8" y="515.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (156 samples, 0.17%)</title><rect x="223.8" y="499.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (156 samples, 0.17%)</title><rect x="223.8" y="483.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="226.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (265 samples, 0.28%)</title><rect x="225.8" y="563.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (83 samples, 0.09%)</title><rect x="225.8" y="547.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (83 samples, 0.09%)</title><rect x="225.8" y="531.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="228.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (112 samples, 0.12%)</title><rect x="226.9" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.9" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (112 samples, 0.12%)</title><rect x="226.9" y="531.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="229.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$281/147625240.apply (70 samples, 0.08%)</title><rect x="228.3" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (70 samples, 0.08%)</title><rect x="228.3" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (70 samples, 0.08%)</title><rect x="228.3" y="515.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="231.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (889 samples, 0.95%)</title><rect x="229.2" y="723.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (889 samples, 0.95%)</title><rect x="229.2" y="707.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (889 samples, 0.95%)</title><rect x="229.2" y="691.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (889 samples, 0.95%)</title><rect x="229.2" y="675.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (889 samples, 0.95%)</title><rect x="229.2" y="659.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (860 samples, 0.92%)</title><rect x="229.2" y="643.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.05%)</title><rect x="229.2" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.05%)</title><rect x="229.2" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (34 samples, 0.04%)</title><rect x="229.3" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$223 (34 samples, 0.04%)</title><rect x="229.3" y="579.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="232.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (44 samples, 0.05%)</title><rect x="229.8" y="627.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="232.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (60 samples, 0.06%)</title><rect x="230.3" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (60 samples, 0.06%)</title><rect x="230.3" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (46 samples, 0.05%)</title><rect x="230.5" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (46 samples, 0.05%)</title><rect x="230.5" y="579.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="233.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (709 samples, 0.76%)</title><rect x="231.1" y="627.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (709 samples, 0.76%)</title><rect x="231.1" y="611.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.run (612 samples, 0.66%)</title><rect x="231.1" y="595.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (612 samples, 0.66%)</title><rect x="231.1" y="579.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (612 samples, 0.66%)</title><rect x="231.1" y="563.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (167 samples, 0.18%)</title><rect x="231.1" y="547.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="234.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (106 samples, 0.11%)</title><rect x="231.1" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.1" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (43 samples, 0.05%)</title><rect x="231.1" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.1" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (43 samples, 0.05%)</title><rect x="231.1" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="234.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (63 samples, 0.07%)</title><rect x="231.6" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.6" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (63 samples, 0.07%)</title><rect x="231.6" y="499.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="234.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (61 samples, 0.07%)</title><rect x="232.4" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (61 samples, 0.07%)</title><rect x="232.4" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (61 samples, 0.07%)</title><rect x="232.4" y="499.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/1836463382.get (40 samples, 0.04%)</title><rect x="232.4" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="235.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (40 samples, 0.04%)</title><rect x="232.4" y="467.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="235.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (21 samples, 0.02%)</title><rect x="232.9" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (21 samples, 0.02%)</title><rect x="232.9" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.9" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (21 samples, 0.02%)</title><rect x="232.9" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.9" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (21 samples, 0.02%)</title><rect x="232.9" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="235.9" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.map (21 samples, 0.02%)</title><rect x="233.2" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.2" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (21 samples, 0.02%)</title><rect x="233.2" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.2" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (21 samples, 0.02%)</title><rect x="233.2" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.2" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (21 samples, 0.02%)</title><rect x="233.2" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="236.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (424 samples, 0.45%)</title><rect x="233.5" y="547.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (24 samples, 0.03%)</title><rect x="233.5" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.5" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (24 samples, 0.03%)</title><rect x="233.5" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (24 samples, 0.03%)</title><rect x="233.5" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (24 samples, 0.03%)</title><rect x="233.5" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.5" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (24 samples, 0.03%)</title><rect x="233.5" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="236.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (400 samples, 0.43%)</title><rect x="233.8" y="531.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (174 samples, 0.19%)</title><rect x="233.8" y="515.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.03%)</title><rect x="233.8" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (28 samples, 0.03%)</title><rect x="233.8" y="483.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (28 samples, 0.03%)</title><rect x="233.8" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (28 samples, 0.03%)</title><rect x="233.8" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (28 samples, 0.03%)</title><rect x="233.8" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (28 samples, 0.03%)</title><rect x="233.8" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="236.8" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (32 samples, 0.03%)</title><rect x="234.1" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (32 samples, 0.03%)</title><rect x="234.1" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.03%)</title><rect x="234.1" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (32 samples, 0.03%)</title><rect x="234.1" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (32 samples, 0.03%)</title><rect x="234.1" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.1" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (32 samples, 0.03%)</title><rect x="234.1" y="419.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="237.1" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (54 samples, 0.06%)</title><rect x="234.5" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (54 samples, 0.06%)</title><rect x="234.5" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (54 samples, 0.06%)</title><rect x="234.5" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="237.5" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (27 samples, 0.03%)</title><rect x="235.2" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.2" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (27 samples, 0.03%)</title><rect x="235.2" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.2" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (27 samples, 0.03%)</title><rect x="235.2" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="238.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (33 samples, 0.04%)</title><rect x="235.5" y="499.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="238.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (86 samples, 0.09%)</title><rect x="236.0" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (34 samples, 0.04%)</title><rect x="236.0" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (34 samples, 0.04%)</title><rect x="236.0" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (34 samples, 0.04%)</title><rect x="236.0" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.04%)</title><rect x="236.0" y="451.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="239.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (23 samples, 0.02%)</title><rect x="236.4" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (23 samples, 0.02%)</title><rect x="236.4" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (23 samples, 0.02%)</title><rect x="236.4" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="239.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (29 samples, 0.03%)</title><rect x="236.7" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (29 samples, 0.03%)</title><rect x="236.7" y="483.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="239.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (140 samples, 0.15%)</title><rect x="237.0" y="515.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (121 samples, 0.13%)</title><rect x="237.3" y="499.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (39 samples, 0.04%)</title><rect x="237.3" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (39 samples, 0.04%)</title><rect x="237.3" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="240.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (39 samples, 0.04%)</title><rect x="237.3" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (39 samples, 0.04%)</title><rect x="237.3" y="435.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="240.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (82 samples, 0.09%)</title><rect x="237.8" y="483.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (82 samples, 0.09%)</title><rect x="237.8" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (57 samples, 0.06%)</title><rect x="237.8" y="451.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="240.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (25 samples, 0.03%)</title><rect x="238.5" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (25 samples, 0.03%)</title><rect x="238.5" y="435.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="241.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (97 samples, 0.10%)</title><rect x="238.8" y="595.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (97 samples, 0.10%)</title><rect x="238.8" y="579.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (97 samples, 0.10%)</title><rect x="238.8" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (97 samples, 0.10%)</title><rect x="238.8" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 0.10%)</title><rect x="238.8" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (97 samples, 0.10%)</title><rect x="238.8" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (97 samples, 0.10%)</title><rect x="238.8" y="499.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/2089965289.accept (97 samples, 0.10%)</title><rect x="238.8" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (97 samples, 0.10%)</title><rect x="238.8" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (97 samples, 0.10%)</title><rect x="238.8" y="451.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 0.10%)</title><rect x="238.8" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (97 samples, 0.10%)</title><rect x="238.8" y="419.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.apply (97 samples, 0.10%)</title><rect x="238.8" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (97 samples, 0.10%)</title><rect x="238.8" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (97 samples, 0.10%)</title><rect x="238.8" y="371.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="241.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (29 samples, 0.03%)</title><rect x="240.0" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (29 samples, 0.03%)</title><rect x="240.0" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (29 samples, 0.03%)</title><rect x="240.0" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="243.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (29 samples, 0.03%)</title><rect x="240.0" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$107/373692322.run (269 samples, 0.29%)</title><rect x="240.4" y="755.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="243.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocallyAsync$1 (269 samples, 0.29%)</title><rect x="240.4" y="739.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (269 samples, 0.29%)</title><rect x="240.4" y="723.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (269 samples, 0.29%)</title><rect x="240.4" y="707.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (269 samples, 0.29%)</title><rect x="240.4" y="691.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.4" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.02%)</title><rect x="240.4" y="675.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="243.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (55 samples, 0.06%)</title><rect x="240.7" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.7" y="686.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="240.7" y="659.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="243.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (192 samples, 0.21%)</title><rect x="241.4" y="675.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (192 samples, 0.21%)</title><rect x="241.4" y="659.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.4" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (84 samples, 0.09%)</title><rect x="241.4" y="643.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.4" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 0.09%)</title><rect x="241.4" y="627.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="244.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (108 samples, 0.12%)</title><rect x="242.4" y="643.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (77 samples, 0.08%)</title><rect x="242.4" y="627.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.4" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.08%)</title><rect x="242.4" y="611.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="245.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (31 samples, 0.03%)</title><rect x="243.4" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (25 samples, 0.03%)</title><rect x="243.5" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Value (25 samples, 0.03%)</title><rect x="243.5" y="595.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="246.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$277/1271947751.run (17,721 samples, 19.00%)</title><rect x="243.8" y="755.0" width="224.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.8" y="766.0">ru/mail/polis/service/ShardedH..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodeRequest$0 (17,721 samples, 19.00%)</title><rect x="243.8" y="739.0" width="224.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.8" y="750.0">ru/mail/polis/service/ShardedH..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (17,721 samples, 19.00%)</title><rect x="243.8" y="723.0" width="224.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.8" y="734.0">ru/mail/polis/service/ShardedH..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (17,721 samples, 19.00%)</title><rect x="243.8" y="707.0" width="224.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.8" y="718.0">ru/mail/polis/service/ShardedH..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (17,721 samples, 19.00%)</title><rect x="243.8" y="691.0" width="224.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.8" y="702.0">ru/mail/polis/service/HttpApiB..</text>
</g>
<g>
<title>one.nio.http.Response (549 samples, 0.59%)</title><rect x="243.8" y="675.0" width="7.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="246.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,824 samples, 5.17%)</title><rect x="250.8" y="675.0" width="61.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.8" y="686.0">one/ni..</text>
</g>
<g>
<title>byte[] (2,263 samples, 2.43%)</title><rect x="250.8" y="659.0" width="28.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="253.8" y="670.0">by..</text>
</g>
<g>
<title>java.lang.String[] (1,841 samples, 1.97%)</title><rect x="279.4" y="659.0" width="23.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="282.4" y="670.0">j..</text>
</g>
<g>
<title>java.lang.String (720 samples, 0.77%)</title><rect x="302.7" y="659.0" width="9.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="305.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (12,348 samples, 13.24%)</title><rect x="311.8" y="675.0" width="156.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.8" y="686.0">ru/mail/polis/dao/My..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (12,348 samples, 13.24%)</title><rect x="311.8" y="659.0" width="156.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.8" y="670.0">ru/mail/polis/dao/My..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5,122 samples, 5.49%)</title><rect x="311.8" y="643.0" width="64.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.8" y="654.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,122 samples, 5.49%)</title><rect x="311.8" y="627.0" width="64.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="314.8" y="638.0">java.ni..</text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (7,226 samples, 7.75%)</title><rect x="376.6" y="643.0" width="91.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.6" y="654.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4,922 samples, 5.28%)</title><rect x="376.6" y="627.0" width="62.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.6" y="638.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4,922 samples, 5.28%)</title><rect x="376.6" y="611.0" width="62.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="379.6" y="622.0">java.n..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (48 samples, 0.05%)</title><rect x="438.9" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (48 samples, 0.05%)</title><rect x="438.9" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (48 samples, 0.05%)</title><rect x="438.9" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.9" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (39 samples, 0.04%)</title><rect x="438.9" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.9" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (39 samples, 0.04%)</title><rect x="438.9" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (24 samples, 0.03%)</title><rect x="439.1" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (24 samples, 0.03%)</title><rect x="439.1" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (24 samples, 0.03%)</title><rect x="439.1" y="515.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="442.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (2,256 samples, 2.42%)</title><rect x="439.5" y="627.0" width="28.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="442.5" y="638.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (178 samples, 0.19%)</title><rect x="439.5" y="611.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (178 samples, 0.19%)</title><rect x="439.5" y="595.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (67 samples, 0.07%)</title><rect x="439.5" y="579.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="442.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (111 samples, 0.12%)</title><rect x="440.4" y="579.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="443.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (2,078 samples, 2.23%)</title><rect x="441.8" y="611.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.8" y="622.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Value (2,078 samples, 2.23%)</title><rect x="441.8" y="595.0" width="26.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="444.8" y="606.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (13,685 samples, 14.68%)</title><rect x="468.1" y="803.0" width="173.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.1" y="814.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (13,685 samples, 14.68%)</title><rect x="468.1" y="787.0" width="173.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.1" y="798.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (13,685 samples, 14.68%)</title><rect x="468.1" y="771.0" width="173.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.1" y="782.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (13,685 samples, 14.68%)</title><rect x="468.1" y="755.0" width="173.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.1" y="766.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (13,685 samples, 14.68%)</title><rect x="468.1" y="739.0" width="173.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.1" y="750.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (13,685 samples, 14.68%)</title><rect x="468.1" y="723.0" width="173.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.1" y="734.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13,685 samples, 14.68%)</title><rect x="468.1" y="707.0" width="173.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.1" y="718.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13,685 samples, 14.68%)</title><rect x="468.1" y="691.0" width="173.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.1" y="702.0">java/util/concurrent/C..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.accept (4,768 samples, 5.11%)</title><rect x="468.1" y="675.0" width="60.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.1" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.lambda$getEmptyBodyResponseHandler$0 (4,768 samples, 5.11%)</title><rect x="468.1" y="659.0" width="60.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.1" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.valueOf (1,486 samples, 1.59%)</title><rect x="468.1" y="643.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1,486 samples, 1.59%)</title><rect x="468.1" y="627.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.1" y="638.0"></text>
</g>
<g>
<title>byte[] (852 samples, 0.91%)</title><rect x="468.1" y="611.0" width="10.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="471.1" y="622.0"></text>
</g>
<g>
<title>java.lang.String (634 samples, 0.68%)</title><rect x="478.8" y="611.0" width="8.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="481.8" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (736 samples, 0.79%)</title><rect x="486.9" y="643.0" width="9.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="489.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,546 samples, 2.73%)</title><rect x="496.2" y="643.0" width="32.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.2" y="654.0">on..</text>
</g>
<g>
<title>byte[] (1,070 samples, 1.15%)</title><rect x="496.2" y="627.0" width="13.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="499.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (824 samples, 0.88%)</title><rect x="509.7" y="627.0" width="10.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="512.7" y="638.0"></text>
</g>
<g>
<title>java.lang.String (652 samples, 0.70%)</title><rect x="520.2" y="627.0" width="8.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="523.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.accept (290 samples, 0.31%)</title><rect x="528.4" y="675.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.lambda$getResultHandler$0 (290 samples, 0.31%)</title><rect x="528.4" y="659.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.4" y="670.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (287 samples, 0.31%)</title><rect x="528.4" y="643.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.4" y="654.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (287 samples, 0.31%)</title><rect x="528.4" y="627.0" width="3.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="531.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$142/329492948.accept (7,014 samples, 7.52%)</title><rect x="532.1" y="675.0" width="88.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.1" y="686.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$sendResponseAsync$0 (7,014 samples, 7.52%)</title><rect x="532.1" y="659.0" width="88.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.1" y="670.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7,014 samples, 7.52%)</title><rect x="532.1" y="643.0" width="88.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.1" y="654.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,920 samples, 5.28%)</title><rect x="532.1" y="627.0" width="62.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="535.1" y="638.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3,368 samples, 3.61%)</title><rect x="532.1" y="611.0" width="42.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.1" y="622.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3,368 samples, 3.61%)</title><rect x="532.1" y="595.0" width="42.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.1" y="606.0">one/..</text>
</g>
<g>
<title>byte[] (2,906 samples, 3.12%)</title><rect x="532.1" y="579.0" width="36.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="535.1" y="590.0">byt..</text>
</g>
<g>
<title>byte[] (462 samples, 0.50%)</title><rect x="568.8" y="579.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="571.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,552 samples, 1.66%)</title><rect x="574.7" y="611.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.7" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,552 samples, 1.66%)</title><rect x="574.7" y="595.0" width="19.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="577.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,094 samples, 2.25%)</title><rect x="594.3" y="627.0" width="26.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.3" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,094 samples, 2.25%)</title><rect x="594.3" y="611.0" width="26.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.3" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,094 samples, 2.25%)</title><rect x="594.3" y="595.0" width="26.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.3" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (803 samples, 0.86%)</title><rect x="594.3" y="579.0" width="10.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="597.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,291 samples, 1.38%)</title><rect x="604.5" y="579.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.5" y="590.0"></text>
</g>
<g>
<title>byte[] (1,291 samples, 1.38%)</title><rect x="604.5" y="563.0" width="16.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="607.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.accept (1,613 samples, 1.73%)</title><rect x="620.8" y="675.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodesResponsesAsync$3 (1,613 samples, 1.73%)</title><rect x="620.8" y="659.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponses (1,613 samples, 1.73%)</title><rect x="620.8" y="643.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.8" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (331 samples, 0.35%)</title><rect x="620.8" y="627.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,282 samples, 1.37%)</title><rect x="625.0" y="627.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.0" y="638.0"></text>
</g>
<g>
<title>byte[] (546 samples, 0.59%)</title><rect x="625.0" y="611.0" width="6.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="628.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (416 samples, 0.45%)</title><rect x="631.9" y="611.0" width="5.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="634.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String (320 samples, 0.34%)</title><rect x="637.2" y="611.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="640.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (8,178 samples, 8.77%)</title><rect x="641.2" y="803.0" width="103.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.2" y="814.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (157 samples, 0.17%)</title><rect x="641.2" y="787.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 0.17%)</title><rect x="641.2" y="771.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1377655111.get$Lambda (82 samples, 0.09%)</title><rect x="641.2" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (82 samples, 0.09%)</title><rect x="641.2" y="739.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="644.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1072487675.get$Lambda (75 samples, 0.08%)</title><rect x="642.3" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$248 (75 samples, 0.08%)</title><rect x="642.3" y="739.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="645.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (148 samples, 0.16%)</title><rect x="643.2" y="787.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (148 samples, 0.16%)</title><rect x="643.2" y="771.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/1669720320.get$Lambda (148 samples, 0.16%)</title><rect x="643.2" y="755.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$241 (148 samples, 0.16%)</title><rect x="643.2" y="739.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="646.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,724 samples, 1.85%)</title><rect x="645.1" y="787.0" width="21.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.1" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/182260085.accept (1,492 samples, 1.60%)</title><rect x="645.1" y="771.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,492 samples, 1.60%)</title><rect x="645.1" y="755.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,492 samples, 1.60%)</title><rect x="645.1" y="739.0" width="18.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,492 samples, 1.60%)</title><rect x="645.1" y="723.0" width="18.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,492 samples, 1.60%)</title><rect x="645.1" y="707.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,492 samples, 1.60%)</title><rect x="645.1" y="691.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,492 samples, 1.60%)</title><rect x="645.1" y="675.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,492 samples, 1.60%)</title><rect x="645.1" y="659.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,492 samples, 1.60%)</title><rect x="645.1" y="643.0" width="18.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,492 samples, 1.60%)</title><rect x="645.1" y="627.0" width="18.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (1,492 samples, 1.60%)</title><rect x="645.1" y="611.0" width="18.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,492 samples, 1.60%)</title><rect x="645.1" y="595.0" width="18.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (512 samples, 0.55%)</title><rect x="645.1" y="579.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (512 samples, 0.55%)</title><rect x="645.1" y="563.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.1" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (190 samples, 0.20%)</title><rect x="645.1" y="547.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.1" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (190 samples, 0.20%)</title><rect x="645.1" y="531.0" width="2.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="648.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (322 samples, 0.35%)</title><rect x="647.5" y="547.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (156 samples, 0.17%)</title><rect x="647.5" y="531.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (156 samples, 0.17%)</title><rect x="647.5" y="515.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (156 samples, 0.17%)</title><rect x="647.5" y="499.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (156 samples, 0.17%)</title><rect x="647.5" y="483.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (156 samples, 0.17%)</title><rect x="647.5" y="467.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="650.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (166 samples, 0.18%)</title><rect x="649.5" y="531.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (166 samples, 0.18%)</title><rect x="649.5" y="515.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (166 samples, 0.18%)</title><rect x="649.5" y="499.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (166 samples, 0.18%)</title><rect x="649.5" y="483.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (166 samples, 0.18%)</title><rect x="649.5" y="467.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (163 samples, 0.17%)</title><rect x="649.5" y="451.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="652.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (118 samples, 0.13%)</title><rect x="651.6" y="579.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.13%)</title><rect x="651.6" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.13%)</title><rect x="651.6" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (118 samples, 0.13%)</title><rect x="651.6" y="531.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (118 samples, 0.13%)</title><rect x="651.6" y="515.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="654.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (858 samples, 0.92%)</title><rect x="653.1" y="579.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (450 samples, 0.48%)</title><rect x="653.1" y="563.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (285 samples, 0.31%)</title><rect x="653.1" y="547.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (285 samples, 0.31%)</title><rect x="653.1" y="531.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="656.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (165 samples, 0.18%)</title><rect x="656.7" y="547.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.7" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (165 samples, 0.18%)</title><rect x="656.7" y="531.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.7" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (165 samples, 0.18%)</title><rect x="656.7" y="515.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="659.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (408 samples, 0.44%)</title><rect x="658.8" y="563.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/1961873698.get (408 samples, 0.44%)</title><rect x="658.8" y="547.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (408 samples, 0.44%)</title><rect x="658.8" y="531.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (408 samples, 0.44%)</title><rect x="658.8" y="515.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (408 samples, 0.44%)</title><rect x="658.8" y="499.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.8" y="510.0"></text>
</g>
<g>
<title>byte[] (401 samples, 0.43%)</title><rect x="658.9" y="483.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="661.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/1936584687.accept (232 samples, 0.25%)</title><rect x="664.0" y="771.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (232 samples, 0.25%)</title><rect x="664.0" y="755.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="667.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/1669720320.run (232 samples, 0.25%)</title><rect x="664.0" y="739.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (232 samples, 0.25%)</title><rect x="664.0" y="723.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (232 samples, 0.25%)</title><rect x="664.0" y="707.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (232 samples, 0.25%)</title><rect x="664.0" y="691.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (232 samples, 0.25%)</title><rect x="664.0" y="675.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.0" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (232 samples, 0.25%)</title><rect x="664.0" y="659.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="667.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (724 samples, 0.78%)</title><rect x="666.9" y="787.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.9" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (724 samples, 0.78%)</title><rect x="666.9" y="771.0" width="9.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="669.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (308 samples, 0.33%)</title><rect x="676.1" y="787.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.1" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (158 samples, 0.17%)</title><rect x="676.1" y="771.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (158 samples, 0.17%)</title><rect x="676.1" y="755.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.1" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (158 samples, 0.17%)</title><rect x="676.1" y="739.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.1" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (158 samples, 0.17%)</title><rect x="676.1" y="723.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (158 samples, 0.17%)</title><rect x="676.1" y="707.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (158 samples, 0.17%)</title><rect x="676.1" y="691.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.1" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (158 samples, 0.17%)</title><rect x="676.1" y="675.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="679.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (150 samples, 0.16%)</title><rect x="678.1" y="771.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.1" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (150 samples, 0.16%)</title><rect x="678.1" y="755.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="681.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (984 samples, 1.06%)</title><rect x="680.0" y="787.0" width="12.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/167882164.run (503 samples, 0.54%)</title><rect x="680.0" y="771.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (503 samples, 0.54%)</title><rect x="680.0" y="755.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (503 samples, 0.54%)</title><rect x="680.0" y="739.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (503 samples, 0.54%)</title><rect x="680.0" y="723.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (503 samples, 0.54%)</title><rect x="680.0" y="707.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (503 samples, 0.54%)</title><rect x="680.0" y="691.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (503 samples, 0.54%)</title><rect x="680.0" y="675.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (503 samples, 0.54%)</title><rect x="680.0" y="659.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (502 samples, 0.54%)</title><rect x="680.0" y="643.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (502 samples, 0.54%)</title><rect x="680.0" y="627.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (335 samples, 0.36%)</title><rect x="680.0" y="611.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (335 samples, 0.36%)</title><rect x="680.0" y="595.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (335 samples, 0.36%)</title><rect x="680.0" y="579.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1151844284.linkToTargetMethod (234 samples, 0.25%)</title><rect x="680.0" y="563.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1380806038.invoke (234 samples, 0.25%)</title><rect x="680.0" y="547.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 0.25%)</title><rect x="680.0" y="531.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (234 samples, 0.25%)</title><rect x="680.0" y="515.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (234 samples, 0.25%)</title><rect x="680.0" y="499.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.0" y="510.0"></text>
</g>
<g>
<title>byte[] (234 samples, 0.25%)</title><rect x="680.0" y="483.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="683.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (101 samples, 0.11%)</title><rect x="682.9" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.11%)</title><rect x="682.9" y="547.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.11%)</title><rect x="682.9" y="531.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (101 samples, 0.11%)</title><rect x="682.9" y="515.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (101 samples, 0.11%)</title><rect x="682.9" y="499.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="685.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (167 samples, 0.18%)</title><rect x="684.2" y="611.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (167 samples, 0.18%)</title><rect x="684.2" y="595.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (167 samples, 0.18%)</title><rect x="684.2" y="579.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (167 samples, 0.18%)</title><rect x="684.2" y="563.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (167 samples, 0.18%)</title><rect x="684.2" y="547.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (167 samples, 0.18%)</title><rect x="684.2" y="531.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (166 samples, 0.18%)</title><rect x="684.2" y="515.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="687.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$184/853746396.run (481 samples, 0.52%)</title><rect x="686.3" y="771.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (481 samples, 0.52%)</title><rect x="686.3" y="755.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (197 samples, 0.21%)</title><rect x="686.3" y="739.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (197 samples, 0.21%)</title><rect x="686.3" y="723.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$252/1669380854.get$Lambda (197 samples, 0.21%)</title><rect x="686.3" y="707.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.3" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$252 (197 samples, 0.21%)</title><rect x="686.3" y="691.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="689.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (284 samples, 0.30%)</title><rect x="688.8" y="739.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (284 samples, 0.30%)</title><rect x="688.8" y="723.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (284 samples, 0.30%)</title><rect x="688.8" y="707.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (281 samples, 0.30%)</title><rect x="688.8" y="691.0" width="3.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="691.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,588 samples, 2.78%)</title><rect x="692.4" y="787.0" width="32.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.4" y="798.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (452 samples, 0.48%)</title><rect x="692.4" y="771.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.4" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (452 samples, 0.48%)</title><rect x="692.4" y="755.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="695.4" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (452 samples, 0.48%)</title><rect x="692.4" y="739.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.4" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (452 samples, 0.48%)</title><rect x="692.4" y="723.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.4" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (452 samples, 0.48%)</title><rect x="692.4" y="707.0" width="5.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="695.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,136 samples, 2.29%)</title><rect x="698.1" y="771.0" width="27.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.1" y="782.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (265 samples, 0.28%)</title><rect x="698.1" y="755.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (265 samples, 0.28%)</title><rect x="698.1" y="739.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$311/1255574723.get$Lambda (265 samples, 0.28%)</title><rect x="698.1" y="723.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.1" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$311 (265 samples, 0.28%)</title><rect x="698.1" y="707.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="701.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (569 samples, 0.61%)</title><rect x="701.5" y="755.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.5" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (569 samples, 0.61%)</title><rect x="701.5" y="739.0" width="7.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="704.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (303 samples, 0.32%)</title><rect x="708.7" y="755.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.7" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (303 samples, 0.32%)</title><rect x="708.7" y="739.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.7" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (303 samples, 0.32%)</title><rect x="708.7" y="723.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="711.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (999 samples, 1.07%)</title><rect x="712.5" y="755.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.5" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (419 samples, 0.45%)</title><rect x="712.5" y="739.0" width="5.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="715.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (580 samples, 0.62%)</title><rect x="717.8" y="739.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (580 samples, 0.62%)</title><rect x="717.8" y="723.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.8" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (580 samples, 0.62%)</title><rect x="717.8" y="707.0" width="7.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="720.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,108 samples, 1.19%)</title><rect x="725.2" y="787.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (87 samples, 0.09%)</title><rect x="725.2" y="771.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (87 samples, 0.09%)</title><rect x="725.2" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="728.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/387958208.get$Lambda (87 samples, 0.09%)</title><rect x="725.2" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.2" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (87 samples, 0.09%)</title><rect x="725.2" y="723.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="728.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (626 samples, 0.67%)</title><rect x="726.3" y="771.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (272 samples, 0.29%)</title><rect x="726.3" y="755.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (272 samples, 0.29%)</title><rect x="726.3" y="739.0" width="3.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="729.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (354 samples, 0.38%)</title><rect x="729.7" y="755.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.7" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (354 samples, 0.38%)</title><rect x="729.7" y="739.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="732.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (395 samples, 0.42%)</title><rect x="734.2" y="771.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (395 samples, 0.42%)</title><rect x="734.2" y="755.0" width="5.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="737.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (224 samples, 0.24%)</title><rect x="739.2" y="787.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (224 samples, 0.24%)</title><rect x="739.2" y="771.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (224 samples, 0.24%)</title><rect x="739.2" y="755.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (224 samples, 0.24%)</title><rect x="739.2" y="739.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (224 samples, 0.24%)</title><rect x="739.2" y="723.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (224 samples, 0.24%)</title><rect x="739.2" y="707.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (224 samples, 0.24%)</title><rect x="739.2" y="691.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="742.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (224 samples, 0.24%)</title><rect x="739.2" y="675.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (224 samples, 0.24%)</title><rect x="739.2" y="659.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="742.2" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (224 samples, 0.24%)</title><rect x="739.2" y="643.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="742.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (200 samples, 0.21%)</title><rect x="742.2" y="787.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (200 samples, 0.21%)</title><rect x="742.2" y="771.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (200 samples, 0.21%)</title><rect x="742.2" y="755.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.2" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (200 samples, 0.21%)</title><rect x="742.2" y="739.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="745.2" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35,186 samples, 37.73%)</title><rect x="744.7" y="803.0" width="445.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.7" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (796 samples, 0.85%)</title><rect x="744.7" y="787.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.7" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (796 samples, 0.85%)</title><rect x="744.7" y="771.0" width="10.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="747.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34,390 samples, 36.88%)</title><rect x="754.8" y="787.0" width="435.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.8" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34,390 samples, 36.88%)</title><rect x="754.8" y="771.0" width="435.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.8" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34,389 samples, 36.88%)</title><rect x="754.8" y="755.0" width="435.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.8" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14,796 samples, 15.87%)</title><rect x="754.8" y="739.0" width="187.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.8" y="750.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14,796 samples, 15.87%)</title><rect x="754.8" y="723.0" width="187.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.8" y="734.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>one/nio/http/Request.getPath (834 samples, 0.89%)</title><rect x="754.8" y="707.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (834 samples, 0.89%)</title><rect x="754.8" y="691.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (834 samples, 0.89%)</title><rect x="754.8" y="675.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.8" y="686.0"></text>
</g>
<g>
<title>java.lang.String (316 samples, 0.34%)</title><rect x="754.8" y="659.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="757.8" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (518 samples, 0.56%)</title><rect x="758.8" y="659.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.8" y="670.0"></text>
</g>
<g>
<title>byte[] (518 samples, 0.56%)</title><rect x="758.8" y="643.0" width="6.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="761.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (13,962 samples, 14.97%)</title><rect x="765.4" y="707.0" width="176.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.4" y="718.0">ru/mail/polis/service/S..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (856 samples, 0.92%)</title><rect x="765.4" y="691.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (856 samples, 0.92%)</title><rect x="765.4" y="675.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (856 samples, 0.92%)</title><rect x="765.4" y="659.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="768.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String (309 samples, 0.33%)</title><rect x="765.4" y="643.0" width="3.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="768.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (547 samples, 0.59%)</title><rect x="769.3" y="643.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.3" y="654.0"></text>
</g>
<g>
<title>byte[] (547 samples, 0.59%)</title><rect x="769.3" y="627.0" width="6.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="772.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (13,106 samples, 14.05%)</title><rect x="776.2" y="691.0" width="165.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.2" y="702.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/lang/String.getBytes (287 samples, 0.31%)</title><rect x="776.2" y="675.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (287 samples, 0.31%)</title><rect x="776.2" y="659.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (287 samples, 0.31%)</title><rect x="776.2" y="643.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.2" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (287 samples, 0.31%)</title><rect x="776.2" y="627.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.2" y="638.0"></text>
</g>
<g>
<title>byte[] (287 samples, 0.31%)</title><rect x="776.2" y="611.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="779.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (579 samples, 0.62%)</title><rect x="779.8" y="675.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (579 samples, 0.62%)</title><rect x="779.8" y="659.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (579 samples, 0.62%)</title><rect x="779.8" y="643.0" width="7.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="782.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (500 samples, 0.54%)</title><rect x="787.2" y="675.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (500 samples, 0.54%)</title><rect x="787.2" y="659.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (500 samples, 0.54%)</title><rect x="787.2" y="643.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (287 samples, 0.31%)</title><rect x="787.2" y="627.0" width="3.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="790.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (213 samples, 0.23%)</title><rect x="790.8" y="627.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.8" y="638.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.23%)</title><rect x="790.8" y="611.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="793.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (753 samples, 0.81%)</title><rect x="793.5" y="675.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (753 samples, 0.81%)</title><rect x="793.5" y="659.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (753 samples, 0.81%)</title><rect x="793.5" y="643.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (423 samples, 0.45%)</title><rect x="793.5" y="627.0" width="5.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="796.5" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (330 samples, 0.35%)</title><rect x="798.8" y="627.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.8" y="638.0"></text>
</g>
<g>
<title>byte[] (330 samples, 0.35%)</title><rect x="798.8" y="611.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="801.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.sendResponseAsync (1,044 samples, 1.12%)</title><rect x="803.0" y="675.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (202 samples, 0.22%)</title><rect x="803.0" y="659.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (202 samples, 0.22%)</title><rect x="803.0" y="643.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$142/329492948.get$Lambda (202 samples, 0.22%)</title><rect x="803.0" y="627.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.0" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApi$$Lambda$142 (202 samples, 0.22%)</title><rect x="803.0" y="611.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="806.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (842 samples, 0.90%)</title><rect x="805.6" y="659.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (842 samples, 0.90%)</title><rect x="805.6" y="643.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (529 samples, 0.57%)</title><rect x="805.6" y="627.0" width="6.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="808.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (313 samples, 0.34%)</title><rect x="812.3" y="627.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (313 samples, 0.34%)</title><rect x="812.3" y="611.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="815.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (472 samples, 0.51%)</title><rect x="816.2" y="675.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (42 samples, 0.05%)</title><rect x="816.2" y="659.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.05%)</title><rect x="816.2" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.05%)</title><rect x="816.2" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.03%)</title><rect x="816.2" y="611.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="819.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.all (62 samples, 0.07%)</title><rect x="816.8" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.8" y="670.0"></text>
</g>
<g>
<title>java/util/Set.of (62 samples, 0.07%)</title><rect x="816.8" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.8" y="654.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (29 samples, 0.03%)</title><rect x="816.8" y="627.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="819.8" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (33 samples, 0.04%)</title><rect x="817.1" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.1" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.04%)</title><rect x="817.1" y="611.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="820.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (368 samples, 0.39%)</title><rect x="817.5" y="659.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.5" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (74 samples, 0.08%)</title><rect x="817.5" y="643.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (20 samples, 0.02%)</title><rect x="817.5" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.5" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (20 samples, 0.02%)</title><rect x="817.5" y="611.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="820.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (54 samples, 0.06%)</title><rect x="817.8" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.8" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (40 samples, 0.04%)</title><rect x="818.0" y="611.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="821.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (263 samples, 0.28%)</title><rect x="818.5" y="643.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (96 samples, 0.10%)</title><rect x="818.5" y="627.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.5" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (96 samples, 0.10%)</title><rect x="818.5" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.5" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (96 samples, 0.10%)</title><rect x="818.5" y="595.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (96 samples, 0.10%)</title><rect x="818.5" y="579.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (96 samples, 0.10%)</title><rect x="818.5" y="563.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (96 samples, 0.10%)</title><rect x="818.5" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (96 samples, 0.10%)</title><rect x="818.5" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.06%)</title><rect x="818.5" y="515.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="821.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.04%)</title><rect x="819.2" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.2" y="526.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.04%)</title><rect x="819.2" y="499.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="822.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (56 samples, 0.06%)</title><rect x="819.7" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (56 samples, 0.06%)</title><rect x="819.7" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (56 samples, 0.06%)</title><rect x="819.7" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.7" y="606.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (56 samples, 0.06%)</title><rect x="819.7" y="579.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="822.7" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.02%)</title><rect x="820.4" y="627.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="823.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.06%)</title><rect x="820.7" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (57 samples, 0.06%)</title><rect x="820.7" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.7" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.06%)</title><rect x="820.7" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (57 samples, 0.06%)</title><rect x="820.7" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 0.06%)</title><rect x="820.7" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.06%)</title><rect x="820.7" y="547.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="823.7" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (32 samples, 0.03%)</title><rect x="821.4" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.4" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (32 samples, 0.03%)</title><rect x="821.4" y="611.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="824.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.RF (31 samples, 0.03%)</title><rect x="821.8" y="643.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="824.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (8,163 samples, 8.75%)</title><rect x="822.2" y="675.0" width="103.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.2" y="686.0">ru/mail/poli..</text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.02%)</title><rect x="822.2" y="659.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="825.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (55 samples, 0.06%)</title><rect x="822.5" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (55 samples, 0.06%)</title><rect x="822.5" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (55 samples, 0.06%)</title><rect x="822.5" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (55 samples, 0.06%)</title><rect x="822.5" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (55 samples, 0.06%)</title><rect x="822.5" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.06%)</title><rect x="822.5" y="579.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="825.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (62 samples, 0.07%)</title><rect x="823.2" y="659.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (48 samples, 0.05%)</title><rect x="823.2" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="826.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (48 samples, 0.05%)</title><rect x="823.2" y="627.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="826.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (218 samples, 0.23%)</title><rect x="824.0" y="659.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="827.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (58 samples, 0.06%)</title><rect x="824.2" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (58 samples, 0.06%)</title><rect x="824.2" y="627.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="827.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (144 samples, 0.15%)</title><rect x="824.9" y="643.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (144 samples, 0.15%)</title><rect x="824.9" y="627.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (144 samples, 0.15%)</title><rect x="824.9" y="611.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.9" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (105 samples, 0.11%)</title><rect x="824.9" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.9" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (105 samples, 0.11%)</title><rect x="824.9" y="579.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="827.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (39 samples, 0.04%)</title><rect x="826.2" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.2" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (39 samples, 0.04%)</title><rect x="826.2" y="579.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="829.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (22 samples, 0.02%)</title><rect x="826.7" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="829.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.02%)</title><rect x="826.7" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.02%)</title><rect x="826.7" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.get$Lambda (22 samples, 0.02%)</title><rect x="826.7" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$105 (22 samples, 0.02%)</title><rect x="826.7" y="595.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="829.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNodeAsync (7,226 samples, 7.75%)</title><rect x="827.0" y="659.0" width="91.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.0" y="670.0">ru/mail/pol..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (55 samples, 0.06%)</title><rect x="827.0" y="643.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="830.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.05%)</title><rect x="827.7" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.05%)</title><rect x="827.7" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$135/1421739737.get$Lambda (46 samples, 0.05%)</title><rect x="827.7" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$135 (46 samples, 0.05%)</title><rect x="827.7" y="595.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="830.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (132 samples, 0.14%)</title><rect x="828.3" y="643.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (132 samples, 0.14%)</title><rect x="828.3" y="627.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (79 samples, 0.08%)</title><rect x="828.3" y="611.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="831.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (53 samples, 0.06%)</title><rect x="829.3" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (53 samples, 0.06%)</title><rect x="829.3" y="595.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="832.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (6,993 samples, 7.50%)</title><rect x="830.0" y="643.0" width="88.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.0" y="654.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.proxy (6,993 samples, 7.50%)</title><rect x="830.0" y="627.0" width="88.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.0" y="638.0">ru/mail/po..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (46 samples, 0.05%)</title><rect x="830.0" y="611.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="833.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (164 samples, 0.18%)</title><rect x="830.5" y="611.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (164 samples, 0.18%)</title><rect x="830.5" y="595.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (80 samples, 0.09%)</title><rect x="830.5" y="579.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="833.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.09%)</title><rect x="831.6" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (84 samples, 0.09%)</title><rect x="831.6" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (84 samples, 0.09%)</title><rect x="831.6" y="547.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="834.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,278 samples, 4.59%)</title><rect x="832.6" y="611.0" width="54.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.6" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,278 samples, 4.59%)</title><rect x="832.6" y="595.0" width="54.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.6" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,278 samples, 4.59%)</title><rect x="832.6" y="579.0" width="54.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.6" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,278 samples, 4.59%)</title><rect x="832.6" y="563.0" width="54.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.6" y="574.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="832.6" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="832.6" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$128/1067388313.get$Lambda (35 samples, 0.04%)</title><rect x="832.6" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$128 (35 samples, 0.04%)</title><rect x="832.6" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="835.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (140 samples, 0.15%)</title><rect x="833.1" y="547.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (140 samples, 0.15%)</title><rect x="833.1" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (79 samples, 0.08%)</title><rect x="833.1" y="515.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="836.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.07%)</title><rect x="834.1" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.07%)</title><rect x="834.1" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.07%)</title><rect x="834.1" y="483.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="837.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (177 samples, 0.19%)</title><rect x="834.8" y="547.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (177 samples, 0.19%)</title><rect x="834.8" y="531.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (83 samples, 0.09%)</title><rect x="834.8" y="515.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="837.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.10%)</title><rect x="835.9" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.10%)</title><rect x="835.9" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.10%)</title><rect x="835.9" y="483.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="838.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (93 samples, 0.10%)</title><rect x="837.1" y="547.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="840.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (187 samples, 0.20%)</title><rect x="838.2" y="547.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="841.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,045 samples, 2.19%)</title><rect x="840.6" y="547.0" width="25.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.6" y="558.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (230 samples, 0.25%)</title><rect x="840.6" y="531.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (172 samples, 0.18%)</title><rect x="840.6" y="515.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="843.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (56 samples, 0.06%)</title><rect x="840.6" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.6" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (56 samples, 0.06%)</title><rect x="840.6" y="483.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="843.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (116 samples, 0.12%)</title><rect x="841.3" y="499.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (116 samples, 0.12%)</title><rect x="841.3" y="483.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="844.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (58 samples, 0.06%)</title><rect x="842.8" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (58 samples, 0.06%)</title><rect x="842.8" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (58 samples, 0.06%)</title><rect x="842.8" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/1836463382.get (58 samples, 0.06%)</title><rect x="842.8" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.8" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (58 samples, 0.06%)</title><rect x="842.8" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="845.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (750 samples, 0.80%)</title><rect x="843.5" y="531.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (750 samples, 0.80%)</title><rect x="843.5" y="515.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (26 samples, 0.03%)</title><rect x="843.5" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="846.5" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (51 samples, 0.05%)</title><rect x="843.9" y="499.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="846.9" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (99 samples, 0.11%)</title><rect x="844.5" y="499.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="847.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (25 samples, 0.03%)</title><rect x="845.7" y="499.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="848.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.07%)</title><rect x="846.1" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.07%)</title><rect x="846.1" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (69 samples, 0.07%)</title><rect x="846.1" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.1" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (69 samples, 0.07%)</title><rect x="846.1" y="451.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="849.1" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (330 samples, 0.35%)</title><rect x="846.9" y="499.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (330 samples, 0.35%)</title><rect x="846.9" y="483.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (330 samples, 0.35%)</title><rect x="846.9" y="467.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (330 samples, 0.35%)</title><rect x="846.9" y="451.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (134 samples, 0.14%)</title><rect x="846.9" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (134 samples, 0.14%)</title><rect x="846.9" y="419.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (134 samples, 0.14%)</title><rect x="846.9" y="403.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (134 samples, 0.14%)</title><rect x="846.9" y="387.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (134 samples, 0.14%)</title><rect x="846.9" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (134 samples, 0.14%)</title><rect x="846.9" y="355.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (134 samples, 0.14%)</title><rect x="846.9" y="339.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (134 samples, 0.14%)</title><rect x="846.9" y="323.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.14%)</title><rect x="846.9" y="307.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="849.9" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (108 samples, 0.12%)</title><rect x="848.6" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.6" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (108 samples, 0.12%)</title><rect x="848.6" y="419.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (61 samples, 0.07%)</title><rect x="848.6" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (61 samples, 0.07%)</title><rect x="848.6" y="387.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.07%)</title><rect x="848.6" y="371.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="851.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (47 samples, 0.05%)</title><rect x="849.4" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.4" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (47 samples, 0.05%)</title><rect x="849.4" y="387.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="852.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (88 samples, 0.09%)</title><rect x="850.0" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (88 samples, 0.09%)</title><rect x="850.0" y="419.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="853.0" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (58 samples, 0.06%)</title><rect x="851.1" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.1" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (58 samples, 0.06%)</title><rect x="851.1" y="483.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="854.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (92 samples, 0.10%)</title><rect x="851.8" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (92 samples, 0.10%)</title><rect x="851.8" y="483.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="854.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (28 samples, 0.03%)</title><rect x="853.0" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="856.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (757 samples, 0.81%)</title><rect x="853.4" y="531.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.4" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (757 samples, 0.81%)</title><rect x="853.4" y="515.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.4" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (690 samples, 0.74%)</title><rect x="853.4" y="499.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.4" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (690 samples, 0.74%)</title><rect x="853.4" y="483.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.4" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (690 samples, 0.74%)</title><rect x="853.4" y="467.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.4" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (139 samples, 0.15%)</title><rect x="853.4" y="451.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="856.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (183 samples, 0.20%)</title><rect x="855.1" y="451.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.1" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (183 samples, 0.20%)</title><rect x="855.1" y="435.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.1" y="446.0"></text>
</g>
<g>
<title>byte[] (183 samples, 0.20%)</title><rect x="855.1" y="419.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="858.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (368 samples, 0.39%)</title><rect x="857.4" y="451.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (368 samples, 0.39%)</title><rect x="857.4" y="435.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (176 samples, 0.19%)</title><rect x="857.4" y="419.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="860.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (192 samples, 0.21%)</title><rect x="859.7" y="419.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.7" y="430.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.21%)</title><rect x="859.7" y="403.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="862.7" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (67 samples, 0.07%)</title><rect x="862.1" y="499.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="865.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (105 samples, 0.11%)</title><rect x="862.9" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (105 samples, 0.11%)</title><rect x="862.9" y="515.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="865.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (175 samples, 0.19%)</title><rect x="864.3" y="531.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (41 samples, 0.04%)</title><rect x="864.3" y="515.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="867.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (57 samples, 0.06%)</title><rect x="864.8" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.06%)</title><rect x="864.8" y="499.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="867.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (77 samples, 0.08%)</title><rect x="865.5" y="515.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (77 samples, 0.08%)</title><rect x="865.5" y="499.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="868.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,026 samples, 1.10%)</title><rect x="866.5" y="547.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (38 samples, 0.04%)</title><rect x="866.5" y="531.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="869.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (154 samples, 0.17%)</title><rect x="867.0" y="531.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="870.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (38 samples, 0.04%)</title><rect x="868.9" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (38 samples, 0.04%)</title><rect x="868.9" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="871.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (796 samples, 0.85%)</title><rect x="869.4" y="531.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="872.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (796 samples, 0.85%)</title><rect x="869.4" y="515.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.4" y="526.0"></text>
</g>
<g>
<title>java.lang.Class[] (65 samples, 0.07%)</title><rect x="869.4" y="499.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="872.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (65 samples, 0.07%)</title><rect x="870.2" y="499.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="873.2" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (72 samples, 0.08%)</title><rect x="871.0" y="499.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="874.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (333 samples, 0.36%)</title><rect x="872.0" y="499.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (333 samples, 0.36%)</title><rect x="872.0" y="483.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.0" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (333 samples, 0.36%)</title><rect x="872.0" y="467.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.0" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (333 samples, 0.36%)</title><rect x="872.0" y="451.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.0" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (333 samples, 0.36%)</title><rect x="872.0" y="435.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="875.0" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (150 samples, 0.16%)</title><rect x="876.2" y="499.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (150 samples, 0.16%)</title><rect x="876.2" y="483.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (28 samples, 0.03%)</title><rect x="876.2" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="879.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (28 samples, 0.03%)</title><rect x="876.2" y="451.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="879.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (122 samples, 0.13%)</title><rect x="876.5" y="467.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (122 samples, 0.13%)</title><rect x="876.5" y="451.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="879.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (111 samples, 0.12%)</title><rect x="878.1" y="499.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (111 samples, 0.12%)</title><rect x="878.1" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (111 samples, 0.12%)</title><rect x="878.1" y="467.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="881.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (575 samples, 0.62%)</title><rect x="879.5" y="547.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (105 samples, 0.11%)</title><rect x="879.5" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (55 samples, 0.06%)</title><rect x="879.5" y="515.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="882.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (50 samples, 0.05%)</title><rect x="880.2" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="883.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (50 samples, 0.05%)</title><rect x="880.2" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (50 samples, 0.05%)</title><rect x="880.2" y="483.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="883.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (70 samples, 0.08%)</title><rect x="880.8" y="531.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="883.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (400 samples, 0.43%)</title><rect x="881.7" y="531.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="884.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.07%)</title><rect x="881.7" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.07%)</title><rect x="881.7" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/1345656667.get$Lambda (35 samples, 0.04%)</title><rect x="881.7" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$122 (35 samples, 0.04%)</title><rect x="881.7" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="884.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.get$Lambda (34 samples, 0.04%)</title><rect x="882.1" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$125 (34 samples, 0.04%)</title><rect x="882.1" y="467.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="885.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (331 samples, 0.35%)</title><rect x="882.6" y="515.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (331 samples, 0.35%)</title><rect x="882.6" y="499.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (190 samples, 0.20%)</title><rect x="882.6" y="483.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="885.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (141 samples, 0.15%)</title><rect x="885.0" y="483.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (141 samples, 0.15%)</title><rect x="885.0" y="467.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (141 samples, 0.15%)</title><rect x="885.0" y="451.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="888.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.createRequest (2,470 samples, 2.65%)</title><rect x="886.7" y="611.0" width="31.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.7" y="622.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (190 samples, 0.20%)</title><rect x="886.7" y="595.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1049817027.invoke (190 samples, 0.20%)</title><rect x="886.7" y="579.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (190 samples, 0.20%)</title><rect x="886.7" y="563.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (56 samples, 0.06%)</title><rect x="886.7" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.06%)</title><rect x="886.7" y="531.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="889.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (134 samples, 0.14%)</title><rect x="887.5" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (134 samples, 0.14%)</title><rect x="887.5" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.5" y="542.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.14%)</title><rect x="887.5" y="515.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="890.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (878 samples, 0.94%)</title><rect x="889.2" y="595.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.2" y="606.0"></text>
</g>
<g>
<title>java.net.URI (185 samples, 0.20%)</title><rect x="889.2" y="579.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="892.2" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (693 samples, 0.74%)</title><rect x="891.5" y="579.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.5" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (83 samples, 0.09%)</title><rect x="891.5" y="563.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="894.5" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (610 samples, 0.65%)</title><rect x="892.5" y="563.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="895.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (110 samples, 0.12%)</title><rect x="892.5" y="547.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (110 samples, 0.12%)</title><rect x="892.5" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.08%)</title><rect x="892.5" y="515.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="895.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.04%)</title><rect x="893.4" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.4" y="526.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.04%)</title><rect x="893.4" y="499.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="896.4" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (500 samples, 0.54%)</title><rect x="893.9" y="547.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (265 samples, 0.28%)</title><rect x="893.9" y="531.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (265 samples, 0.28%)</title><rect x="893.9" y="515.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.9" y="526.0"></text>
</g>
<g>
<title>java.lang.String (122 samples, 0.13%)</title><rect x="893.9" y="499.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="896.9" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.15%)</title><rect x="895.5" y="499.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.5" y="510.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.15%)</title><rect x="895.5" y="483.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="898.5" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (235 samples, 0.25%)</title><rect x="897.3" y="531.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (118 samples, 0.13%)</title><rect x="897.3" y="515.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (118 samples, 0.13%)</title><rect x="897.3" y="499.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.05%)</title><rect x="897.3" y="483.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.3" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.08%)</title><rect x="897.8" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.8" y="494.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.08%)</title><rect x="897.8" y="467.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="900.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (117 samples, 0.13%)</title><rect x="898.8" y="515.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.8" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (117 samples, 0.13%)</title><rect x="898.8" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.8" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (117 samples, 0.13%)</title><rect x="898.8" y="483.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (117 samples, 0.13%)</title><rect x="898.8" y="467.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.06%)</title><rect x="898.8" y="451.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="901.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.07%)</title><rect x="899.4" y="451.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.4" y="462.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.07%)</title><rect x="899.4" y="435.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="902.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (75 samples, 0.08%)</title><rect x="900.3" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (75 samples, 0.08%)</title><rect x="900.3" y="579.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="903.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (232 samples, 0.25%)</title><rect x="901.2" y="595.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (93 samples, 0.10%)</title><rect x="901.2" y="579.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="904.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (139 samples, 0.15%)</title><rect x="902.4" y="579.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (34 samples, 0.04%)</title><rect x="902.4" y="563.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="905.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (105 samples, 0.11%)</title><rect x="902.8" y="563.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (105 samples, 0.11%)</title><rect x="902.8" y="547.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="905.8" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.of (38 samples, 0.04%)</title><rect x="904.1" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.1" y="606.0"></text>
</g>
<g>
<title>java/time/Duration.plus (38 samples, 0.04%)</title><rect x="904.1" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.1" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.plusMillis (38 samples, 0.04%)</title><rect x="904.1" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.1" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.plus (38 samples, 0.04%)</title><rect x="904.1" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.1" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (38 samples, 0.04%)</title><rect x="904.1" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.1" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.create (38 samples, 0.04%)</title><rect x="904.1" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.1" y="526.0"></text>
</g>
<g>
<title>java.time.Duration (38 samples, 0.04%)</title><rect x="904.1" y="499.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="907.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (887 samples, 0.95%)</title><rect x="904.6" y="595.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (80 samples, 0.09%)</title><rect x="904.6" y="579.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="907.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (807 samples, 0.87%)</title><rect x="905.6" y="579.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (742 samples, 0.80%)</title><rect x="905.6" y="563.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (742 samples, 0.80%)</title><rect x="905.6" y="547.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.6" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (36 samples, 0.04%)</title><rect x="905.6" y="531.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="908.6" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.06%)</title><rect x="906.1" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="909.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (106 samples, 0.11%)</title><rect x="906.8" y="531.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="909.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (27 samples, 0.03%)</title><rect x="908.1" y="531.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="911.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.08%)</title><rect x="908.4" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.08%)</title><rect x="908.4" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="911.4" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (73 samples, 0.08%)</title><rect x="908.4" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.4" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (73 samples, 0.08%)</title><rect x="908.4" y="483.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="911.4" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (54 samples, 0.06%)</title><rect x="909.4" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.4" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (54 samples, 0.06%)</title><rect x="909.4" y="515.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="912.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (298 samples, 0.32%)</title><rect x="910.0" y="531.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (298 samples, 0.32%)</title><rect x="910.0" y="515.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (298 samples, 0.32%)</title><rect x="910.0" y="499.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (115 samples, 0.12%)</title><rect x="910.0" y="483.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (115 samples, 0.12%)</title><rect x="910.0" y="467.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (115 samples, 0.12%)</title><rect x="910.0" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (115 samples, 0.12%)</title><rect x="910.0" y="435.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (115 samples, 0.12%)</title><rect x="910.0" y="419.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (115 samples, 0.12%)</title><rect x="910.0" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (115 samples, 0.12%)</title><rect x="910.0" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (115 samples, 0.12%)</title><rect x="910.0" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (115 samples, 0.12%)</title><rect x="910.0" y="355.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="913.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (101 samples, 0.11%)</title><rect x="911.5" y="483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.5" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (101 samples, 0.11%)</title><rect x="911.5" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="914.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (48 samples, 0.05%)</title><rect x="911.5" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.05%)</title><rect x="911.5" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.05%)</title><rect x="911.5" y="419.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="914.5" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (53 samples, 0.06%)</title><rect x="912.1" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.1" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (53 samples, 0.06%)</title><rect x="912.1" y="435.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="915.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (82 samples, 0.09%)</title><rect x="912.8" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.8" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (82 samples, 0.09%)</title><rect x="912.8" y="467.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="915.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (96 samples, 0.10%)</title><rect x="913.8" y="531.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (96 samples, 0.10%)</title><rect x="913.8" y="515.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="916.8" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (65 samples, 0.07%)</title><rect x="915.0" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.0" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (65 samples, 0.07%)</title><rect x="915.0" y="547.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.0" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (65 samples, 0.07%)</title><rect x="915.0" y="531.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="918.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (170 samples, 0.18%)</title><rect x="915.9" y="595.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (170 samples, 0.18%)</title><rect x="915.9" y="579.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (170 samples, 0.18%)</title><rect x="915.9" y="563.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.9" y="574.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (170 samples, 0.18%)</title><rect x="915.9" y="547.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (71 samples, 0.08%)</title><rect x="915.9" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (71 samples, 0.08%)</title><rect x="915.9" y="515.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="918.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$109/1115088082.apply (99 samples, 0.11%)</title><rect x="916.8" y="531.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (99 samples, 0.11%)</title><rect x="916.8" y="515.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.8" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (49 samples, 0.05%)</title><rect x="916.8" y="499.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="919.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (50 samples, 0.05%)</title><rect x="917.4" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.05%)</title><rect x="917.4" y="483.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="920.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.getEmptyBodyResponseHandler (35 samples, 0.04%)</title><rect x="918.0" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="918.0" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="918.0" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.get$Lambda (35 samples, 0.04%)</title><rect x="918.0" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.0" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClient$$Lambda$133 (35 samples, 0.04%)</title><rect x="918.0" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="921.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocallyAsync (68 samples, 0.07%)</title><rect x="918.4" y="659.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (25 samples, 0.03%)</title><rect x="918.4" y="643.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="921.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="918.8" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="918.8" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$107/373692322.get$Lambda (24 samples, 0.03%)</title><rect x="918.8" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$107 (24 samples, 0.03%)</title><rect x="918.8" y="595.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="921.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponsesAsync (489 samples, 0.52%)</title><rect x="919.3" y="659.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.3" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (22 samples, 0.02%)</title><rect x="919.3" y="643.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="922.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1815611058.linkToTargetMethod (37 samples, 0.04%)</title><rect x="919.6" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/455680542.invokeStatic (37 samples, 0.04%)</title><rect x="919.6" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.get$Lambda (37 samples, 0.04%)</title><rect x="919.6" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$141 (37 samples, 0.04%)</title><rect x="919.6" y="595.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="922.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (85 samples, 0.09%)</title><rect x="920.1" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (85 samples, 0.09%)</title><rect x="920.1" y="627.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (51 samples, 0.05%)</title><rect x="920.1" y="611.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="923.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (34 samples, 0.04%)</title><rect x="920.7" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (34 samples, 0.04%)</title><rect x="920.7" y="595.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="923.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.firstN (345 samples, 0.37%)</title><rect x="921.1" y="643.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (27 samples, 0.03%)</title><rect x="921.4" y="627.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="924.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (21 samples, 0.02%)</title><rect x="921.7" y="627.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="924.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (29 samples, 0.03%)</title><rect x="922.0" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.0" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.03%)</title><rect x="922.0" y="611.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="925.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (223 samples, 0.24%)</title><rect x="922.3" y="627.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (223 samples, 0.24%)</title><rect x="922.3" y="611.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (142 samples, 0.15%)</title><rect x="922.3" y="595.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="925.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (81 samples, 0.09%)</title><rect x="924.1" y="595.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="927.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (81 samples, 0.09%)</title><rect x="924.1" y="579.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="927.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.getResultHandler (27 samples, 0.03%)</title><rect x="925.2" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="928.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1238248940.linkToTargetMethod (27 samples, 0.03%)</title><rect x="925.2" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="928.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1831735832.invokeStatic (27 samples, 0.03%)</title><rect x="925.2" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.get$Lambda (27 samples, 0.03%)</title><rect x="925.2" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="928.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ExtendedCompletableFuture$$Lambda$138 (27 samples, 0.03%)</title><rect x="925.2" y="563.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="928.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (1,308 samples, 1.40%)</title><rect x="925.5" y="675.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.5" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (329 samples, 0.35%)</title><rect x="925.5" y="659.0" width="4.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="928.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (282 samples, 0.30%)</title><rect x="929.7" y="659.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (282 samples, 0.30%)</title><rect x="929.7" y="643.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$277/1271947751.get$Lambda (282 samples, 0.30%)</title><rect x="929.7" y="627.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="932.7" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$277 (282 samples, 0.30%)</title><rect x="929.7" y="611.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="932.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (363 samples, 0.39%)</title><rect x="933.2" y="659.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (363 samples, 0.39%)</title><rect x="933.2" y="643.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.2" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (361 samples, 0.39%)</title><rect x="933.2" y="627.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="936.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (334 samples, 0.36%)</title><rect x="937.8" y="659.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (334 samples, 0.36%)</title><rect x="937.8" y="643.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (334 samples, 0.36%)</title><rect x="937.8" y="627.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.get$Lambda (334 samples, 0.36%)</title><rect x="937.8" y="611.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$105 (334 samples, 0.36%)</title><rect x="937.8" y="595.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="940.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,562 samples, 4.89%)</title><rect x="942.0" y="739.0" width="57.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.0" y="750.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (516 samples, 0.55%)</title><rect x="942.0" y="723.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="945.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,092 samples, 1.17%)</title><rect x="948.6" y="723.0" width="13.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.6" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (1,092 samples, 1.17%)</title><rect x="948.6" y="707.0" width="13.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="951.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,954 samples, 3.17%)</title><rect x="962.4" y="723.0" width="37.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.4" y="734.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,954 samples, 3.17%)</title><rect x="962.4" y="707.0" width="37.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.4" y="718.0">one..</text>
</g>
<g>
<title>char[] (1,789 samples, 1.92%)</title><rect x="962.4" y="691.0" width="22.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="965.4" y="702.0">c..</text>
</g>
<g>
<title>java.lang.String (391 samples, 0.42%)</title><rect x="985.0" y="691.0" width="5.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="988.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (774 samples, 0.83%)</title><rect x="990.0" y="691.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="993.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (774 samples, 0.83%)</title><rect x="990.0" y="675.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (774 samples, 0.83%)</title><rect x="990.0" y="659.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="993.0" y="670.0"></text>
</g>
<g>
<title>byte[] (774 samples, 0.83%)</title><rect x="990.0" y="643.0" width="9.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="993.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (419 samples, 0.45%)</title><rect x="999.8" y="739.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.8" y="750.0"></text>
</g>
<g>
<title>byte[] (419 samples, 0.45%)</title><rect x="999.8" y="723.0" width="5.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1002.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (565 samples, 0.61%)</title><rect x="1005.1" y="739.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (565 samples, 0.61%)</title><rect x="1005.1" y="723.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (565 samples, 0.61%)</title><rect x="1005.1" y="707.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1008.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (287 samples, 0.31%)</title><rect x="1005.1" y="691.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1008.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (278 samples, 0.30%)</title><rect x="1008.7" y="691.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.7" y="702.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.30%)</title><rect x="1008.7" y="675.0" width="3.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1011.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,047 samples, 15.06%)</title><rect x="1012.2" y="739.0" width="177.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.2" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,047 samples, 15.06%)</title><rect x="1012.2" y="723.0" width="177.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1015.2" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (6,700 samples, 7.19%)</title><rect x="1012.2" y="707.0" width="84.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1015.2" y="718.0">char[]</text>
</g>
<g>
<title>char[] (216 samples, 0.23%)</title><rect x="1097.0" y="707.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1100.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (2,424 samples, 2.60%)</title><rect x="1099.7" y="707.0" width="30.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1102.7" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,707 samples, 5.05%)</title><rect x="1130.4" y="707.0" width="59.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.4" y="718.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,707 samples, 5.05%)</title><rect x="1130.4" y="691.0" width="59.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.4" y="702.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,707 samples, 5.05%)</title><rect x="1130.4" y="675.0" width="59.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.4" y="686.0">java/l..</text>
</g>
<g>
<title>byte[] (4,707 samples, 5.05%)</title><rect x="1130.4" y="659.0" width="59.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1133.4" y="670.0">byte[]</text>
</g>
</g>
</svg>
