<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (422,058 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (238,679 samples, 56.55%)</title><rect x="10.0" y="867.0" width="667.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (238,679 samples, 56.55%)</title><rect x="10.0" y="851.0" width="667.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (238,679 samples, 56.55%)</title><rect x="10.0" y="835.0" width="667.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (94,702 samples, 22.44%)</title><rect x="10.0" y="819.0" width="264.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (94,702 samples, 22.44%)</title><rect x="10.0" y="803.0" width="264.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (94,702 samples, 22.44%)</title><rect x="10.0" y="787.0" width="264.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1746722692.apply (94,689 samples, 22.44%)</title><rect x="10.0" y="771.0" width="264.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="782.0">jdk/internal/net/http/MultiExchange..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (94,689 samples, 22.44%)</title><rect x="10.0" y="755.0" width="264.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchange..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (94,689 samples, 22.44%)</title><rect x="10.0" y="739.0" width="264.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (58,864 samples, 13.95%)</title><rect x="10.0" y="723.0" width="164.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (58,864 samples, 13.95%)</title><rect x="10.0" y="707.0" width="164.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (58,864 samples, 13.95%)</title><rect x="10.0" y="691.0" width="164.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (56,959 samples, 13.50%)</title><rect x="10.0" y="675.0" width="159.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (56,959 samples, 13.50%)</title><rect x="10.0" y="659.0" width="159.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (56,959 samples, 13.50%)</title><rect x="10.0" y="643.0" width="159.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/505924666.apply (56,959 samples, 13.50%)</title><rect x="10.0" y="627.0" width="159.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="638.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (56,959 samples, 13.50%)</title><rect x="10.0" y="611.0" width="159.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (56,959 samples, 13.50%)</title><rect x="10.0" y="595.0" width="159.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/544549740.apply (56,959 samples, 13.50%)</title><rect x="10.0" y="579.0" width="159.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (56,959 samples, 13.50%)</title><rect x="10.0" y="563.0" width="159.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (56,959 samples, 13.50%)</title><rect x="10.0" y="547.0" width="159.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (56,959 samples, 13.50%)</title><rect x="10.0" y="531.0" width="159.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (56,959 samples, 13.50%)</title><rect x="10.0" y="515.0" width="159.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/1123664723.apply (56,959 samples, 13.50%)</title><rect x="10.0" y="499.0" width="159.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (56,959 samples, 13.50%)</title><rect x="10.0" y="483.0" width="159.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (56,959 samples, 13.50%)</title><rect x="10.0" y="467.0" width="159.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (56,959 samples, 13.50%)</title><rect x="10.0" y="451.0" width="159.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (9,792 samples, 2.32%)</title><rect x="10.0" y="435.0" width="27.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9,792 samples, 2.32%)</title><rect x="10.0" y="419.0" width="27.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9,792 samples, 2.32%)</title><rect x="10.0" y="403.0" width="27.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9,779 samples, 2.32%)</title><rect x="10.0" y="387.0" width="27.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9,779 samples, 2.32%)</title><rect x="10.0" y="371.0" width="27.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="382.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,830 samples, 0.67%)</title><rect x="10.0" y="355.0" width="7.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6,949 samples, 1.65%)</title><rect x="17.9" y="355.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (6,949 samples, 1.65%)</title><rect x="17.9" y="339.0" width="19.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (47,167 samples, 11.18%)</title><rect x="37.4" y="435.0" width="131.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.4" y="446.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (47,167 samples, 11.18%)</title><rect x="37.4" y="419.0" width="131.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.4" y="430.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (44,285 samples, 10.49%)</title><rect x="37.4" y="403.0" width="123.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.4" y="414.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (44,285 samples, 10.49%)</title><rect x="37.4" y="387.0" width="123.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.4" y="398.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (44,285 samples, 10.49%)</title><rect x="37.4" y="371.0" width="123.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.4" y="382.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (32,537 samples, 7.71%)</title><rect x="37.4" y="355.0" width="91.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="40.4" y="366.0">jdk.intern..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11,748 samples, 2.78%)</title><rect x="128.4" y="355.0" width="32.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.4" y="366.0">su..</text>
</g>
<g>
<title>java.lang.Object (11,748 samples, 2.78%)</title><rect x="128.4" y="339.0" width="32.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="131.4" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2,882 samples, 0.68%)</title><rect x="161.2" y="403.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2,882 samples, 0.68%)</title><rect x="161.2" y="387.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2,882 samples, 0.68%)</title><rect x="161.2" y="371.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2,882 samples, 0.68%)</title><rect x="161.2" y="355.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2,882 samples, 0.68%)</title><rect x="161.2" y="339.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2,882 samples, 0.68%)</title><rect x="161.2" y="323.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2,882 samples, 0.68%)</title><rect x="161.2" y="307.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2,882 samples, 0.68%)</title><rect x="161.2" y="291.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,882 samples, 0.68%)</title><rect x="161.2" y="275.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,756 samples, 0.65%)</title><rect x="161.2" y="259.0" width="7.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="164.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (126 samples, 0.03%)</title><rect x="168.9" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object (126 samples, 0.03%)</title><rect x="168.9" y="243.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="171.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,905 samples, 0.45%)</title><rect x="169.3" y="675.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,905 samples, 0.45%)</title><rect x="169.3" y="659.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,630 samples, 0.39%)</title><rect x="169.3" y="643.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,630 samples, 0.39%)</title><rect x="169.3" y="627.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,630 samples, 0.39%)</title><rect x="169.3" y="611.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$153/493368255.apply (1,630 samples, 0.39%)</title><rect x="169.3" y="595.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,630 samples, 0.39%)</title><rect x="169.3" y="579.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,630 samples, 0.39%)</title><rect x="169.3" y="563.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,630 samples, 0.39%)</title><rect x="169.3" y="547.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,630 samples, 0.39%)</title><rect x="169.3" y="531.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,629 samples, 0.39%)</title><rect x="169.3" y="515.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,629 samples, 0.39%)</title><rect x="169.3" y="499.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,629 samples, 0.39%)</title><rect x="169.3" y="483.0" width="4.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="172.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (275 samples, 0.07%)</title><rect x="173.8" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (275 samples, 0.07%)</title><rect x="173.8" y="627.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="176.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (33,127 samples, 7.85%)</title><rect x="174.6" y="723.0" width="92.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.6" y="734.0">jdk/interna..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (12,035 samples, 2.85%)</title><rect x="174.6" y="707.0" width="33.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="177.6" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (21,092 samples, 5.00%)</title><rect x="208.2" y="707.0" width="59.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.2" y="718.0">jdk/in..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (21,092 samples, 5.00%)</title><rect x="208.2" y="691.0" width="59.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.2" y="702.0">sun/ni..</text>
</g>
<g>
<title>java.lang.Object (21,092 samples, 5.00%)</title><rect x="208.2" y="675.0" width="59.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="211.2" y="686.0">java.l..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (2,697 samples, 0.64%)</title><rect x="267.2" y="723.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2,697 samples, 0.64%)</title><rect x="267.2" y="707.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2,673 samples, 0.63%)</title><rect x="267.3" y="691.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="270.3" y="702.0"></text>
</g>
<g>
<title>java.lang.Class (2,673 samples, 0.63%)</title><rect x="267.3" y="675.0" width="7.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="270.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24,699 samples, 5.85%)</title><rect x="274.8" y="819.0" width="69.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.8" y="830.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (24,699 samples, 5.85%)</title><rect x="274.8" y="803.0" width="69.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.8" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4,474 samples, 1.06%)</title><rect x="274.8" y="787.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,474 samples, 1.06%)</title><rect x="274.8" y="771.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,474 samples, 1.06%)</title><rect x="274.8" y="755.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,474 samples, 1.06%)</title><rect x="274.8" y="739.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,474 samples, 1.06%)</title><rect x="274.8" y="723.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="277.8" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,474 samples, 1.06%)</title><rect x="274.8" y="707.0" width="12.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="277.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (20,225 samples, 4.79%)</title><rect x="287.3" y="787.0" width="56.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.3" y="798.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (20,225 samples, 4.79%)</title><rect x="287.3" y="771.0" width="56.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.3" y="782.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (20,225 samples, 4.79%)</title><rect x="287.3" y="755.0" width="56.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="766.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20,225 samples, 4.79%)</title><rect x="287.3" y="739.0" width="56.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.3" y="750.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20,225 samples, 4.79%)</title><rect x="287.3" y="723.0" width="56.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.3" y="734.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20,225 samples, 4.79%)</title><rect x="287.3" y="707.0" width="56.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.3" y="718.0">jdk/in..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (20,225 samples, 4.79%)</title><rect x="287.3" y="691.0" width="56.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="290.3" y="702.0">java.u..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$249/1883349404.run (877 samples, 0.21%)</title><rect x="343.8" y="819.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (877 samples, 0.21%)</title><rect x="343.8" y="803.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (877 samples, 0.21%)</title><rect x="343.8" y="787.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (866 samples, 0.21%)</title><rect x="343.9" y="771.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (866 samples, 0.21%)</title><rect x="343.9" y="755.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (866 samples, 0.21%)</title><rect x="343.9" y="739.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (866 samples, 0.21%)</title><rect x="343.9" y="723.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (866 samples, 0.21%)</title><rect x="343.9" y="707.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (866 samples, 0.21%)</title><rect x="343.9" y="691.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (866 samples, 0.21%)</title><rect x="343.9" y="675.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (866 samples, 0.21%)</title><rect x="343.9" y="659.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (864 samples, 0.20%)</title><rect x="343.9" y="643.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (864 samples, 0.20%)</title><rect x="343.9" y="627.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (864 samples, 0.20%)</title><rect x="343.9" y="611.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (864 samples, 0.20%)</title><rect x="343.9" y="595.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (864 samples, 0.20%)</title><rect x="343.9" y="579.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (748 samples, 0.18%)</title><rect x="343.9" y="563.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/323025519.apply (712 samples, 0.17%)</title><rect x="343.9" y="547.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (712 samples, 0.17%)</title><rect x="343.9" y="531.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (712 samples, 0.17%)</title><rect x="343.9" y="515.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (712 samples, 0.17%)</title><rect x="343.9" y="499.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (712 samples, 0.17%)</title><rect x="343.9" y="483.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (712 samples, 0.17%)</title><rect x="343.9" y="467.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/173598784.run (712 samples, 0.17%)</title><rect x="343.9" y="451.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (712 samples, 0.17%)</title><rect x="343.9" y="435.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (712 samples, 0.17%)</title><rect x="343.9" y="419.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (712 samples, 0.17%)</title><rect x="343.9" y="403.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (712 samples, 0.17%)</title><rect x="343.9" y="387.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (712 samples, 0.17%)</title><rect x="343.9" y="371.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (712 samples, 0.17%)</title><rect x="343.9" y="355.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (712 samples, 0.17%)</title><rect x="343.9" y="339.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (712 samples, 0.17%)</title><rect x="343.9" y="323.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (712 samples, 0.17%)</title><rect x="343.9" y="307.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (712 samples, 0.17%)</title><rect x="343.9" y="291.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (712 samples, 0.17%)</title><rect x="343.9" y="275.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (712 samples, 0.17%)</title><rect x="343.9" y="259.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1257117945.run (712 samples, 0.17%)</title><rect x="343.9" y="243.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (712 samples, 0.17%)</title><rect x="343.9" y="227.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (712 samples, 0.17%)</title><rect x="343.9" y="211.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (712 samples, 0.17%)</title><rect x="343.9" y="195.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (712 samples, 0.17%)</title><rect x="343.9" y="179.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (692 samples, 0.16%)</title><rect x="343.9" y="163.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="346.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (692 samples, 0.16%)</title><rect x="343.9" y="147.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (135 samples, 0.03%)</title><rect x="343.9" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (135 samples, 0.03%)</title><rect x="343.9" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (135 samples, 0.03%)</title><rect x="343.9" y="99.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (135 samples, 0.03%)</title><rect x="343.9" y="83.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (135 samples, 0.03%)</title><rect x="343.9" y="67.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (557 samples, 0.13%)</title><rect x="344.3" y="131.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (557 samples, 0.13%)</title><rect x="344.3" y="115.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (557 samples, 0.13%)</title><rect x="344.3" y="99.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (557 samples, 0.13%)</title><rect x="344.3" y="83.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (557 samples, 0.13%)</title><rect x="344.3" y="67.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.3" y="78.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (461 samples, 0.11%)</title><rect x="344.3" y="51.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="347.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (96 samples, 0.02%)</title><rect x="345.6" y="51.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.6" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (96 samples, 0.02%)</title><rect x="345.6" y="35.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="348.6" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (116 samples, 0.03%)</title><rect x="345.9" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (116 samples, 0.03%)</title><rect x="345.9" y="547.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$239/1779741848.apply (116 samples, 0.03%)</title><rect x="345.9" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (116 samples, 0.03%)</title><rect x="345.9" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (116 samples, 0.03%)</title><rect x="345.9" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (116 samples, 0.03%)</title><rect x="345.9" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (116 samples, 0.03%)</title><rect x="345.9" y="467.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="348.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (118,401 samples, 28.05%)</title><rect x="346.3" y="819.0" width="331.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.3" y="830.0">jdk/internal/net/http/common/SequentialSchedu..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (118,401 samples, 28.05%)</title><rect x="346.3" y="803.0" width="331.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.3" y="814.0">jdk/internal/net/http/common/SequentialSchedu..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (54,702 samples, 12.96%)</title><rect x="346.3" y="787.0" width="152.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.3" y="798.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (54,702 samples, 12.96%)</title><rect x="346.3" y="771.0" width="152.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.3" y="782.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (54,702 samples, 12.96%)</title><rect x="346.3" y="755.0" width="152.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.3" y="766.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (45,288 samples, 10.73%)</title><rect x="346.3" y="739.0" width="126.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.3" y="750.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (45,288 samples, 10.73%)</title><rect x="346.3" y="723.0" width="126.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.3" y="734.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (45,288 samples, 10.73%)</title><rect x="346.3" y="707.0" width="126.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.3" y="718.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (45,288 samples, 10.73%)</title><rect x="346.3" y="691.0" width="126.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.3" y="702.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (45,288 samples, 10.73%)</title><rect x="346.3" y="675.0" width="126.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.3" y="686.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (45,288 samples, 10.73%)</title><rect x="346.3" y="659.0" width="126.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.3" y="670.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (45,284 samples, 10.73%)</title><rect x="346.3" y="643.0" width="126.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.3" y="654.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (45,284 samples, 10.73%)</title><rect x="346.3" y="627.0" width="126.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.3" y="638.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (45,284 samples, 10.73%)</title><rect x="346.3" y="611.0" width="126.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.3" y="622.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (33,084 samples, 7.84%)</title><rect x="346.3" y="595.0" width="92.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="349.3" y="606.0">jdk.interna..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (12,200 samples, 2.89%)</title><rect x="438.8" y="595.0" width="34.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.8" y="606.0">su..</text>
</g>
<g>
<title>java.lang.Object (12,200 samples, 2.89%)</title><rect x="438.8" y="579.0" width="34.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="441.8" y="590.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (9,414 samples, 2.23%)</title><rect x="472.9" y="739.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.9" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (9,414 samples, 2.23%)</title><rect x="472.9" y="723.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.9" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (9,414 samples, 2.23%)</title><rect x="472.9" y="707.0" width="26.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (9,414 samples, 2.23%)</title><rect x="472.9" y="691.0" width="26.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.9" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9,414 samples, 2.23%)</title><rect x="472.9" y="675.0" width="26.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.9" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,414 samples, 2.23%)</title><rect x="472.9" y="659.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.9" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9,414 samples, 2.23%)</title><rect x="472.9" y="643.0" width="26.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9,414 samples, 2.23%)</title><rect x="472.9" y="627.0" width="26.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.9" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9,414 samples, 2.23%)</title><rect x="472.9" y="611.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (9,414 samples, 2.23%)</title><rect x="472.9" y="595.0" width="26.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.9" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (9,414 samples, 2.23%)</title><rect x="472.9" y="579.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.9" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9,414 samples, 2.23%)</title><rect x="472.9" y="563.0" width="26.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,414 samples, 2.23%)</title><rect x="472.9" y="547.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,167 samples, 0.51%)</title><rect x="472.9" y="531.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1134623909.apply (2,162 samples, 0.51%)</title><rect x="472.9" y="515.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2,162 samples, 0.51%)</title><rect x="472.9" y="499.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2,162 samples, 0.51%)</title><rect x="472.9" y="483.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (2,162 samples, 0.51%)</title><rect x="472.9" y="467.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2,162 samples, 0.51%)</title><rect x="472.9" y="451.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Class (2,162 samples, 0.51%)</title><rect x="472.9" y="435.0" width="6.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="475.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7,247 samples, 1.72%)</title><rect x="479.0" y="531.0" width="20.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7,247 samples, 1.72%)</title><rect x="479.0" y="515.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$239/1779741848.apply (7,247 samples, 1.72%)</title><rect x="479.0" y="499.0" width="20.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7,247 samples, 1.72%)</title><rect x="479.0" y="483.0" width="20.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (7,247 samples, 1.72%)</title><rect x="479.0" y="467.0" width="20.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (7,247 samples, 1.72%)</title><rect x="479.0" y="451.0" width="20.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (7,247 samples, 1.72%)</title><rect x="479.0" y="435.0" width="20.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="482.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (63,699 samples, 15.09%)</title><rect x="499.2" y="787.0" width="178.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.2" y="798.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (63,699 samples, 15.09%)</title><rect x="499.2" y="771.0" width="178.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.2" y="782.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (63,699 samples, 15.09%)</title><rect x="499.2" y="755.0" width="178.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.2" y="766.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (63,699 samples, 15.09%)</title><rect x="499.2" y="739.0" width="178.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.2" y="750.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (63,699 samples, 15.09%)</title><rect x="499.2" y="723.0" width="178.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.2" y="734.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (63,467 samples, 15.04%)</title><rect x="499.2" y="707.0" width="177.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.2" y="718.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (63,467 samples, 15.04%)</title><rect x="499.2" y="691.0" width="177.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.2" y="702.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (63,467 samples, 15.04%)</title><rect x="499.2" y="675.0" width="177.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.2" y="686.0">jdk/internal/net/http/R..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1257117945.run (63,467 samples, 15.04%)</title><rect x="499.2" y="659.0" width="177.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.2" y="670.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (63,467 samples, 15.04%)</title><rect x="499.2" y="643.0" width="177.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.2" y="654.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (63,467 samples, 15.04%)</title><rect x="499.2" y="627.0" width="177.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.2" y="638.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (63,467 samples, 15.04%)</title><rect x="499.2" y="611.0" width="177.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.2" y="622.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (63,467 samples, 15.04%)</title><rect x="499.2" y="595.0" width="177.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.2" y="606.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,350 samples, 0.32%)</title><rect x="499.2" y="579.0" width="3.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="502.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (62,117 samples, 14.72%)</title><rect x="503.0" y="579.0" width="173.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.0" y="590.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (62,117 samples, 14.72%)</title><rect x="503.0" y="563.0" width="173.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.0" y="574.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (11,178 samples, 2.65%)</title><rect x="503.0" y="547.0" width="31.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (11,178 samples, 2.65%)</title><rect x="503.0" y="531.0" width="31.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (11,178 samples, 2.65%)</title><rect x="503.0" y="515.0" width="31.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (11,177 samples, 2.65%)</title><rect x="503.0" y="499.0" width="31.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.0" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (11,177 samples, 2.65%)</title><rect x="503.0" y="483.0" width="31.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.0" y="494.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,367 samples, 1.03%)</title><rect x="503.0" y="467.0" width="12.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="506.0" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6,810 samples, 1.61%)</title><rect x="515.2" y="467.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (6,810 samples, 1.61%)</title><rect x="515.2" y="451.0" width="19.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="518.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (50,939 samples, 12.07%)</title><rect x="534.2" y="547.0" width="142.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.2" y="558.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (50,939 samples, 12.07%)</title><rect x="534.2" y="531.0" width="142.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.2" y="542.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (50,939 samples, 12.07%)</title><rect x="534.2" y="515.0" width="142.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.2" y="526.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (50,939 samples, 12.07%)</title><rect x="534.2" y="499.0" width="142.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.2" y="510.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (50,939 samples, 12.07%)</title><rect x="534.2" y="483.0" width="142.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.2" y="494.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (41,821 samples, 9.91%)</title><rect x="534.2" y="467.0" width="117.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="537.2" y="478.0">jdk.internal.n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (9,118 samples, 2.16%)</title><rect x="651.2" y="467.0" width="25.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.2" y="478.0">s..</text>
</g>
<g>
<title>java.lang.Object (9,118 samples, 2.16%)</title><rect x="651.2" y="451.0" width="25.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="654.2" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (232 samples, 0.05%)</title><rect x="676.7" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (232 samples, 0.05%)</title><rect x="676.7" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (232 samples, 0.05%)</title><rect x="676.7" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (232 samples, 0.05%)</title><rect x="676.7" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (232 samples, 0.05%)</title><rect x="676.7" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (232 samples, 0.05%)</title><rect x="676.7" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (232 samples, 0.05%)</title><rect x="676.7" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (232 samples, 0.05%)</title><rect x="676.7" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (232 samples, 0.05%)</title><rect x="676.7" y="579.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (232 samples, 0.05%)</title><rect x="676.7" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (232 samples, 0.05%)</title><rect x="676.7" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (232 samples, 0.05%)</title><rect x="676.7" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (232 samples, 0.05%)</title><rect x="676.7" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (208 samples, 0.05%)</title><rect x="676.7" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (208 samples, 0.05%)</title><rect x="676.7" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$239/1779741848.apply (208 samples, 0.05%)</title><rect x="676.7" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (208 samples, 0.05%)</title><rect x="676.7" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (208 samples, 0.05%)</title><rect x="676.7" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (208 samples, 0.05%)</title><rect x="676.7" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (208 samples, 0.05%)</title><rect x="676.7" y="403.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="679.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (143 samples, 0.03%)</title><rect x="677.3" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (143 samples, 0.03%)</title><rect x="677.3" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (143 samples, 0.03%)</title><rect x="677.3" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (143 samples, 0.03%)</title><rect x="677.3" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (143 samples, 0.03%)</title><rect x="677.3" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (143 samples, 0.03%)</title><rect x="677.3" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (143 samples, 0.03%)</title><rect x="677.3" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (143 samples, 0.03%)</title><rect x="677.3" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$151/1114120118.accept (143 samples, 0.03%)</title><rect x="677.3" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$sendResponseAsync$0 (143 samples, 0.03%)</title><rect x="677.3" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (143 samples, 0.03%)</title><rect x="677.3" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.3" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.StorageSession (143 samples, 0.03%)</title><rect x="677.3" y="691.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="680.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (147,575 samples, 34.97%)</title><rect x="677.7" y="867.0" width="412.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.7" y="878.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (825 samples, 0.20%)</title><rect x="677.7" y="851.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/765718646.accept (825 samples, 0.20%)</title><rect x="677.7" y="835.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (825 samples, 0.20%)</title><rect x="677.7" y="819.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (825 samples, 0.20%)</title><rect x="677.7" y="803.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (825 samples, 0.20%)</title><rect x="677.7" y="787.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (825 samples, 0.20%)</title><rect x="677.7" y="771.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (825 samples, 0.20%)</title><rect x="677.7" y="755.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (825 samples, 0.20%)</title><rect x="677.7" y="739.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (825 samples, 0.20%)</title><rect x="677.7" y="723.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (825 samples, 0.20%)</title><rect x="677.7" y="707.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (825 samples, 0.20%)</title><rect x="677.7" y="691.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/1546095920.run (825 samples, 0.20%)</title><rect x="677.7" y="675.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (825 samples, 0.20%)</title><rect x="677.7" y="659.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (809 samples, 0.19%)</title><rect x="677.7" y="643.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (809 samples, 0.19%)</title><rect x="677.7" y="627.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (809 samples, 0.19%)</title><rect x="677.7" y="611.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (809 samples, 0.19%)</title><rect x="677.7" y="595.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (809 samples, 0.19%)</title><rect x="677.7" y="579.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (809 samples, 0.19%)</title><rect x="677.7" y="563.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (809 samples, 0.19%)</title><rect x="677.7" y="547.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (809 samples, 0.19%)</title><rect x="677.7" y="531.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (625 samples, 0.15%)</title><rect x="677.7" y="515.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (625 samples, 0.15%)</title><rect x="677.7" y="499.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (625 samples, 0.15%)</title><rect x="677.7" y="483.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (625 samples, 0.15%)</title><rect x="677.7" y="467.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (625 samples, 0.15%)</title><rect x="677.7" y="451.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (625 samples, 0.15%)</title><rect x="677.7" y="435.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (625 samples, 0.15%)</title><rect x="677.7" y="419.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (625 samples, 0.15%)</title><rect x="677.7" y="403.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="680.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (184 samples, 0.04%)</title><rect x="679.5" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (184 samples, 0.04%)</title><rect x="679.5" y="499.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (184 samples, 0.04%)</title><rect x="679.5" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (184 samples, 0.04%)</title><rect x="679.5" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (184 samples, 0.04%)</title><rect x="679.5" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (184 samples, 0.04%)</title><rect x="679.5" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (184 samples, 0.04%)</title><rect x="679.5" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="682.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (101,518 samples, 24.05%)</title><rect x="680.0" y="851.0" width="283.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="683.0" y="862.0">jdk.internal.net.http.HttpClientImpl$S..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,417 samples, 0.34%)</title><rect x="963.8" y="851.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$182/4401270.run (464 samples, 0.11%)</title><rect x="963.8" y="835.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (464 samples, 0.11%)</title><rect x="963.8" y="819.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (464 samples, 0.11%)</title><rect x="963.8" y="803.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (464 samples, 0.11%)</title><rect x="963.8" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (464 samples, 0.11%)</title><rect x="963.8" y="771.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (464 samples, 0.11%)</title><rect x="963.8" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/1546095920.run (464 samples, 0.11%)</title><rect x="963.8" y="739.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (464 samples, 0.11%)</title><rect x="963.8" y="723.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (463 samples, 0.11%)</title><rect x="963.8" y="707.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (463 samples, 0.11%)</title><rect x="963.8" y="691.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="966.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (463 samples, 0.11%)</title><rect x="963.8" y="675.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (463 samples, 0.11%)</title><rect x="963.8" y="659.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (463 samples, 0.11%)</title><rect x="963.8" y="643.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (463 samples, 0.11%)</title><rect x="963.8" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (463 samples, 0.11%)</title><rect x="963.8" y="611.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (463 samples, 0.11%)</title><rect x="963.8" y="595.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (359 samples, 0.09%)</title><rect x="963.8" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (359 samples, 0.09%)</title><rect x="963.8" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (359 samples, 0.09%)</title><rect x="963.8" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (359 samples, 0.09%)</title><rect x="963.8" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (359 samples, 0.09%)</title><rect x="963.8" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (359 samples, 0.09%)</title><rect x="963.8" y="499.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (359 samples, 0.09%)</title><rect x="963.8" y="483.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (359 samples, 0.09%)</title><rect x="963.8" y="467.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="966.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (104 samples, 0.02%)</title><rect x="964.8" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (104 samples, 0.02%)</title><rect x="964.8" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (104 samples, 0.02%)</title><rect x="964.8" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (104 samples, 0.02%)</title><rect x="964.8" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (104 samples, 0.02%)</title><rect x="964.8" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="967.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (104 samples, 0.02%)</title><rect x="964.8" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (104 samples, 0.02%)</title><rect x="964.8" y="483.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="967.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$185/203120582.run (953 samples, 0.23%)</title><rect x="965.1" y="835.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (953 samples, 0.23%)</title><rect x="965.1" y="819.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (952 samples, 0.23%)</title><rect x="965.1" y="803.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (952 samples, 0.23%)</title><rect x="965.1" y="787.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (952 samples, 0.23%)</title><rect x="965.1" y="771.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (699 samples, 0.17%)</title><rect x="965.1" y="755.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (699 samples, 0.17%)</title><rect x="965.1" y="739.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (699 samples, 0.17%)</title><rect x="965.1" y="723.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (699 samples, 0.17%)</title><rect x="965.1" y="707.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (699 samples, 0.17%)</title><rect x="965.1" y="691.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (699 samples, 0.17%)</title><rect x="965.1" y="675.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (699 samples, 0.17%)</title><rect x="965.1" y="659.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (699 samples, 0.17%)</title><rect x="965.1" y="643.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="968.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (253 samples, 0.06%)</title><rect x="967.1" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (253 samples, 0.06%)</title><rect x="967.1" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (253 samples, 0.06%)</title><rect x="967.1" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (253 samples, 0.06%)</title><rect x="967.1" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (253 samples, 0.06%)</title><rect x="967.1" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (253 samples, 0.06%)</title><rect x="967.1" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.1" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (253 samples, 0.06%)</title><rect x="967.1" y="659.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="970.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,220 samples, 0.53%)</title><rect x="967.8" y="851.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,220 samples, 0.53%)</title><rect x="967.8" y="835.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.8" y="846.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,220 samples, 0.53%)</title><rect x="967.8" y="819.0" width="6.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="970.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (27,727 samples, 6.57%)</title><rect x="974.0" y="851.0" width="77.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.0" y="862.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (27,727 samples, 6.57%)</title><rect x="974.0" y="835.0" width="77.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="977.0" y="846.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (13,764 samples, 3.26%)</title><rect x="1051.5" y="851.0" width="38.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1054.5" y="862.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (13,764 samples, 3.26%)</title><rect x="1051.5" y="835.0" width="38.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.5" y="846.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (13,764 samples, 3.26%)</title><rect x="1051.5" y="819.0" width="38.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1054.5" y="830.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (13,764 samples, 3.26%)</title><rect x="1051.5" y="803.0" width="38.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1054.5" y="814.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (13,764 samples, 3.26%)</title><rect x="1051.5" y="787.0" width="38.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.5" y="798.0">sun..</text>
</g>
<g>
<title>java.lang.Object (13,764 samples, 3.26%)</title><rect x="1051.5" y="771.0" width="38.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1054.5" y="782.0">jav..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (104 samples, 0.02%)</title><rect x="1090.0" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (104 samples, 0.02%)</title><rect x="1090.0" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (104 samples, 0.02%)</title><rect x="1090.0" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (104 samples, 0.02%)</title><rect x="1090.0" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (104 samples, 0.02%)</title><rect x="1090.0" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.0" y="798.0"></text>
</g>
<g>
<title>java.lang.Object (104 samples, 0.02%)</title><rect x="1090.0" y="771.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1093.0" y="782.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35,661 samples, 8.45%)</title><rect x="1090.3" y="867.0" width="99.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.3" y="878.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/Session.process (35,661 samples, 8.45%)</title><rect x="1090.3" y="851.0" width="99.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.3" y="862.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,831 samples, 0.43%)</title><rect x="1090.3" y="835.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,831 samples, 0.43%)</title><rect x="1090.3" y="819.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,831 samples, 0.43%)</title><rect x="1090.3" y="803.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,831 samples, 0.43%)</title><rect x="1090.3" y="787.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (1,831 samples, 0.43%)</title><rect x="1090.3" y="771.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (1,831 samples, 0.43%)</title><rect x="1090.3" y="755.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (1,730 samples, 0.41%)</title><rect x="1090.3" y="739.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNodeAsync (836 samples, 0.20%)</title><rect x="1090.3" y="723.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (836 samples, 0.20%)</title><rect x="1090.3" y="707.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.proxy (836 samples, 0.20%)</title><rect x="1090.3" y="691.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (836 samples, 0.20%)</title><rect x="1090.3" y="675.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (836 samples, 0.20%)</title><rect x="1090.3" y="659.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (836 samples, 0.20%)</title><rect x="1090.3" y="643.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (836 samples, 0.20%)</title><rect x="1090.3" y="627.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (836 samples, 0.20%)</title><rect x="1090.3" y="611.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (836 samples, 0.20%)</title><rect x="1090.3" y="595.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (836 samples, 0.20%)</title><rect x="1090.3" y="579.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (836 samples, 0.20%)</title><rect x="1090.3" y="563.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (661 samples, 0.16%)</title><rect x="1090.3" y="547.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (661 samples, 0.16%)</title><rect x="1090.3" y="531.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (661 samples, 0.16%)</title><rect x="1090.3" y="515.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (661 samples, 0.16%)</title><rect x="1090.3" y="499.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (661 samples, 0.16%)</title><rect x="1090.3" y="483.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (661 samples, 0.16%)</title><rect x="1090.3" y="467.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (661 samples, 0.16%)</title><rect x="1090.3" y="451.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (661 samples, 0.16%)</title><rect x="1090.3" y="435.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1093.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (175 samples, 0.04%)</title><rect x="1092.1" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (175 samples, 0.04%)</title><rect x="1092.1" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (175 samples, 0.04%)</title><rect x="1092.1" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (175 samples, 0.04%)</title><rect x="1092.1" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (175 samples, 0.04%)</title><rect x="1092.1" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (175 samples, 0.04%)</title><rect x="1092.1" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (175 samples, 0.04%)</title><rect x="1092.1" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1095.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocallyAsync (894 samples, 0.21%)</title><rect x="1092.6" y="723.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (894 samples, 0.21%)</title><rect x="1092.6" y="707.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (894 samples, 0.21%)</title><rect x="1092.6" y="691.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (566 samples, 0.13%)</title><rect x="1092.6" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (566 samples, 0.13%)</title><rect x="1092.6" y="659.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1095.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (566 samples, 0.13%)</title><rect x="1092.6" y="643.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (566 samples, 0.13%)</title><rect x="1092.6" y="627.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (566 samples, 0.13%)</title><rect x="1092.6" y="611.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (566 samples, 0.13%)</title><rect x="1092.6" y="595.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (566 samples, 0.13%)</title><rect x="1092.6" y="579.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (566 samples, 0.13%)</title><rect x="1092.6" y="563.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1095.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (328 samples, 0.08%)</title><rect x="1094.2" y="675.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (328 samples, 0.08%)</title><rect x="1094.2" y="659.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (328 samples, 0.08%)</title><rect x="1094.2" y="643.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (328 samples, 0.08%)</title><rect x="1094.2" y="627.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (328 samples, 0.08%)</title><rect x="1094.2" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1097.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (328 samples, 0.08%)</title><rect x="1094.2" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (328 samples, 0.08%)</title><rect x="1094.2" y="579.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1097.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (101 samples, 0.02%)</title><rect x="1095.1" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (101 samples, 0.02%)</title><rect x="1095.1" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (101 samples, 0.02%)</title><rect x="1095.1" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (99 samples, 0.02%)</title><rect x="1095.1" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (99 samples, 0.02%)</title><rect x="1095.1" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (99 samples, 0.02%)</title><rect x="1095.1" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (99 samples, 0.02%)</title><rect x="1095.1" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (99 samples, 0.02%)</title><rect x="1095.1" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (99 samples, 0.02%)</title><rect x="1095.1" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (99 samples, 0.02%)</title><rect x="1095.1" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1098.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (99 samples, 0.02%)</title><rect x="1095.1" y="579.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1098.1" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.StorageSession (33,830 samples, 8.02%)</title><rect x="1095.4" y="835.0" width="94.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1098.4" y="846.0">ru.mail.pol..</text>
</g>
</g>
</svg>
