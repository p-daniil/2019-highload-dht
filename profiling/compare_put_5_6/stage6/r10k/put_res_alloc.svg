<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (668,464 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (213,934 samples, 32.00%)</title><rect x="10.0" y="803.0" width="377.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (213,934 samples, 32.00%)</title><rect x="10.0" y="787.0" width="377.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (213,934 samples, 32.00%)</title><rect x="10.0" y="771.0" width="377.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (71,101 samples, 10.64%)</title><rect x="10.0" y="755.0" width="125.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (71,101 samples, 10.64%)</title><rect x="10.0" y="739.0" width="125.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (71,101 samples, 10.64%)</title><rect x="10.0" y="723.0" width="125.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concu..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (336 samples, 0.05%)</title><rect x="10.0" y="707.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/1345656667.apply (70,760 samples, 10.59%)</title><rect x="10.6" y="707.0" width="124.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.6" y="718.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (70,760 samples, 10.59%)</title><rect x="10.6" y="691.0" width="124.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.6" y="702.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (70,760 samples, 10.59%)</title><rect x="10.6" y="675.0" width="124.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.6" y="686.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (413 samples, 0.06%)</title><rect x="10.6" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (413 samples, 0.06%)</title><rect x="10.6" y="643.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/60851830.get$Lambda (238 samples, 0.04%)</title><rect x="10.6" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$235 (238 samples, 0.04%)</title><rect x="10.6" y="611.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.get$Lambda (175 samples, 0.03%)</title><rect x="11.0" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (175 samples, 0.03%)</title><rect x="11.0" y="611.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="14.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (771 samples, 0.12%)</title><rect x="11.3" y="659.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (771 samples, 0.12%)</title><rect x="11.3" y="643.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (432 samples, 0.06%)</title><rect x="11.3" y="627.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (339 samples, 0.05%)</title><rect x="12.1" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (339 samples, 0.05%)</title><rect x="12.1" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (339 samples, 0.05%)</title><rect x="12.1" y="595.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="15.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,587 samples, 0.24%)</title><rect x="12.7" y="659.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,587 samples, 0.24%)</title><rect x="12.7" y="643.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (875 samples, 0.13%)</title><rect x="12.7" y="627.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="15.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (711 samples, 0.11%)</title><rect x="14.2" y="627.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (711 samples, 0.11%)</title><rect x="14.2" y="611.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (711 samples, 0.11%)</title><rect x="14.2" y="595.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="17.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (66,787 samples, 9.99%)</title><rect x="15.5" y="659.0" width="117.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.5" y="670.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (66,787 samples, 9.99%)</title><rect x="15.5" y="643.0" width="117.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.5" y="654.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (66,787 samples, 9.99%)</title><rect x="15.5" y="627.0" width="117.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.5" y="638.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (687 samples, 0.10%)</title><rect x="15.5" y="611.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="18.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (687 samples, 0.10%)</title><rect x="15.5" y="595.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.get$Lambda (229 samples, 0.03%)</title><rect x="15.5" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$132 (229 samples, 0.03%)</title><rect x="15.5" y="563.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="18.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.get$Lambda (232 samples, 0.03%)</title><rect x="15.9" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$134 (232 samples, 0.03%)</title><rect x="15.9" y="563.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="18.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/873270299.get$Lambda (226 samples, 0.03%)</title><rect x="16.3" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$208 (226 samples, 0.03%)</title><rect x="16.3" y="563.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (42,149 samples, 6.31%)</title><rect x="16.7" y="611.0" width="74.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.7" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (42,149 samples, 6.31%)</title><rect x="16.7" y="595.0" width="74.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.7" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (41,771 samples, 6.25%)</title><rect x="16.7" y="579.0" width="73.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.7" y="590.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/873270299.apply (41,771 samples, 6.25%)</title><rect x="16.7" y="563.0" width="73.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.7" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (41,771 samples, 6.25%)</title><rect x="16.7" y="547.0" width="73.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.7" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (41,771 samples, 6.25%)</title><rect x="16.7" y="531.0" width="73.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.7" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.apply (41,771 samples, 6.25%)</title><rect x="16.7" y="515.0" width="73.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.7" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (41,771 samples, 6.25%)</title><rect x="16.7" y="499.0" width="73.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.7" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (266 samples, 0.04%)</title><rect x="16.7" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (266 samples, 0.04%)</title><rect x="16.7" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.get$Lambda (266 samples, 0.04%)</title><rect x="16.7" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$234 (266 samples, 0.04%)</title><rect x="16.7" y="435.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="19.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,112 samples, 0.17%)</title><rect x="17.2" y="483.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,112 samples, 0.17%)</title><rect x="17.2" y="467.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (518 samples, 0.08%)</title><rect x="17.2" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="20.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (205 samples, 0.03%)</title><rect x="18.1" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (205 samples, 0.03%)</title><rect x="18.1" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (205 samples, 0.03%)</title><rect x="18.1" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (205 samples, 0.03%)</title><rect x="18.1" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="21.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (205 samples, 0.03%)</title><rect x="18.1" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (205 samples, 0.03%)</title><rect x="18.1" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (153 samples, 0.02%)</title><rect x="18.2" y="355.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (389 samples, 0.06%)</title><rect x="18.4" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (389 samples, 0.06%)</title><rect x="18.4" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (389 samples, 0.06%)</title><rect x="18.4" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="21.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (807 samples, 0.12%)</title><rect x="19.1" y="483.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (807 samples, 0.12%)</title><rect x="19.1" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (420 samples, 0.06%)</title><rect x="19.1" y="451.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="22.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (382 samples, 0.06%)</title><rect x="19.9" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (382 samples, 0.06%)</title><rect x="19.9" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (382 samples, 0.06%)</title><rect x="19.9" y="419.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="22.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (39,586 samples, 5.92%)</title><rect x="20.6" y="483.0" width="69.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.6" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (363 samples, 0.05%)</title><rect x="20.6" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (363 samples, 0.05%)</title><rect x="20.6" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/2043781199.get$Lambda (197 samples, 0.03%)</title><rect x="20.6" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (197 samples, 0.03%)</title><rect x="20.6" y="419.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="23.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$233/660082140.get$Lambda (166 samples, 0.02%)</title><rect x="20.9" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$233 (166 samples, 0.02%)</title><rect x="20.9" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="23.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (33,776 samples, 5.05%)</title><rect x="21.2" y="467.0" width="59.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.2" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (33,776 samples, 5.05%)</title><rect x="21.2" y="451.0" width="59.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.2" y="462.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (357 samples, 0.05%)</title><rect x="21.2" y="435.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="24.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/2043781199.apply (32,670 samples, 4.89%)</title><rect x="21.8" y="435.0" width="57.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.8" y="446.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (32,670 samples, 4.89%)</title><rect x="21.8" y="419.0" width="57.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.8" y="430.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (149 samples, 0.02%)</title><rect x="21.8" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (149 samples, 0.02%)</title><rect x="21.8" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$251/1870572592.get$Lambda (149 samples, 0.02%)</title><rect x="21.8" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$251 (149 samples, 0.02%)</title><rect x="21.8" y="355.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="24.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (740 samples, 0.11%)</title><rect x="22.1" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (740 samples, 0.11%)</title><rect x="22.1" y="387.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (396 samples, 0.06%)</title><rect x="22.1" y="371.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (344 samples, 0.05%)</title><rect x="22.8" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (344 samples, 0.05%)</title><rect x="22.8" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (344 samples, 0.05%)</title><rect x="22.8" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (331 samples, 0.05%)</title><rect x="23.4" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (464 samples, 0.07%)</title><rect x="24.0" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (227 samples, 0.03%)</title><rect x="24.0" y="387.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (237 samples, 0.04%)</title><rect x="24.4" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (217 samples, 0.03%)</title><rect x="24.4" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (217 samples, 0.03%)</title><rect x="24.4" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (217 samples, 0.03%)</title><rect x="24.4" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (217 samples, 0.03%)</title><rect x="24.4" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (217 samples, 0.03%)</title><rect x="24.4" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="27.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (923 samples, 0.14%)</title><rect x="24.8" y="403.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (923 samples, 0.14%)</title><rect x="24.8" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (285 samples, 0.04%)</title><rect x="24.8" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (285 samples, 0.04%)</title><rect x="24.8" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (285 samples, 0.04%)</title><rect x="24.8" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (285 samples, 0.04%)</title><rect x="24.8" y="323.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="27.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (638 samples, 0.10%)</title><rect x="25.3" y="371.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (638 samples, 0.10%)</title><rect x="25.3" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (461 samples, 0.07%)</title><rect x="25.3" y="339.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (165 samples, 0.02%)</title><rect x="26.1" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (165 samples, 0.02%)</title><rect x="26.1" y="323.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="29.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (30,063 samples, 4.50%)</title><rect x="26.4" y="403.0" width="53.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.4" y="414.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (263 samples, 0.04%)</title><rect x="26.4" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="29.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (494 samples, 0.07%)</title><rect x="26.9" y="387.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.9" y="398.0"></text>
</g>
<g>
<title>byte[] (231 samples, 0.03%)</title><rect x="26.9" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="29.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (263 samples, 0.04%)</title><rect x="27.3" y="371.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="30.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3,124 samples, 0.47%)</title><rect x="27.8" y="387.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,124 samples, 0.47%)</title><rect x="27.8" y="371.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.8" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3,124 samples, 0.47%)</title><rect x="27.8" y="355.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.8" y="366.0"></text>
</g>
<g>
<title>byte[] (2,955 samples, 0.44%)</title><rect x="27.8" y="339.0" width="5.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="30.8" y="350.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.03%)</title><rect x="33.0" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="36.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (870 samples, 0.13%)</title><rect x="33.3" y="387.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (870 samples, 0.13%)</title><rect x="33.3" y="371.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.3" y="382.0"></text>
</g>
<g>
<title>byte[] (869 samples, 0.13%)</title><rect x="33.3" y="355.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="36.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,299 samples, 0.49%)</title><rect x="34.8" y="387.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,299 samples, 0.49%)</title><rect x="34.8" y="371.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (273 samples, 0.04%)</title><rect x="34.8" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="37.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,026 samples, 0.45%)</title><rect x="35.3" y="355.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.3" y="366.0"></text>
</g>
<g>
<title>byte[] (2,911 samples, 0.44%)</title><rect x="35.3" y="339.0" width="5.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="38.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (506 samples, 0.08%)</title><rect x="40.6" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (506 samples, 0.08%)</title><rect x="40.6" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (506 samples, 0.08%)</title><rect x="40.6" y="355.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="43.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (232 samples, 0.03%)</title><rect x="41.5" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.5" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (232 samples, 0.03%)</title><rect x="41.5" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="44.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (17,734 samples, 2.65%)</title><rect x="41.9" y="387.0" width="31.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.9" y="398.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (253 samples, 0.04%)</title><rect x="41.9" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (253 samples, 0.04%)</title><rect x="41.9" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (253 samples, 0.04%)</title><rect x="41.9" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.get$Lambda (253 samples, 0.04%)</title><rect x="41.9" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.9" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$254 (253 samples, 0.04%)</title><rect x="41.9" y="307.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="44.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (8,928 samples, 1.34%)</title><rect x="42.4" y="371.0" width="15.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4,532 samples, 0.68%)</title><rect x="42.4" y="355.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.4" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4,532 samples, 0.68%)</title><rect x="42.4" y="339.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.4" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4,532 samples, 0.68%)</title><rect x="42.4" y="323.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,532 samples, 0.68%)</title><rect x="42.4" y="307.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.4" y="318.0"></text>
</g>
<g>
<title>byte[] (4,411 samples, 0.66%)</title><rect x="42.4" y="291.0" width="7.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="45.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (682 samples, 0.10%)</title><rect x="50.4" y="355.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (682 samples, 0.10%)</title><rect x="50.4" y="339.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (682 samples, 0.10%)</title><rect x="50.4" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (682 samples, 0.10%)</title><rect x="50.4" y="307.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="53.4" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (654 samples, 0.10%)</title><rect x="51.6" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.6" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (335 samples, 0.05%)</title><rect x="51.6" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="54.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (319 samples, 0.05%)</title><rect x="52.2" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (319 samples, 0.05%)</title><rect x="52.2" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="55.2" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.test (3,060 samples, 0.46%)</title><rect x="52.7" y="355.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.7" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3,060 samples, 0.46%)</title><rect x="52.7" y="339.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/960733886.test (3,060 samples, 0.46%)</title><rect x="52.7" y="323.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3,060 samples, 0.46%)</title><rect x="52.7" y="307.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.7" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/707161353.test (3,060 samples, 0.46%)</title><rect x="52.7" y="291.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.7" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3,060 samples, 0.46%)</title><rect x="52.7" y="275.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/90767234.test (3,060 samples, 0.46%)</title><rect x="52.7" y="259.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3,060 samples, 0.46%)</title><rect x="52.7" y="243.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.7" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,060 samples, 0.46%)</title><rect x="52.7" y="227.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,060 samples, 0.46%)</title><rect x="52.7" y="211.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1,537 samples, 0.23%)</title><rect x="52.7" y="195.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="55.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,523 samples, 0.23%)</title><rect x="55.5" y="195.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.5" y="206.0"></text>
</g>
<g>
<title>byte[] (1,523 samples, 0.23%)</title><rect x="55.5" y="179.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="58.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (8,553 samples, 1.28%)</title><rect x="58.1" y="371.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8,553 samples, 1.28%)</title><rect x="58.1" y="355.0" width="15.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8,553 samples, 1.28%)</title><rect x="58.1" y="339.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.1" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (170 samples, 0.03%)</title><rect x="58.1" y="323.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="61.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (271 samples, 0.04%)</title><rect x="58.4" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="61.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (473 samples, 0.07%)</title><rect x="58.9" y="323.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="61.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (173 samples, 0.03%)</title><rect x="59.8" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="62.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (350 samples, 0.05%)</title><rect x="60.1" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (350 samples, 0.05%)</title><rect x="60.1" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.1" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (350 samples, 0.05%)</title><rect x="60.1" y="291.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.1" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (350 samples, 0.05%)</title><rect x="60.1" y="275.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="63.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (353 samples, 0.05%)</title><rect x="60.7" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.7" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (353 samples, 0.05%)</title><rect x="60.7" y="307.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="63.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6,236 samples, 0.93%)</title><rect x="61.3" y="323.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (6,236 samples, 0.93%)</title><rect x="61.3" y="307.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.3" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6,236 samples, 0.93%)</title><rect x="61.3" y="291.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (652 samples, 0.10%)</title><rect x="61.3" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.3" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (652 samples, 0.10%)</title><rect x="61.3" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (652 samples, 0.10%)</title><rect x="61.3" y="243.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (652 samples, 0.10%)</title><rect x="61.3" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (652 samples, 0.10%)</title><rect x="61.3" y="211.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (652 samples, 0.10%)</title><rect x="61.3" y="195.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (652 samples, 0.10%)</title><rect x="61.3" y="179.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (652 samples, 0.10%)</title><rect x="61.3" y="163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (652 samples, 0.10%)</title><rect x="61.3" y="147.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="64.3" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (3,038 samples, 0.45%)</title><rect x="62.5" y="275.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (3,038 samples, 0.45%)</title><rect x="62.5" y="259.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,561 samples, 0.23%)</title><rect x="62.5" y="243.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,561 samples, 0.23%)</title><rect x="62.5" y="227.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,561 samples, 0.23%)</title><rect x="62.5" y="211.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="65.5" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (1,477 samples, 0.22%)</title><rect x="65.2" y="243.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.2" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,477 samples, 0.22%)</title><rect x="65.2" y="227.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="68.2" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,546 samples, 0.38%)</title><rect x="67.8" y="275.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,546 samples, 0.38%)</title><rect x="67.8" y="259.0" width="4.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="70.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (527 samples, 0.08%)</title><rect x="72.3" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (527 samples, 0.08%)</title><rect x="72.3" y="307.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="75.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (801 samples, 0.12%)</title><rect x="73.2" y="387.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (262 samples, 0.04%)</title><rect x="73.2" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.2" y="382.0"></text>
</g>
<g>
<title>byte[] (262 samples, 0.04%)</title><rect x="73.2" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="76.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (539 samples, 0.08%)</title><rect x="73.7" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (539 samples, 0.08%)</title><rect x="73.7" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754894440.invoke (539 samples, 0.08%)</title><rect x="73.7" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (539 samples, 0.08%)</title><rect x="73.7" y="323.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (239 samples, 0.04%)</title><rect x="73.7" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (239 samples, 0.04%)</title><rect x="73.7" y="291.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="76.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (300 samples, 0.04%)</title><rect x="74.1" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (300 samples, 0.04%)</title><rect x="74.1" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.1" y="302.0"></text>
</g>
<g>
<title>byte[] (300 samples, 0.04%)</title><rect x="74.1" y="275.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (859 samples, 0.13%)</title><rect x="74.7" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (859 samples, 0.13%)</title><rect x="74.7" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (859 samples, 0.13%)</title><rect x="74.7" y="355.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (859 samples, 0.13%)</title><rect x="74.7" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754894440.invoke (859 samples, 0.13%)</title><rect x="74.7" y="323.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (859 samples, 0.13%)</title><rect x="74.7" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (258 samples, 0.04%)</title><rect x="74.7" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (258 samples, 0.04%)</title><rect x="74.7" y="275.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="77.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (601 samples, 0.09%)</title><rect x="75.1" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (601 samples, 0.09%)</title><rect x="75.1" y="275.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.1" y="286.0"></text>
</g>
<g>
<title>byte[] (601 samples, 0.09%)</title><rect x="75.1" y="259.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="78.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,881 samples, 0.28%)</title><rect x="76.2" y="387.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="79.2" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (513 samples, 0.08%)</title><rect x="76.2" y="371.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="79.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (536 samples, 0.08%)</title><rect x="77.1" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (536 samples, 0.08%)</title><rect x="77.1" y="355.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="80.1" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (832 samples, 0.12%)</title><rect x="78.0" y="371.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.0" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (832 samples, 0.12%)</title><rect x="78.0" y="355.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="81.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (749 samples, 0.11%)</title><rect x="79.5" y="435.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (749 samples, 0.11%)</title><rect x="79.5" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (749 samples, 0.11%)</title><rect x="79.5" y="403.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="82.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (921 samples, 0.14%)</title><rect x="80.8" y="467.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (340 samples, 0.05%)</title><rect x="82.4" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="85.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (4,186 samples, 0.63%)</title><rect x="83.0" y="467.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (351 samples, 0.05%)</title><rect x="83.0" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (351 samples, 0.05%)</title><rect x="83.0" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/1098784410.get$Lambda (172 samples, 0.03%)</title><rect x="83.0" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$213 (172 samples, 0.03%)</title><rect x="83.0" y="403.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="86.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/208720215.get$Lambda (179 samples, 0.03%)</title><rect x="83.3" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (179 samples, 0.03%)</title><rect x="83.3" y="403.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="86.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (473 samples, 0.07%)</title><rect x="83.7" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="86.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (351 samples, 0.05%)</title><rect x="84.5" y="451.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="87.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (423 samples, 0.06%)</title><rect x="85.1" y="451.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="88.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,156 samples, 0.17%)</title><rect x="85.9" y="451.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,156 samples, 0.17%)</title><rect x="85.9" y="435.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,156 samples, 0.17%)</title><rect x="85.9" y="419.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,156 samples, 0.17%)</title><rect x="85.9" y="403.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,156 samples, 0.17%)</title><rect x="85.9" y="387.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,156 samples, 0.17%)</title><rect x="85.9" y="371.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (1,156 samples, 0.17%)</title><rect x="85.9" y="355.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,156 samples, 0.17%)</title><rect x="85.9" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,156 samples, 0.17%)</title><rect x="85.9" y="323.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (414 samples, 0.06%)</title><rect x="85.9" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (414 samples, 0.06%)</title><rect x="85.9" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1371022227.get$Lambda (176 samples, 0.03%)</title><rect x="85.9" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (176 samples, 0.03%)</title><rect x="85.9" y="259.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="88.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (238 samples, 0.04%)</title><rect x="86.2" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$223 (238 samples, 0.04%)</title><rect x="86.2" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="89.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (302 samples, 0.05%)</title><rect x="86.6" y="307.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="89.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (440 samples, 0.07%)</title><rect x="87.1" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (440 samples, 0.07%)</title><rect x="87.1" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (175 samples, 0.03%)</title><rect x="87.1" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="90.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (265 samples, 0.04%)</title><rect x="87.4" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (265 samples, 0.04%)</title><rect x="87.4" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="90.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,085 samples, 0.16%)</title><rect x="87.9" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (240 samples, 0.04%)</title><rect x="87.9" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="90.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (498 samples, 0.07%)</title><rect x="88.3" y="435.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="91.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (347 samples, 0.05%)</title><rect x="89.2" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.2" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (347 samples, 0.05%)</title><rect x="89.2" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.2" y="430.0"></text>
</g>
<g>
<title>byte[] (347 samples, 0.05%)</title><rect x="89.2" y="403.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="92.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (347 samples, 0.05%)</title><rect x="89.8" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (347 samples, 0.05%)</title><rect x="89.8" y="435.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="92.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (378 samples, 0.06%)</title><rect x="90.4" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (378 samples, 0.06%)</title><rect x="90.4" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (378 samples, 0.06%)</title><rect x="90.4" y="547.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="93.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (748 samples, 0.11%)</title><rect x="91.1" y="611.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (748 samples, 0.11%)</title><rect x="91.1" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (402 samples, 0.06%)</title><rect x="91.1" y="579.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="94.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (346 samples, 0.05%)</title><rect x="91.8" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (346 samples, 0.05%)</title><rect x="91.8" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (346 samples, 0.05%)</title><rect x="91.8" y="547.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="94.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (23,203 samples, 3.47%)</title><rect x="92.4" y="611.0" width="41.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.4" y="622.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (454 samples, 0.07%)</title><rect x="92.4" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (454 samples, 0.07%)</title><rect x="92.4" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1400471465.get$Lambda (259 samples, 0.04%)</title><rect x="92.4" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$202 (259 samples, 0.04%)</title><rect x="92.4" y="547.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1560002630.get$Lambda (195 samples, 0.03%)</title><rect x="92.9" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$204 (195 samples, 0.03%)</title><rect x="92.9" y="547.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="95.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (657 samples, 0.10%)</title><rect x="93.2" y="595.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (657 samples, 0.10%)</title><rect x="93.2" y="579.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1560002630.apply (336 samples, 0.05%)</title><rect x="93.2" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (336 samples, 0.05%)</title><rect x="93.2" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (336 samples, 0.05%)</title><rect x="93.2" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (336 samples, 0.05%)</title><rect x="93.2" y="515.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="96.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (321 samples, 0.05%)</title><rect x="93.8" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (321 samples, 0.05%)</title><rect x="93.8" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (321 samples, 0.05%)</title><rect x="93.8" y="531.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="96.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (334 samples, 0.05%)</title><rect x="94.4" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (334 samples, 0.05%)</title><rect x="94.4" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (334 samples, 0.05%)</title><rect x="94.4" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (334 samples, 0.05%)</title><rect x="94.4" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (334 samples, 0.05%)</title><rect x="94.4" y="531.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="97.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (21,758 samples, 3.25%)</title><rect x="95.0" y="595.0" width="38.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.0" y="606.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (240 samples, 0.04%)</title><rect x="95.0" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (240 samples, 0.04%)</title><rect x="95.0" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1237283969.get$Lambda (240 samples, 0.04%)</title><rect x="95.0" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$143 (240 samples, 0.04%)</title><rect x="95.0" y="531.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="98.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (20,462 samples, 3.06%)</title><rect x="95.4" y="579.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.4" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (20,462 samples, 3.06%)</title><rect x="95.4" y="563.0" width="36.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.4" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (20,121 samples, 3.01%)</title><rect x="95.4" y="547.0" width="35.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.4" y="558.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1237283969.apply (20,121 samples, 3.01%)</title><rect x="95.4" y="531.0" width="35.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.4" y="542.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (20,121 samples, 3.01%)</title><rect x="95.4" y="515.0" width="35.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.4" y="526.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (20,121 samples, 3.01%)</title><rect x="95.4" y="499.0" width="35.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.4" y="510.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (163 samples, 0.02%)</title><rect x="95.4" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (163 samples, 0.02%)</title><rect x="95.4" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$199/1705845297.get$Lambda (163 samples, 0.02%)</title><rect x="95.4" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$199 (163 samples, 0.02%)</title><rect x="95.4" y="435.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="98.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (8,406 samples, 1.26%)</title><rect x="95.7" y="483.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8,406 samples, 1.26%)</title><rect x="95.7" y="467.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (8,406 samples, 1.26%)</title><rect x="95.7" y="451.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$199/1705845297.apply (8,082 samples, 1.21%)</title><rect x="95.7" y="435.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (8,082 samples, 1.21%)</title><rect x="95.7" y="419.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (8,082 samples, 1.21%)</title><rect x="95.7" y="403.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (8,082 samples, 1.21%)</title><rect x="95.7" y="387.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (5,210 samples, 0.78%)</title><rect x="95.7" y="371.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.7" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1,416 samples, 0.21%)</title><rect x="95.7" y="355.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (239 samples, 0.04%)</title><rect x="95.7" y="339.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="98.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (565 samples, 0.08%)</title><rect x="96.1" y="339.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (565 samples, 0.08%)</title><rect x="96.1" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.1" y="334.0"></text>
</g>
<g>
<title>byte[] (564 samples, 0.08%)</title><rect x="96.1" y="307.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="99.1" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (612 samples, 0.09%)</title><rect x="97.1" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.1" y="350.0"></text>
</g>
<g>
<title>byte[] (612 samples, 0.09%)</title><rect x="97.1" y="323.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="100.1" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (248 samples, 0.04%)</title><rect x="98.2" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.2" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (248 samples, 0.04%)</title><rect x="98.2" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="101.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2,527 samples, 0.38%)</title><rect x="98.6" y="355.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (267 samples, 0.04%)</title><rect x="98.6" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="101.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1,842 samples, 0.28%)</title><rect x="99.1" y="339.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1,842 samples, 0.28%)</title><rect x="99.1" y="323.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (1,273 samples, 0.19%)</title><rect x="99.1" y="307.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,273 samples, 0.19%)</title><rect x="99.1" y="291.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/2001223946.get$Lambda (1,273 samples, 0.19%)</title><rect x="99.1" y="275.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (1,273 samples, 0.19%)</title><rect x="99.1" y="259.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="102.1" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (569 samples, 0.09%)</title><rect x="101.3" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/2001223946.run (569 samples, 0.09%)</title><rect x="101.3" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (569 samples, 0.09%)</title><rect x="101.3" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.3" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (569 samples, 0.09%)</title><rect x="101.3" y="259.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.3" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (569 samples, 0.09%)</title><rect x="101.3" y="243.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (569 samples, 0.09%)</title><rect x="101.3" y="227.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="104.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (418 samples, 0.06%)</title><rect x="102.3" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (418 samples, 0.06%)</title><rect x="102.3" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.3" y="334.0"></text>
</g>
<g>
<title>int[] (418 samples, 0.06%)</title><rect x="102.3" y="307.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="105.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1,019 samples, 0.15%)</title><rect x="103.1" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.1" y="366.0"></text>
</g>
<g>
<title>byte[] (519 samples, 0.08%)</title><rect x="103.1" y="339.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="106.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (500 samples, 0.07%)</title><rect x="104.0" y="339.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (500 samples, 0.07%)</title><rect x="104.0" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.0" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (500 samples, 0.07%)</title><rect x="104.0" y="307.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="107.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,872 samples, 0.43%)</title><rect x="104.9" y="371.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.9" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (798 samples, 0.12%)</title><rect x="104.9" y="355.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="107.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (825 samples, 0.12%)</title><rect x="106.3" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (825 samples, 0.12%)</title><rect x="106.3" y="339.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="109.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,249 samples, 0.19%)</title><rect x="107.7" y="355.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.7" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,249 samples, 0.19%)</title><rect x="107.7" y="339.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="110.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (324 samples, 0.05%)</title><rect x="109.9" y="435.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (324 samples, 0.05%)</title><rect x="109.9" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (324 samples, 0.05%)</title><rect x="109.9" y="403.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="112.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (11,552 samples, 1.73%)</title><rect x="110.5" y="483.0" width="20.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (876 samples, 0.13%)</title><rect x="110.5" y="467.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="113.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (10,332 samples, 1.55%)</title><rect x="112.1" y="467.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (192 samples, 0.03%)</title><rect x="112.1" y="451.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="115.1" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (302 samples, 0.05%)</title><rect x="112.4" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="115.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (276 samples, 0.04%)</title><rect x="112.9" y="451.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="115.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (498 samples, 0.07%)</title><rect x="113.4" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (498 samples, 0.07%)</title><rect x="113.4" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.4" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (498 samples, 0.07%)</title><rect x="113.4" y="419.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="116.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (231 samples, 0.03%)</title><rect x="114.3" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (231 samples, 0.03%)</title><rect x="114.3" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="117.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (778 samples, 0.12%)</title><rect x="114.7" y="451.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="117.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (514 samples, 0.08%)</title><rect x="116.1" y="451.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="119.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (573 samples, 0.09%)</title><rect x="117.0" y="451.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="120.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (681 samples, 0.10%)</title><rect x="118.0" y="451.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="121.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3,099 samples, 0.46%)</title><rect x="119.2" y="451.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (265 samples, 0.04%)</title><rect x="119.2" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="122.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (177 samples, 0.03%)</title><rect x="119.7" y="435.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="122.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (232 samples, 0.03%)</title><rect x="120.0" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="123.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (199 samples, 0.03%)</title><rect x="120.4" y="435.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="123.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (158 samples, 0.02%)</title><rect x="120.8" y="435.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (158 samples, 0.02%)</title><rect x="120.8" y="419.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.get$Lambda (158 samples, 0.02%)</title><rect x="120.8" y="403.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$196 (158 samples, 0.02%)</title><rect x="120.8" y="387.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="123.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (239 samples, 0.04%)</title><rect x="121.0" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (239 samples, 0.04%)</title><rect x="121.0" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="124.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (267 samples, 0.04%)</title><rect x="121.5" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="124.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (348 samples, 0.05%)</title><rect x="121.9" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="124.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,214 samples, 0.18%)</title><rect x="122.5" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (238 samples, 0.04%)</title><rect x="122.5" y="419.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="125.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (311 samples, 0.05%)</title><rect x="123.0" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="126.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (147 samples, 0.02%)</title><rect x="123.5" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (147 samples, 0.02%)</title><rect x="123.5" y="403.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="126.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (518 samples, 0.08%)</title><rect x="123.8" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (185 samples, 0.03%)</title><rect x="123.8" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="126.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (174 samples, 0.03%)</title><rect x="124.1" y="403.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="127.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (159 samples, 0.02%)</title><rect x="124.4" y="403.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="127.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2,005 samples, 0.30%)</title><rect x="124.7" y="451.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (192 samples, 0.03%)</title><rect x="124.7" y="435.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="127.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (191 samples, 0.03%)</title><rect x="125.0" y="435.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="128.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (166 samples, 0.02%)</title><rect x="125.4" y="435.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="128.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (243 samples, 0.04%)</title><rect x="125.6" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (243 samples, 0.04%)</title><rect x="125.6" y="419.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="128.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,213 samples, 0.18%)</title><rect x="126.1" y="435.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (245 samples, 0.04%)</title><rect x="126.1" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="129.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (328 samples, 0.05%)</title><rect x="126.5" y="419.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="129.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (159 samples, 0.02%)</title><rect x="127.1" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (159 samples, 0.02%)</title><rect x="127.1" y="403.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="130.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (481 samples, 0.07%)</title><rect x="127.4" y="419.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (169 samples, 0.03%)</title><rect x="127.4" y="403.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="130.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (154 samples, 0.02%)</title><rect x="127.7" y="403.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="130.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (158 samples, 0.02%)</title><rect x="127.9" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="130.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (226 samples, 0.03%)</title><rect x="128.2" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (226 samples, 0.03%)</title><rect x="128.2" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (226 samples, 0.03%)</title><rect x="128.2" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (226 samples, 0.03%)</title><rect x="128.2" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (226 samples, 0.03%)</title><rect x="128.2" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (226 samples, 0.03%)</title><rect x="128.2" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (226 samples, 0.03%)</title><rect x="128.2" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="131.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (957 samples, 0.14%)</title><rect x="128.6" y="451.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (250 samples, 0.04%)</title><rect x="128.6" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (250 samples, 0.04%)</title><rect x="128.6" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1084093799.get$Lambda (250 samples, 0.04%)</title><rect x="128.6" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$153 (250 samples, 0.04%)</title><rect x="128.6" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="131.6" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (707 samples, 0.11%)</title><rect x="129.1" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1084093799.run (707 samples, 0.11%)</title><rect x="129.1" y="419.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (707 samples, 0.11%)</title><rect x="129.1" y="403.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.1" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (193 samples, 0.03%)</title><rect x="129.1" y="387.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="132.1" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (514 samples, 0.08%)</title><rect x="129.4" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.4" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (238 samples, 0.04%)</title><rect x="129.4" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="132.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (276 samples, 0.04%)</title><rect x="129.8" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.8" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (276 samples, 0.04%)</title><rect x="129.8" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.8" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (276 samples, 0.04%)</title><rect x="129.8" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.8" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (276 samples, 0.04%)</title><rect x="129.8" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.8" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (276 samples, 0.04%)</title><rect x="129.8" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="132.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (343 samples, 0.05%)</title><rect x="130.3" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (343 samples, 0.05%)</title><rect x="130.3" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="133.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (341 samples, 0.05%)</title><rect x="130.9" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (341 samples, 0.05%)</title><rect x="130.9" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (341 samples, 0.05%)</title><rect x="130.9" y="515.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="133.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (286 samples, 0.04%)</title><rect x="131.5" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (286 samples, 0.04%)</title><rect x="131.5" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (286 samples, 0.04%)</title><rect x="131.5" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (286 samples, 0.04%)</title><rect x="131.5" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (286 samples, 0.04%)</title><rect x="131.5" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="134.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (770 samples, 0.12%)</title><rect x="132.0" y="579.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (400 samples, 0.06%)</title><rect x="132.0" y="563.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (400 samples, 0.06%)</title><rect x="132.0" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1534255922.linkToTargetMethod (400 samples, 0.06%)</title><rect x="132.0" y="531.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1819550379.invoke (400 samples, 0.06%)</title><rect x="132.0" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1014054035.invoke (400 samples, 0.06%)</title><rect x="132.0" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (400 samples, 0.06%)</title><rect x="132.0" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (400 samples, 0.06%)</title><rect x="132.0" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (400 samples, 0.06%)</title><rect x="132.0" y="451.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.0" y="462.0"></text>
</g>
<g>
<title>byte[] (400 samples, 0.06%)</title><rect x="132.0" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="135.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (370 samples, 0.06%)</title><rect x="132.7" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (370 samples, 0.06%)</title><rect x="132.7" y="547.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="135.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (428 samples, 0.06%)</title><rect x="133.4" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (428 samples, 0.06%)</title><rect x="133.4" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (428 samples, 0.06%)</title><rect x="133.4" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.4" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (428 samples, 0.06%)</title><rect x="133.4" y="611.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (774 samples, 0.12%)</title><rect x="134.1" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (473 samples, 0.07%)</title><rect x="134.1" y="643.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="137.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (301 samples, 0.05%)</title><rect x="135.0" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (301 samples, 0.05%)</title><rect x="135.0" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (301 samples, 0.05%)</title><rect x="135.0" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.0" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (301 samples, 0.05%)</title><rect x="135.0" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (301 samples, 0.05%)</title><rect x="135.0" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.0" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (301 samples, 0.05%)</title><rect x="135.0" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.0" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (301 samples, 0.05%)</title><rect x="135.0" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (301 samples, 0.05%)</title><rect x="135.0" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.0" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (301 samples, 0.05%)</title><rect x="135.0" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (301 samples, 0.05%)</title><rect x="135.0" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.0" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (301 samples, 0.05%)</title><rect x="135.0" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="138.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8,651 samples, 1.29%)</title><rect x="135.5" y="755.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8,651 samples, 1.29%)</title><rect x="135.5" y="739.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8,603 samples, 1.29%)</title><rect x="135.5" y="723.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8,603 samples, 1.29%)</title><rect x="135.5" y="707.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8,603 samples, 1.29%)</title><rect x="135.5" y="691.0" width="15.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="138.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$252/1669380854.run (14,065 samples, 2.10%)</title><rect x="150.8" y="755.0" width="24.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.8" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (14,065 samples, 2.10%)</title><rect x="150.8" y="739.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.8" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (14,065 samples, 2.10%)</title><rect x="150.8" y="723.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.8" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (14,065 samples, 2.10%)</title><rect x="150.8" y="707.0" width="24.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14,065 samples, 2.10%)</title><rect x="150.8" y="691.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.8" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14,065 samples, 2.10%)</title><rect x="150.8" y="675.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.8" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14,065 samples, 2.10%)</title><rect x="150.8" y="659.0" width="24.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.8" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14,065 samples, 2.10%)</title><rect x="150.8" y="643.0" width="24.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.8" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14,065 samples, 2.10%)</title><rect x="150.8" y="627.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.8" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (14,065 samples, 2.10%)</title><rect x="150.8" y="611.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.8" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (14,065 samples, 2.10%)</title><rect x="150.8" y="595.0" width="24.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (12,972 samples, 1.94%)</title><rect x="150.8" y="579.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.8" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (955 samples, 0.14%)</title><rect x="150.8" y="563.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (955 samples, 0.14%)</title><rect x="150.8" y="547.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$257/3868478.get$Lambda (249 samples, 0.04%)</title><rect x="150.8" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$257 (249 samples, 0.04%)</title><rect x="150.8" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="153.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$273/1081468444.get$Lambda (413 samples, 0.06%)</title><rect x="151.2" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$273 (413 samples, 0.06%)</title><rect x="151.2" y="515.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="154.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$278/875190164.get$Lambda (293 samples, 0.04%)</title><rect x="152.0" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$278 (293 samples, 0.04%)</title><rect x="152.0" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="155.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12,017 samples, 1.80%)</title><rect x="152.5" y="563.0" width="21.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.5" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (524 samples, 0.08%)</title><rect x="152.5" y="547.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="155.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11,493 samples, 1.72%)</title><rect x="153.4" y="547.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (11,493 samples, 1.72%)</title><rect x="153.4" y="531.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,493 samples, 1.72%)</title><rect x="153.4" y="515.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,213 samples, 0.33%)</title><rect x="153.4" y="499.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (638 samples, 0.10%)</title><rect x="153.4" y="483.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="156.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$266/153627331.apply (1,179 samples, 0.18%)</title><rect x="154.5" y="483.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1,179 samples, 0.18%)</title><rect x="154.5" y="467.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1,179 samples, 0.18%)</title><rect x="154.5" y="451.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="157.5" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (241 samples, 0.04%)</title><rect x="154.5" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (241 samples, 0.04%)</title><rect x="154.5" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="157.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (241 samples, 0.04%)</title><rect x="154.5" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="157.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (938 samples, 0.14%)</title><rect x="155.0" y="435.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (189 samples, 0.03%)</title><rect x="155.0" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (189 samples, 0.03%)</title><rect x="155.0" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1477862221.get$Lambda (189 samples, 0.03%)</title><rect x="155.0" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$280 (189 samples, 0.03%)</title><rect x="155.0" y="371.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="158.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (749 samples, 0.11%)</title><rect x="155.3" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (749 samples, 0.11%)</title><rect x="155.3" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (430 samples, 0.06%)</title><rect x="155.3" y="387.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="158.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (311 samples, 0.05%)</title><rect x="156.1" y="387.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (311 samples, 0.05%)</title><rect x="156.1" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (311 samples, 0.05%)</title><rect x="156.1" y="355.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="159.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (375 samples, 0.06%)</title><rect x="156.6" y="483.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (375 samples, 0.06%)</title><rect x="156.6" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (364 samples, 0.05%)</title><rect x="156.6" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (357 samples, 0.05%)</title><rect x="156.6" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (351 samples, 0.05%)</title><rect x="156.7" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (296 samples, 0.04%)</title><rect x="156.8" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (296 samples, 0.04%)</title><rect x="156.8" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (296 samples, 0.04%)</title><rect x="156.8" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (196 samples, 0.03%)</title><rect x="156.9" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (196 samples, 0.03%)</title><rect x="156.9" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (196 samples, 0.03%)</title><rect x="156.9" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (196 samples, 0.03%)</title><rect x="156.9" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (196 samples, 0.03%)</title><rect x="156.9" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (188 samples, 0.03%)</title><rect x="156.9" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (188 samples, 0.03%)</title><rect x="156.9" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (188 samples, 0.03%)</title><rect x="156.9" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (176 samples, 0.03%)</title><rect x="156.9" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.9" y="238.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (176 samples, 0.03%)</title><rect x="156.9" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.9" y="222.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (176 samples, 0.03%)</title><rect x="156.9" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.9" y="206.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (176 samples, 0.03%)</title><rect x="156.9" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.9" y="190.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (176 samples, 0.03%)</title><rect x="156.9" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.9" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (176 samples, 0.03%)</title><rect x="156.9" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9,280 samples, 1.39%)</title><rect x="157.3" y="499.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,280 samples, 1.39%)</title><rect x="157.3" y="483.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (9,275 samples, 1.39%)</title><rect x="157.3" y="467.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9,275 samples, 1.39%)</title><rect x="157.3" y="451.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9,275 samples, 1.39%)</title><rect x="157.3" y="435.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (9,275 samples, 1.39%)</title><rect x="157.3" y="419.0" width="16.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (9,275 samples, 1.39%)</title><rect x="157.3" y="403.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (168 samples, 0.03%)</title><rect x="157.3" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (168 samples, 0.03%)</title><rect x="157.3" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$266/153627331.get$Lambda (168 samples, 0.03%)</title><rect x="157.3" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$266 (168 samples, 0.03%)</title><rect x="157.3" y="339.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="160.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (712 samples, 0.11%)</title><rect x="157.6" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (712 samples, 0.11%)</title><rect x="157.6" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (392 samples, 0.06%)</title><rect x="157.6" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="160.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (320 samples, 0.05%)</title><rect x="158.3" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (320 samples, 0.05%)</title><rect x="158.3" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (320 samples, 0.05%)</title><rect x="158.3" y="323.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="161.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (906 samples, 0.14%)</title><rect x="158.9" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (157 samples, 0.02%)</title><rect x="158.9" y="371.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (157 samples, 0.02%)</title><rect x="158.9" y="355.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1524095918.get$Lambda (157 samples, 0.02%)</title><rect x="158.9" y="339.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$267 (157 samples, 0.02%)</title><rect x="158.9" y="323.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="161.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (749 samples, 0.11%)</title><rect x="159.1" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (749 samples, 0.11%)</title><rect x="159.1" y="355.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (419 samples, 0.06%)</title><rect x="159.1" y="339.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="162.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (330 samples, 0.05%)</title><rect x="159.9" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (330 samples, 0.05%)</title><rect x="159.9" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (330 samples, 0.05%)</title><rect x="159.9" y="307.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="162.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (7,489 samples, 1.12%)</title><rect x="160.5" y="387.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2,792 samples, 0.42%)</title><rect x="160.5" y="371.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2,792 samples, 0.42%)</title><rect x="160.5" y="355.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2,792 samples, 0.42%)</title><rect x="160.5" y="339.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$259/340323460.accept (922 samples, 0.14%)</title><rect x="160.5" y="323.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (922 samples, 0.14%)</title><rect x="160.5" y="307.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (922 samples, 0.14%)</title><rect x="160.5" y="291.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (222 samples, 0.03%)</title><rect x="160.5" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (222 samples, 0.03%)</title><rect x="160.5" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/281969796.get$Lambda (222 samples, 0.03%)</title><rect x="160.5" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$260 (222 samples, 0.03%)</title><rect x="160.5" y="227.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="163.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (700 samples, 0.10%)</title><rect x="160.8" y="275.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (700 samples, 0.10%)</title><rect x="160.8" y="259.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (389 samples, 0.06%)</title><rect x="160.8" y="243.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="163.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (311 samples, 0.05%)</title><rect x="161.5" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (311 samples, 0.05%)</title><rect x="161.5" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (311 samples, 0.05%)</title><rect x="161.5" y="211.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="164.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$265/590862494.accept (1,206 samples, 0.18%)</title><rect x="162.1" y="323.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1,206 samples, 0.18%)</title><rect x="162.1" y="307.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1,206 samples, 0.18%)</title><rect x="162.1" y="291.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1,206 samples, 0.18%)</title><rect x="162.1" y="275.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1,206 samples, 0.18%)</title><rect x="162.1" y="259.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,206 samples, 0.18%)</title><rect x="162.1" y="243.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,206 samples, 0.18%)</title><rect x="162.1" y="227.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,206 samples, 0.18%)</title><rect x="162.1" y="211.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,206 samples, 0.18%)</title><rect x="162.1" y="195.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="165.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1,206 samples, 0.18%)</title><rect x="162.1" y="179.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (489 samples, 0.07%)</title><rect x="162.1" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (489 samples, 0.07%)</title><rect x="162.1" y="147.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (220 samples, 0.03%)</title><rect x="162.1" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="165.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (269 samples, 0.04%)</title><rect x="162.5" y="131.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (269 samples, 0.04%)</title><rect x="162.5" y="115.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (269 samples, 0.04%)</title><rect x="162.5" y="99.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (269 samples, 0.04%)</title><rect x="162.5" y="83.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (269 samples, 0.04%)</title><rect x="162.5" y="67.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (269 samples, 0.04%)</title><rect x="162.5" y="51.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="165.5" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (717 samples, 0.11%)</title><rect x="162.9" y="163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (717 samples, 0.11%)</title><rect x="162.9" y="147.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.9" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (241 samples, 0.04%)</title><rect x="162.9" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.9" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (241 samples, 0.04%)</title><rect x="162.9" y="115.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="165.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (476 samples, 0.07%)</title><rect x="163.4" y="131.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.4" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (239 samples, 0.04%)</title><rect x="163.4" y="115.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="166.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (237 samples, 0.04%)</title><rect x="163.8" y="115.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (237 samples, 0.04%)</title><rect x="163.8" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (237 samples, 0.04%)</title><rect x="163.8" y="83.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (237 samples, 0.04%)</title><rect x="163.8" y="67.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (237 samples, 0.04%)</title><rect x="163.8" y="51.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (237 samples, 0.04%)</title><rect x="163.8" y="35.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="166.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (664 samples, 0.10%)</title><rect x="164.2" y="323.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (664 samples, 0.10%)</title><rect x="164.2" y="307.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (664 samples, 0.10%)</title><rect x="164.2" y="291.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="167.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4,697 samples, 0.70%)</title><rect x="165.4" y="371.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (428 samples, 0.06%)</title><rect x="165.4" y="355.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="168.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (328 samples, 0.05%)</title><rect x="166.1" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (328 samples, 0.05%)</title><rect x="166.1" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (328 samples, 0.05%)</title><rect x="166.1" y="323.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="169.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (3,941 samples, 0.59%)</title><rect x="166.7" y="355.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (232 samples, 0.03%)</title><rect x="166.7" y="339.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="169.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2,059 samples, 0.31%)</title><rect x="167.1" y="339.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (315 samples, 0.05%)</title><rect x="167.1" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (315 samples, 0.05%)</title><rect x="167.1" y="307.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="170.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (435 samples, 0.07%)</title><rect x="167.7" y="323.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="170.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1,309 samples, 0.20%)</title><rect x="168.4" y="323.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (156 samples, 0.02%)</title><rect x="168.4" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="171.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (154 samples, 0.02%)</title><rect x="168.7" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="171.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (294 samples, 0.04%)</title><rect x="169.0" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="172.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (226 samples, 0.03%)</title><rect x="169.5" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (226 samples, 0.03%)</title><rect x="169.5" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="172.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (479 samples, 0.07%)</title><rect x="169.9" y="307.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (153 samples, 0.02%)</title><rect x="169.9" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="172.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (153 samples, 0.02%)</title><rect x="170.2" y="291.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="173.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (173 samples, 0.03%)</title><rect x="170.5" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="173.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1,650 samples, 0.25%)</title><rect x="170.8" y="339.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (255 samples, 0.04%)</title><rect x="170.8" y="323.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="173.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (828 samples, 0.12%)</title><rect x="171.2" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (494 samples, 0.07%)</title><rect x="171.2" y="307.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="174.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (334 samples, 0.05%)</title><rect x="172.1" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.1" y="318.0"></text>
</g>
<g>
<title>byte[] (334 samples, 0.05%)</title><rect x="172.1" y="291.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="175.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (567 samples, 0.08%)</title><rect x="172.7" y="323.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="175.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (567 samples, 0.08%)</title><rect x="172.7" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (567 samples, 0.08%)</title><rect x="172.7" y="291.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (567 samples, 0.08%)</title><rect x="172.7" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (567 samples, 0.08%)</title><rect x="172.7" y="259.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (567 samples, 0.08%)</title><rect x="172.7" y="243.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="175.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,093 samples, 0.16%)</title><rect x="173.7" y="579.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,093 samples, 0.16%)</title><rect x="173.7" y="563.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,093 samples, 0.16%)</title><rect x="173.7" y="547.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,093 samples, 0.16%)</title><rect x="173.7" y="531.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,093 samples, 0.16%)</title><rect x="173.7" y="515.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,093 samples, 0.16%)</title><rect x="173.7" y="499.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (494 samples, 0.07%)</title><rect x="173.7" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.7" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (494 samples, 0.07%)</title><rect x="173.7" y="467.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="176.7" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (599 samples, 0.09%)</title><rect x="174.6" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.6" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (599 samples, 0.09%)</title><rect x="174.6" y="467.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="177.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42,801 samples, 6.40%)</title><rect x="175.6" y="755.0" width="75.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.6" y="766.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (42,801 samples, 6.40%)</title><rect x="175.6" y="739.0" width="75.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.6" y="750.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (35,740 samples, 5.35%)</title><rect x="175.6" y="723.0" width="63.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.6" y="734.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (35,740 samples, 5.35%)</title><rect x="175.6" y="707.0" width="63.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.6" y="718.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (35,740 samples, 5.35%)</title><rect x="175.6" y="691.0" width="63.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.6" y="702.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (889 samples, 0.13%)</title><rect x="175.6" y="675.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (889 samples, 0.13%)</title><rect x="175.6" y="659.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (889 samples, 0.13%)</title><rect x="175.6" y="643.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (889 samples, 0.13%)</title><rect x="175.6" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1151844284.linkToTargetMethod (497 samples, 0.07%)</title><rect x="175.6" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1380806038.invoke (497 samples, 0.07%)</title><rect x="175.6" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (497 samples, 0.07%)</title><rect x="175.6" y="579.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="178.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (497 samples, 0.07%)</title><rect x="175.6" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (497 samples, 0.07%)</title><rect x="175.6" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.6" y="558.0"></text>
</g>
<g>
<title>byte[] (497 samples, 0.07%)</title><rect x="175.6" y="531.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="178.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (392 samples, 0.06%)</title><rect x="176.5" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (392 samples, 0.06%)</title><rect x="176.5" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (392 samples, 0.06%)</title><rect x="176.5" y="579.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (392 samples, 0.06%)</title><rect x="176.5" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (392 samples, 0.06%)</title><rect x="176.5" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="179.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (34,851 samples, 5.21%)</title><rect x="177.2" y="675.0" width="61.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.2" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (34,851 samples, 5.21%)</title><rect x="177.2" y="659.0" width="61.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.2" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (34,851 samples, 5.21%)</title><rect x="177.2" y="643.0" width="61.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.2" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (34,851 samples, 5.21%)</title><rect x="177.2" y="627.0" width="61.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.2" y="638.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (16,421 samples, 2.46%)</title><rect x="177.2" y="611.0" width="29.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.2" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16,421 samples, 2.46%)</title><rect x="177.2" y="595.0" width="29.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.2" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (16,421 samples, 2.46%)</title><rect x="177.2" y="579.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.2" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16,421 samples, 2.46%)</title><rect x="177.2" y="563.0" width="29.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.2" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16,421 samples, 2.46%)</title><rect x="177.2" y="547.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.2" y="558.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (16,421 samples, 2.46%)</title><rect x="177.2" y="531.0" width="29.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.2" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (16,421 samples, 2.46%)</title><rect x="177.2" y="515.0" width="29.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.2" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (15,926 samples, 2.38%)</title><rect x="177.2" y="499.0" width="28.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.2" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15,926 samples, 2.38%)</title><rect x="177.2" y="483.0" width="28.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.2" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (15,575 samples, 2.33%)</title><rect x="177.2" y="467.0" width="27.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.2" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (334 samples, 0.05%)</title><rect x="177.2" y="451.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="180.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1524095918.apply (348 samples, 0.05%)</title><rect x="177.8" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (348 samples, 0.05%)</title><rect x="177.8" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (348 samples, 0.05%)</title><rect x="177.8" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (348 samples, 0.05%)</title><rect x="177.8" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (348 samples, 0.05%)</title><rect x="177.8" y="387.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="180.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (14,182 samples, 2.12%)</title><rect x="178.4" y="451.0" width="25.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.4" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (14,182 samples, 2.12%)</title><rect x="178.4" y="435.0" width="25.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.4" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (259 samples, 0.04%)</title><rect x="178.4" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (259 samples, 0.04%)</title><rect x="178.4" y="403.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.get$Lambda (259 samples, 0.04%)</title><rect x="178.4" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$306 (259 samples, 0.04%)</title><rect x="178.4" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="181.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (692 samples, 0.10%)</title><rect x="178.8" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (692 samples, 0.10%)</title><rect x="178.8" y="403.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (387 samples, 0.06%)</title><rect x="178.8" y="387.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="181.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (305 samples, 0.05%)</title><rect x="179.5" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (305 samples, 0.05%)</title><rect x="179.5" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (305 samples, 0.05%)</title><rect x="179.5" y="355.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="182.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (13,231 samples, 1.98%)</title><rect x="180.1" y="419.0" width="23.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.1" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (159 samples, 0.02%)</title><rect x="180.1" y="403.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (159 samples, 0.02%)</title><rect x="180.1" y="387.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/444722083.get$Lambda (159 samples, 0.02%)</title><rect x="180.1" y="371.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (159 samples, 0.02%)</title><rect x="180.1" y="355.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="183.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (760 samples, 0.11%)</title><rect x="180.3" y="403.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (760 samples, 0.11%)</title><rect x="180.3" y="387.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (414 samples, 0.06%)</title><rect x="180.3" y="371.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="183.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (346 samples, 0.05%)</title><rect x="181.1" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (346 samples, 0.05%)</title><rect x="181.1" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (346 samples, 0.05%)</title><rect x="181.1" y="339.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="184.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (12,312 samples, 1.84%)</title><rect x="181.7" y="403.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.7" y="414.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$116/1476717268.apply (747 samples, 0.11%)</title><rect x="181.7" y="387.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (747 samples, 0.11%)</title><rect x="181.7" y="371.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (747 samples, 0.11%)</title><rect x="181.7" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (228 samples, 0.03%)</title><rect x="181.7" y="339.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="184.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (519 samples, 0.08%)</title><rect x="182.1" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (159 samples, 0.02%)</title><rect x="182.1" y="323.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="185.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (360 samples, 0.05%)</title><rect x="182.4" y="323.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="185.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (11,565 samples, 1.73%)</title><rect x="183.0" y="387.0" width="20.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (372 samples, 0.06%)</title><rect x="183.0" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (372 samples, 0.06%)</title><rect x="183.0" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/2089965289.get$Lambda (184 samples, 0.03%)</title><rect x="183.0" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$300 (184 samples, 0.03%)</title><rect x="183.0" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="186.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$302/1038352260.get$Lambda (188 samples, 0.03%)</title><rect x="183.3" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$302 (188 samples, 0.03%)</title><rect x="183.3" y="323.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="186.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/357846757.linkToTargetMethod (419 samples, 0.06%)</title><rect x="183.7" y="371.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/951328009.invokeStatic (419 samples, 0.06%)</title><rect x="183.7" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.get$Lambda (419 samples, 0.06%)</title><rect x="183.7" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (419 samples, 0.06%)</title><rect x="183.7" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="186.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2,248 samples, 0.34%)</title><rect x="184.4" y="371.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (855 samples, 0.13%)</title><rect x="184.4" y="355.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.4" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (291 samples, 0.04%)</title><rect x="184.4" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.4" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (291 samples, 0.04%)</title><rect x="184.4" y="323.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="187.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (564 samples, 0.08%)</title><rect x="184.9" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (564 samples, 0.08%)</title><rect x="184.9" y="323.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="187.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (730 samples, 0.11%)</title><rect x="185.9" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (730 samples, 0.11%)</title><rect x="185.9" y="339.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (730 samples, 0.11%)</title><rect x="185.9" y="323.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (254 samples, 0.04%)</title><rect x="185.9" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (254 samples, 0.04%)</title><rect x="185.9" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (254 samples, 0.04%)</title><rect x="185.9" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.9" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (254 samples, 0.04%)</title><rect x="185.9" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="188.9" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$285/349554149.get (227 samples, 0.03%)</title><rect x="186.4" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.4" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (227 samples, 0.03%)</title><rect x="186.4" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (249 samples, 0.04%)</title><rect x="186.8" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.8" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (249 samples, 0.04%)</title><rect x="186.8" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.8" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (249 samples, 0.04%)</title><rect x="186.8" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.8" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (249 samples, 0.04%)</title><rect x="186.8" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="189.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (663 samples, 0.10%)</title><rect x="187.2" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.2" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (663 samples, 0.10%)</title><rect x="187.2" y="339.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="190.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,488 samples, 0.22%)</title><rect x="188.4" y="371.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (749 samples, 0.11%)</title><rect x="188.4" y="355.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (412 samples, 0.06%)</title><rect x="188.4" y="339.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="191.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (337 samples, 0.05%)</title><rect x="189.1" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (337 samples, 0.05%)</title><rect x="189.1" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (337 samples, 0.05%)</title><rect x="189.1" y="307.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="192.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (739 samples, 0.11%)</title><rect x="189.7" y="355.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (739 samples, 0.11%)</title><rect x="189.7" y="339.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (397 samples, 0.06%)</title><rect x="189.7" y="323.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="192.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (342 samples, 0.05%)</title><rect x="190.4" y="323.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (342 samples, 0.05%)</title><rect x="190.4" y="307.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (342 samples, 0.05%)</title><rect x="190.4" y="291.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="193.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (238 samples, 0.04%)</title><rect x="191.0" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="194.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (348 samples, 0.05%)</title><rect x="191.4" y="371.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="194.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (325 samples, 0.05%)</title><rect x="192.0" y="371.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="195.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (169 samples, 0.03%)</title><rect x="192.6" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (169 samples, 0.03%)</title><rect x="192.6" y="355.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="195.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,958 samples, 0.89%)</title><rect x="192.9" y="371.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (5,958 samples, 0.89%)</title><rect x="192.9" y="355.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5,958 samples, 0.89%)</title><rect x="192.9" y="339.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (786 samples, 0.12%)</title><rect x="192.9" y="323.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (786 samples, 0.12%)</title><rect x="192.9" y="307.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.get$Lambda (176 samples, 0.03%)</title><rect x="192.9" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$291 (176 samples, 0.03%)</title><rect x="192.9" y="275.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="195.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1587562441.get$Lambda (236 samples, 0.04%)</title><rect x="193.2" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$292 (236 samples, 0.04%)</title><rect x="193.2" y="275.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="196.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1163391232.get$Lambda (374 samples, 0.06%)</title><rect x="193.6" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$295 (374 samples, 0.06%)</title><rect x="193.6" y="275.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="196.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (777 samples, 0.12%)</title><rect x="194.3" y="323.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (777 samples, 0.12%)</title><rect x="194.3" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (440 samples, 0.07%)</title><rect x="194.3" y="291.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="197.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (337 samples, 0.05%)</title><rect x="195.1" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (337 samples, 0.05%)</title><rect x="195.1" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (337 samples, 0.05%)</title><rect x="195.1" y="259.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="198.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (407 samples, 0.06%)</title><rect x="195.7" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="198.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (318 samples, 0.05%)</title><rect x="196.4" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (318 samples, 0.05%)</title><rect x="196.4" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="199.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (994 samples, 0.15%)</title><rect x="196.9" y="323.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (994 samples, 0.15%)</title><rect x="196.9" y="307.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (224 samples, 0.03%)</title><rect x="196.9" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (224 samples, 0.03%)</title><rect x="196.9" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$298/1051934413.get$Lambda (224 samples, 0.03%)</title><rect x="196.9" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$298 (224 samples, 0.03%)</title><rect x="196.9" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="199.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (766 samples, 0.11%)</title><rect x="197.3" y="291.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (766 samples, 0.11%)</title><rect x="197.3" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (766 samples, 0.11%)</title><rect x="197.3" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (443 samples, 0.07%)</title><rect x="197.3" y="243.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="200.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (323 samples, 0.05%)</title><rect x="198.1" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (323 samples, 0.05%)</title><rect x="198.1" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (323 samples, 0.05%)</title><rect x="198.1" y="211.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="201.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (987 samples, 0.15%)</title><rect x="198.7" y="323.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (987 samples, 0.15%)</title><rect x="198.7" y="307.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116237769.invoke (987 samples, 0.15%)</title><rect x="198.7" y="291.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (987 samples, 0.15%)</title><rect x="198.7" y="275.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (259 samples, 0.04%)</title><rect x="198.7" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (259 samples, 0.04%)</title><rect x="198.7" y="243.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="201.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (728 samples, 0.11%)</title><rect x="199.2" y="259.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (728 samples, 0.11%)</title><rect x="199.2" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.2" y="254.0"></text>
</g>
<g>
<title>byte[] (728 samples, 0.11%)</title><rect x="199.2" y="227.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="202.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,689 samples, 0.25%)</title><rect x="200.4" y="323.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (541 samples, 0.08%)</title><rect x="200.4" y="307.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="203.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1,148 samples, 0.17%)</title><rect x="201.4" y="307.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,148 samples, 0.17%)</title><rect x="201.4" y="291.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116237769.invoke (1,148 samples, 0.17%)</title><rect x="201.4" y="275.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,148 samples, 0.17%)</title><rect x="201.4" y="259.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (267 samples, 0.04%)</title><rect x="201.4" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String (267 samples, 0.04%)</title><rect x="201.4" y="227.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="204.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (881 samples, 0.13%)</title><rect x="201.9" y="243.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (881 samples, 0.13%)</title><rect x="201.9" y="227.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.9" y="238.0"></text>
</g>
<g>
<title>byte[] (881 samples, 0.13%)</title><rect x="201.9" y="211.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="204.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/60851830.apply (711 samples, 0.11%)</title><rect x="203.4" y="451.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (711 samples, 0.11%)</title><rect x="203.4" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (341 samples, 0.05%)</title><rect x="203.4" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.4" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (341 samples, 0.05%)</title><rect x="203.4" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.4" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (341 samples, 0.05%)</title><rect x="203.4" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.4" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (341 samples, 0.05%)</title><rect x="203.4" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="206.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (370 samples, 0.06%)</title><rect x="204.0" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (370 samples, 0.06%)</title><rect x="204.0" y="403.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="207.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (351 samples, 0.05%)</title><rect x="204.7" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (351 samples, 0.05%)</title><rect x="204.7" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.apply (351 samples, 0.05%)</title><rect x="204.7" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (351 samples, 0.05%)</title><rect x="204.7" y="419.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (351 samples, 0.05%)</title><rect x="204.7" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (351 samples, 0.05%)</title><rect x="204.7" y="387.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="207.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1477862221.apply (495 samples, 0.07%)</title><rect x="205.3" y="499.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (495 samples, 0.07%)</title><rect x="205.3" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (495 samples, 0.07%)</title><rect x="205.3" y="467.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="208.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (18,430 samples, 2.76%)</title><rect x="206.2" y="611.0" width="32.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.2" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,234 samples, 0.18%)</title><rect x="206.2" y="595.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,234 samples, 0.18%)</title><rect x="206.2" y="579.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,234 samples, 0.18%)</title><rect x="206.2" y="563.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.2" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,234 samples, 0.18%)</title><rect x="206.2" y="547.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,234 samples, 0.18%)</title><rect x="206.2" y="531.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.2" y="542.0"></text>
</g>
<g>
<title>byte[] (1,234 samples, 0.18%)</title><rect x="206.2" y="515.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="209.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (791 samples, 0.12%)</title><rect x="208.3" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (791 samples, 0.12%)</title><rect x="208.3" y="579.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (791 samples, 0.12%)</title><rect x="208.3" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.3" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (791 samples, 0.12%)</title><rect x="208.3" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (791 samples, 0.12%)</title><rect x="208.3" y="531.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.3" y="542.0"></text>
</g>
<g>
<title>byte[] (791 samples, 0.12%)</title><rect x="208.3" y="515.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="211.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,727 samples, 0.26%)</title><rect x="209.7" y="595.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="212.7" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (260 samples, 0.04%)</title><rect x="209.7" y="579.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="212.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (466 samples, 0.07%)</title><rect x="210.2" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (466 samples, 0.07%)</title><rect x="210.2" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (218 samples, 0.03%)</title><rect x="210.2" y="547.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="213.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (248 samples, 0.04%)</title><rect x="210.6" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.6" y="558.0"></text>
</g>
<g>
<title>byte[] (248 samples, 0.04%)</title><rect x="210.6" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="213.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (338 samples, 0.05%)</title><rect x="211.0" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (338 samples, 0.05%)</title><rect x="211.0" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.0" y="574.0"></text>
</g>
<g>
<title>byte[] (338 samples, 0.05%)</title><rect x="211.0" y="547.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="214.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (663 samples, 0.10%)</title><rect x="211.6" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (663 samples, 0.10%)</title><rect x="211.6" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (254 samples, 0.04%)</title><rect x="211.6" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="214.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (409 samples, 0.06%)</title><rect x="212.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.1" y="558.0"></text>
</g>
<g>
<title>byte[] (409 samples, 0.06%)</title><rect x="212.1" y="531.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="215.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (4,693 samples, 0.70%)</title><rect x="212.8" y="595.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,693 samples, 0.70%)</title><rect x="212.8" y="579.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,693 samples, 0.70%)</title><rect x="212.8" y="563.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.8" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (168 samples, 0.03%)</title><rect x="212.8" y="547.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="215.8" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (264 samples, 0.04%)</title><rect x="213.1" y="547.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="216.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (502 samples, 0.08%)</title><rect x="213.6" y="547.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="216.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (168 samples, 0.03%)</title><rect x="214.4" y="547.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="217.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (338 samples, 0.05%)</title><rect x="214.7" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (338 samples, 0.05%)</title><rect x="214.7" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (338 samples, 0.05%)</title><rect x="214.7" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.7" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (338 samples, 0.05%)</title><rect x="214.7" y="499.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="217.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (329 samples, 0.05%)</title><rect x="215.3" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.3" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (329 samples, 0.05%)</title><rect x="215.3" y="531.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="218.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2,420 samples, 0.36%)</title><rect x="215.9" y="547.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.9" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (2,420 samples, 0.36%)</title><rect x="215.9" y="531.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,420 samples, 0.36%)</title><rect x="215.9" y="515.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (592 samples, 0.09%)</title><rect x="215.9" y="499.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (592 samples, 0.09%)</title><rect x="215.9" y="483.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (592 samples, 0.09%)</title><rect x="215.9" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (592 samples, 0.09%)</title><rect x="215.9" y="451.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (592 samples, 0.09%)</title><rect x="215.9" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (592 samples, 0.09%)</title><rect x="215.9" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (592 samples, 0.09%)</title><rect x="215.9" y="403.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (592 samples, 0.09%)</title><rect x="215.9" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (591 samples, 0.09%)</title><rect x="215.9" y="371.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="218.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (969 samples, 0.14%)</title><rect x="217.0" y="499.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.0" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (969 samples, 0.14%)</title><rect x="217.0" y="483.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (490 samples, 0.07%)</title><rect x="217.0" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (490 samples, 0.07%)</title><rect x="217.0" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (490 samples, 0.07%)</title><rect x="217.0" y="435.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="220.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (479 samples, 0.07%)</title><rect x="217.8" y="467.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.8" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (479 samples, 0.07%)</title><rect x="217.8" y="451.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="220.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (859 samples, 0.13%)</title><rect x="218.7" y="499.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (859 samples, 0.13%)</title><rect x="218.7" y="483.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="221.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (504 samples, 0.08%)</title><rect x="220.2" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (504 samples, 0.08%)</title><rect x="220.2" y="531.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="223.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (9,985 samples, 1.49%)</title><rect x="221.1" y="595.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.1" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (433 samples, 0.06%)</title><rect x="221.1" y="579.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="224.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (668 samples, 0.10%)</title><rect x="221.8" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.8" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (668 samples, 0.10%)</title><rect x="221.8" y="563.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.8" y="574.0"></text>
</g>
<g>
<title>byte[] (668 samples, 0.10%)</title><rect x="221.8" y="547.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="224.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,334 samples, 0.20%)</title><rect x="223.0" y="579.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,334 samples, 0.20%)</title><rect x="223.0" y="563.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (524 samples, 0.08%)</title><rect x="223.0" y="547.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="226.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (810 samples, 0.12%)</title><rect x="223.9" y="547.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.9" y="558.0"></text>
</g>
<g>
<title>byte[] (810 samples, 0.12%)</title><rect x="223.9" y="531.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="226.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (7,550 samples, 1.13%)</title><rect x="225.4" y="579.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,208 samples, 0.33%)</title><rect x="225.4" y="563.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,208 samples, 0.33%)</title><rect x="225.4" y="547.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (980 samples, 0.15%)</title><rect x="225.4" y="531.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="228.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,228 samples, 0.18%)</title><rect x="227.1" y="531.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.1" y="542.0"></text>
</g>
<g>
<title>byte[] (1,228 samples, 0.18%)</title><rect x="227.1" y="515.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="230.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,164 samples, 0.17%)</title><rect x="229.3" y="563.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,164 samples, 0.17%)</title><rect x="229.3" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.3" y="558.0"></text>
</g>
<g>
<title>byte[] (674 samples, 0.10%)</title><rect x="229.3" y="531.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="232.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (490 samples, 0.07%)</title><rect x="230.5" y="531.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="233.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,048 samples, 0.16%)</title><rect x="231.3" y="563.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,048 samples, 0.16%)</title><rect x="231.3" y="547.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,048 samples, 0.16%)</title><rect x="231.3" y="531.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (504 samples, 0.08%)</title><rect x="231.3" y="515.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="234.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (544 samples, 0.08%)</title><rect x="232.2" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.2" y="526.0"></text>
</g>
<g>
<title>byte[] (544 samples, 0.08%)</title><rect x="232.2" y="499.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="235.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,215 samples, 0.18%)</title><rect x="233.2" y="563.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.2" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,215 samples, 0.18%)</title><rect x="233.2" y="547.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,215 samples, 0.18%)</title><rect x="233.2" y="531.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,215 samples, 0.18%)</title><rect x="233.2" y="515.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,215 samples, 0.18%)</title><rect x="233.2" y="499.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,215 samples, 0.18%)</title><rect x="233.2" y="483.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="236.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1,915 samples, 0.29%)</title><rect x="235.3" y="563.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="238.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (642 samples, 0.10%)</title><rect x="235.3" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (642 samples, 0.10%)</title><rect x="235.3" y="531.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="238.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (818 samples, 0.12%)</title><rect x="236.5" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (818 samples, 0.12%)</title><rect x="236.5" y="531.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="239.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$281/147625240.apply (455 samples, 0.07%)</title><rect x="237.9" y="547.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (455 samples, 0.07%)</title><rect x="237.9" y="531.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (455 samples, 0.07%)</title><rect x="237.9" y="515.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="240.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7,061 samples, 1.06%)</title><rect x="238.7" y="723.0" width="12.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,061 samples, 1.06%)</title><rect x="238.7" y="707.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,061 samples, 1.06%)</title><rect x="238.7" y="691.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (7,061 samples, 1.06%)</title><rect x="238.7" y="675.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,061 samples, 1.06%)</title><rect x="238.7" y="659.0" width="12.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6,893 samples, 1.03%)</title><rect x="238.7" y="643.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (415 samples, 0.06%)</title><rect x="238.7" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (415 samples, 0.06%)</title><rect x="238.7" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1371022227.get$Lambda (171 samples, 0.03%)</title><rect x="238.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (171 samples, 0.03%)</title><rect x="238.7" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="241.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (244 samples, 0.04%)</title><rect x="239.0" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$223 (244 samples, 0.04%)</title><rect x="239.0" y="579.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="242.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (326 samples, 0.05%)</title><rect x="239.4" y="627.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="242.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (407 samples, 0.06%)</title><rect x="240.0" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (407 samples, 0.06%)</title><rect x="240.0" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (172 samples, 0.03%)</title><rect x="240.0" y="595.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="243.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (235 samples, 0.04%)</title><rect x="240.3" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (235 samples, 0.04%)</title><rect x="240.3" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="243.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5,745 samples, 0.86%)</title><rect x="240.7" y="627.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5,745 samples, 0.86%)</title><rect x="240.7" y="611.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.run (5,053 samples, 0.76%)</title><rect x="240.7" y="595.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5,053 samples, 0.76%)</title><rect x="240.7" y="579.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5,053 samples, 0.76%)</title><rect x="240.7" y="563.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.7" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,310 samples, 0.20%)</title><rect x="240.7" y="547.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.7" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (923 samples, 0.14%)</title><rect x="240.7" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.7" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (323 samples, 0.05%)</title><rect x="240.7" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.7" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (323 samples, 0.05%)</title><rect x="240.7" y="499.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="243.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (600 samples, 0.09%)</title><rect x="241.3" y="515.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.3" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (600 samples, 0.09%)</title><rect x="241.3" y="499.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="244.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (387 samples, 0.06%)</title><rect x="242.4" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (387 samples, 0.06%)</title><rect x="242.4" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (387 samples, 0.06%)</title><rect x="242.4" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/1836463382.get (229 samples, 0.03%)</title><rect x="242.4" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (229 samples, 0.03%)</title><rect x="242.4" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="245.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (158 samples, 0.02%)</title><rect x="242.8" y="483.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (158 samples, 0.02%)</title><rect x="242.8" y="467.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.8" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (158 samples, 0.02%)</title><rect x="242.8" y="451.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.8" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (158 samples, 0.02%)</title><rect x="242.8" y="435.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="245.8" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.map (188 samples, 0.03%)</title><rect x="243.0" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.0" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (188 samples, 0.03%)</title><rect x="243.0" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.0" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (188 samples, 0.03%)</title><rect x="243.0" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.0" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (188 samples, 0.03%)</title><rect x="243.0" y="499.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="246.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,555 samples, 0.53%)</title><rect x="243.4" y="547.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (247 samples, 0.04%)</title><rect x="243.4" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.4" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (247 samples, 0.04%)</title><rect x="243.4" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (247 samples, 0.04%)</title><rect x="243.4" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (247 samples, 0.04%)</title><rect x="243.4" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.4" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (247 samples, 0.04%)</title><rect x="243.4" y="467.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="246.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3,308 samples, 0.49%)</title><rect x="243.8" y="531.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,409 samples, 0.21%)</title><rect x="243.8" y="515.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (281 samples, 0.04%)</title><rect x="243.8" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (281 samples, 0.04%)</title><rect x="243.8" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (281 samples, 0.04%)</title><rect x="243.8" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (281 samples, 0.04%)</title><rect x="243.8" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (281 samples, 0.04%)</title><rect x="243.8" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="246.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (281 samples, 0.04%)</title><rect x="243.8" y="419.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="246.8" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (248 samples, 0.04%)</title><rect x="244.3" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (248 samples, 0.04%)</title><rect x="244.3" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (248 samples, 0.04%)</title><rect x="244.3" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (248 samples, 0.04%)</title><rect x="244.3" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (248 samples, 0.04%)</title><rect x="244.3" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.3" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (248 samples, 0.04%)</title><rect x="244.3" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="247.3" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (349 samples, 0.05%)</title><rect x="244.7" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (349 samples, 0.05%)</title><rect x="244.7" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (349 samples, 0.05%)</title><rect x="244.7" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="247.7" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (262 samples, 0.04%)</title><rect x="245.4" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (262 samples, 0.04%)</title><rect x="245.4" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (262 samples, 0.04%)</title><rect x="245.4" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="248.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (269 samples, 0.04%)</title><rect x="245.8" y="499.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="248.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (764 samples, 0.11%)</title><rect x="246.3" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (263 samples, 0.04%)</title><rect x="246.3" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (263 samples, 0.04%)</title><rect x="246.3" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (263 samples, 0.04%)</title><rect x="246.3" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (263 samples, 0.04%)</title><rect x="246.3" y="451.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="249.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (246 samples, 0.04%)</title><rect x="246.8" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (246 samples, 0.04%)</title><rect x="246.8" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (246 samples, 0.04%)</title><rect x="246.8" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="249.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (255 samples, 0.04%)</title><rect x="247.2" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (255 samples, 0.04%)</title><rect x="247.2" y="483.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="250.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,135 samples, 0.17%)</title><rect x="247.6" y="515.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (222 samples, 0.03%)</title><rect x="247.6" y="499.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="250.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (913 samples, 0.14%)</title><rect x="248.0" y="499.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (297 samples, 0.04%)</title><rect x="248.0" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (297 samples, 0.04%)</title><rect x="248.0" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (297 samples, 0.04%)</title><rect x="248.0" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (297 samples, 0.04%)</title><rect x="248.0" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="251.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (616 samples, 0.09%)</title><rect x="248.6" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (616 samples, 0.09%)</title><rect x="248.6" y="467.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (427 samples, 0.06%)</title><rect x="248.6" y="451.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="251.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (189 samples, 0.03%)</title><rect x="249.3" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (189 samples, 0.03%)</title><rect x="249.3" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="252.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (692 samples, 0.10%)</title><rect x="249.6" y="595.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (692 samples, 0.10%)</title><rect x="249.6" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (692 samples, 0.10%)</title><rect x="249.6" y="563.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (692 samples, 0.10%)</title><rect x="249.6" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (692 samples, 0.10%)</title><rect x="249.6" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (692 samples, 0.10%)</title><rect x="249.6" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (692 samples, 0.10%)</title><rect x="249.6" y="499.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/2089965289.accept (692 samples, 0.10%)</title><rect x="249.6" y="483.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (692 samples, 0.10%)</title><rect x="249.6" y="467.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (692 samples, 0.10%)</title><rect x="249.6" y="451.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (692 samples, 0.10%)</title><rect x="249.6" y="435.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (692 samples, 0.10%)</title><rect x="249.6" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.apply (692 samples, 0.10%)</title><rect x="249.6" y="403.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (692 samples, 0.10%)</title><rect x="249.6" y="387.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (691 samples, 0.10%)</title><rect x="249.6" y="371.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="252.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (168 samples, 0.03%)</title><rect x="250.9" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (168 samples, 0.03%)</title><rect x="250.9" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (168 samples, 0.03%)</title><rect x="250.9" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (168 samples, 0.03%)</title><rect x="250.9" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$107/373692322.run (1,966 samples, 0.29%)</title><rect x="251.2" y="755.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocallyAsync$1 (1,966 samples, 0.29%)</title><rect x="251.2" y="739.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (1,966 samples, 0.29%)</title><rect x="251.2" y="723.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (1,966 samples, 0.29%)</title><rect x="251.2" y="707.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (1,966 samples, 0.29%)</title><rect x="251.2" y="691.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.2" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (152 samples, 0.02%)</title><rect x="251.2" y="675.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="254.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (471 samples, 0.07%)</title><rect x="251.4" y="675.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.4" y="686.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.03%)</title><rect x="251.4" y="659.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="254.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (161 samples, 0.02%)</title><rect x="251.8" y="659.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="254.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (1,343 samples, 0.20%)</title><rect x="252.3" y="675.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (1,343 samples, 0.20%)</title><rect x="252.3" y="659.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (622 samples, 0.09%)</title><rect x="252.3" y="643.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.3" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (622 samples, 0.09%)</title><rect x="252.3" y="627.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="255.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (721 samples, 0.11%)</title><rect x="253.4" y="643.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (508 samples, 0.08%)</title><rect x="253.4" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.4" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (508 samples, 0.08%)</title><rect x="253.4" y="611.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="256.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (210 samples, 0.03%)</title><rect x="254.3" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (171 samples, 0.03%)</title><rect x="254.3" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Value (171 samples, 0.03%)</title><rect x="254.3" y="595.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="257.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$277/1271947751.run (75,350 samples, 11.27%)</title><rect x="254.6" y="755.0" width="133.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.6" y="766.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodeRequest$0 (75,350 samples, 11.27%)</title><rect x="254.6" y="739.0" width="133.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.6" y="750.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (75,350 samples, 11.27%)</title><rect x="254.6" y="723.0" width="133.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.6" y="734.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (75,350 samples, 11.27%)</title><rect x="254.6" y="707.0" width="133.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.6" y="718.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (75,350 samples, 11.27%)</title><rect x="254.6" y="691.0" width="133.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="257.6" y="702.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one.nio.http.Response (3,715 samples, 0.56%)</title><rect x="254.6" y="675.0" width="6.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="257.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19,641 samples, 2.94%)</title><rect x="261.2" y="675.0" width="34.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.2" y="686.0">on..</text>
</g>
<g>
<title>byte[] (8,802 samples, 1.32%)</title><rect x="261.2" y="659.0" width="15.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="264.2" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (6,920 samples, 1.04%)</title><rect x="276.7" y="659.0" width="12.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="279.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (3,919 samples, 0.59%)</title><rect x="288.9" y="659.0" width="7.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="291.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (51,994 samples, 7.78%)</title><rect x="295.9" y="675.0" width="91.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.9" y="686.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (51,994 samples, 7.78%)</title><rect x="295.9" y="659.0" width="91.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.9" y="670.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (22,883 samples, 3.42%)</title><rect x="295.9" y="643.0" width="40.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.9" y="654.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22,883 samples, 3.42%)</title><rect x="295.9" y="627.0" width="40.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="298.9" y="638.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (29,111 samples, 4.35%)</title><rect x="336.3" y="643.0" width="51.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.3" y="654.0">ru/ma..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (19,759 samples, 2.96%)</title><rect x="336.3" y="627.0" width="34.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="339.3" y="638.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19,759 samples, 2.96%)</title><rect x="336.3" y="611.0" width="34.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="339.3" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (266 samples, 0.04%)</title><rect x="371.1" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (266 samples, 0.04%)</title><rect x="371.1" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (266 samples, 0.04%)</title><rect x="371.1" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.1" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (221 samples, 0.03%)</title><rect x="371.1" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (221 samples, 0.03%)</title><rect x="371.1" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (9,086 samples, 1.36%)</title><rect x="371.6" y="627.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1,155 samples, 0.17%)</title><rect x="371.6" y="611.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1,155 samples, 0.17%)</title><rect x="371.6" y="595.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (436 samples, 0.07%)</title><rect x="371.6" y="579.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="374.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (719 samples, 0.11%)</title><rect x="372.4" y="579.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="375.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (7,931 samples, 1.19%)</title><rect x="373.6" y="611.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Value (7,931 samples, 1.19%)</title><rect x="373.6" y="595.0" width="14.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="376.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (89,299 samples, 13.36%)</title><rect x="387.6" y="803.0" width="157.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.6" y="814.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (89,299 samples, 13.36%)</title><rect x="387.6" y="787.0" width="157.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.6" y="798.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (89,299 samples, 13.36%)</title><rect x="387.6" y="771.0" width="157.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.6" y="782.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (89,299 samples, 13.36%)</title><rect x="387.6" y="755.0" width="157.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.6" y="766.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (89,299 samples, 13.36%)</title><rect x="387.6" y="739.0" width="157.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.6" y="750.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (89,299 samples, 13.36%)</title><rect x="387.6" y="723.0" width="157.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.6" y="734.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (89,299 samples, 13.36%)</title><rect x="387.6" y="707.0" width="157.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.6" y="718.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (89,299 samples, 13.36%)</title><rect x="387.6" y="691.0" width="157.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.6" y="702.0">java/util/concurrent..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.accept (31,442 samples, 4.70%)</title><rect x="387.6" y="675.0" width="55.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.6" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.lambda$getEmptyBodyResponseHandler$0 (31,442 samples, 4.70%)</title><rect x="387.6" y="659.0" width="55.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.6" y="670.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.valueOf (10,558 samples, 1.58%)</title><rect x="387.6" y="643.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (10,558 samples, 1.58%)</title><rect x="387.6" y="627.0" width="18.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.6" y="638.0"></text>
</g>
<g>
<title>byte[] (6,670 samples, 1.00%)</title><rect x="387.6" y="611.0" width="11.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="390.6" y="622.0"></text>
</g>
<g>
<title>java.lang.String (3,888 samples, 0.58%)</title><rect x="399.4" y="611.0" width="6.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="402.4" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (5,591 samples, 0.84%)</title><rect x="406.3" y="643.0" width="9.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="409.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15,293 samples, 2.29%)</title><rect x="416.2" y="643.0" width="26.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.2" y="654.0">o..</text>
</g>
<g>
<title>byte[] (6,587 samples, 0.99%)</title><rect x="416.2" y="627.0" width="11.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="419.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (4,975 samples, 0.74%)</title><rect x="427.8" y="627.0" width="8.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="430.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (3,731 samples, 0.56%)</title><rect x="436.6" y="627.0" width="6.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="439.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.accept (2,073 samples, 0.31%)</title><rect x="443.1" y="675.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="446.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.lambda$getResultHandler$0 (2,073 samples, 0.31%)</title><rect x="443.1" y="659.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="446.1" y="670.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (2,024 samples, 0.30%)</title><rect x="443.1" y="643.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.1" y="654.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (2,024 samples, 0.30%)</title><rect x="443.1" y="627.0" width="3.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="446.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$142/329492948.accept (45,917 samples, 6.87%)</title><rect x="446.8" y="675.0" width="81.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.8" y="686.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$sendResponseAsync$0 (45,917 samples, 6.87%)</title><rect x="446.8" y="659.0" width="81.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.8" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45,917 samples, 6.87%)</title><rect x="446.8" y="643.0" width="81.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.8" y="654.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30,810 samples, 4.61%)</title><rect x="446.8" y="627.0" width="54.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.8" y="638.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21,351 samples, 3.19%)</title><rect x="446.8" y="611.0" width="37.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.8" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (21,351 samples, 3.19%)</title><rect x="446.8" y="595.0" width="37.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.8" y="606.0">one..</text>
</g>
<g>
<title>byte[] (13,587 samples, 2.03%)</title><rect x="446.8" y="579.0" width="24.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="449.8" y="590.0">b..</text>
</g>
<g>
<title>byte[] (7,764 samples, 1.16%)</title><rect x="470.8" y="579.0" width="13.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="473.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9,459 samples, 1.42%)</title><rect x="484.5" y="611.0" width="16.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.5" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9,459 samples, 1.42%)</title><rect x="484.5" y="595.0" width="16.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="487.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15,107 samples, 2.26%)</title><rect x="501.2" y="627.0" width="26.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.2" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (15,107 samples, 2.26%)</title><rect x="501.2" y="611.0" width="26.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.2" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15,107 samples, 2.26%)</title><rect x="501.2" y="595.0" width="26.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.2" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (5,982 samples, 0.89%)</title><rect x="501.2" y="579.0" width="10.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="504.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9,125 samples, 1.37%)</title><rect x="511.8" y="579.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.8" y="590.0"></text>
</g>
<g>
<title>byte[] (9,125 samples, 1.37%)</title><rect x="511.8" y="563.0" width="16.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="514.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.accept (9,867 samples, 1.48%)</title><rect x="527.9" y="675.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodesResponsesAsync$3 (9,867 samples, 1.48%)</title><rect x="527.9" y="659.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponses (9,867 samples, 1.48%)</title><rect x="527.9" y="643.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.9" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,954 samples, 0.29%)</title><rect x="527.9" y="627.0" width="3.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="530.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7,913 samples, 1.18%)</title><rect x="531.3" y="627.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.3" y="638.0"></text>
</g>
<g>
<title>byte[] (3,312 samples, 0.50%)</title><rect x="531.3" y="611.0" width="5.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="534.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (2,675 samples, 0.40%)</title><rect x="537.2" y="611.0" width="4.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="540.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String (1,926 samples, 0.29%)</title><rect x="541.9" y="611.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="544.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (66,984 samples, 10.02%)</title><rect x="545.3" y="803.0" width="118.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.3" y="814.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,686 samples, 0.25%)</title><rect x="545.3" y="787.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,686 samples, 0.25%)</title><rect x="545.3" y="771.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1377655111.get$Lambda (915 samples, 0.14%)</title><rect x="545.3" y="755.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (915 samples, 0.14%)</title><rect x="545.3" y="739.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="548.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1072487675.get$Lambda (771 samples, 0.12%)</title><rect x="546.9" y="755.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$248 (771 samples, 0.12%)</title><rect x="546.9" y="739.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="549.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (1,456 samples, 0.22%)</title><rect x="548.3" y="787.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,456 samples, 0.22%)</title><rect x="548.3" y="771.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/1669720320.get$Lambda (1,456 samples, 0.22%)</title><rect x="548.3" y="755.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$241 (1,456 samples, 0.22%)</title><rect x="548.3" y="739.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="551.3" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (12,464 samples, 1.86%)</title><rect x="550.8" y="787.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.8" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/182260085.accept (10,015 samples, 1.50%)</title><rect x="550.8" y="771.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (10,015 samples, 1.50%)</title><rect x="550.8" y="755.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (10,015 samples, 1.50%)</title><rect x="550.8" y="739.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (10,015 samples, 1.50%)</title><rect x="550.8" y="723.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (10,015 samples, 1.50%)</title><rect x="550.8" y="707.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (10,015 samples, 1.50%)</title><rect x="550.8" y="691.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10,015 samples, 1.50%)</title><rect x="550.8" y="675.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10,015 samples, 1.50%)</title><rect x="550.8" y="659.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,015 samples, 1.50%)</title><rect x="550.8" y="643.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (10,015 samples, 1.50%)</title><rect x="550.8" y="627.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (10,015 samples, 1.50%)</title><rect x="550.8" y="611.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (10,015 samples, 1.50%)</title><rect x="550.8" y="595.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (3,002 samples, 0.45%)</title><rect x="550.8" y="579.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="553.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (3,002 samples, 0.45%)</title><rect x="550.8" y="563.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.8" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (166 samples, 0.02%)</title><rect x="550.8" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.8" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (166 samples, 0.02%)</title><rect x="550.8" y="531.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="553.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (2,836 samples, 0.42%)</title><rect x="551.1" y="547.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1,410 samples, 0.21%)</title><rect x="551.1" y="531.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1,410 samples, 0.21%)</title><rect x="551.1" y="515.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1,410 samples, 0.21%)</title><rect x="551.1" y="499.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1,410 samples, 0.21%)</title><rect x="551.1" y="483.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1,410 samples, 0.21%)</title><rect x="551.1" y="467.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="554.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,426 samples, 0.21%)</title><rect x="553.6" y="531.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,426 samples, 0.21%)</title><rect x="553.6" y="515.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,426 samples, 0.21%)</title><rect x="553.6" y="499.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="556.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,426 samples, 0.21%)</title><rect x="553.6" y="483.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,426 samples, 0.21%)</title><rect x="553.6" y="467.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,413 samples, 0.21%)</title><rect x="553.6" y="451.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="556.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (911 samples, 0.14%)</title><rect x="556.2" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (911 samples, 0.14%)</title><rect x="556.2" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (911 samples, 0.14%)</title><rect x="556.2" y="547.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (911 samples, 0.14%)</title><rect x="556.2" y="531.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (911 samples, 0.14%)</title><rect x="556.2" y="515.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="559.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (6,077 samples, 0.91%)</title><rect x="557.8" y="579.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="560.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (4,279 samples, 0.64%)</title><rect x="557.8" y="563.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2,849 samples, 0.43%)</title><rect x="557.8" y="547.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.8" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (2,849 samples, 0.43%)</title><rect x="557.8" y="531.0" width="5.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="560.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1,430 samples, 0.21%)</title><rect x="562.8" y="547.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.8" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (1,430 samples, 0.21%)</title><rect x="562.8" y="531.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,430 samples, 0.21%)</title><rect x="562.8" y="515.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="565.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1,798 samples, 0.27%)</title><rect x="565.3" y="563.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/1961873698.get (1,798 samples, 0.27%)</title><rect x="565.3" y="547.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1,798 samples, 0.27%)</title><rect x="565.3" y="531.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,798 samples, 0.27%)</title><rect x="565.3" y="515.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,785 samples, 0.27%)</title><rect x="565.4" y="499.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.4" y="510.0"></text>
</g>
<g>
<title>byte[] (1,755 samples, 0.26%)</title><rect x="565.4" y="483.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/1936584687.accept (2,449 samples, 0.37%)</title><rect x="568.5" y="771.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2,449 samples, 0.37%)</title><rect x="568.5" y="755.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/1669720320.run (2,449 samples, 0.37%)</title><rect x="568.5" y="739.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2,449 samples, 0.37%)</title><rect x="568.5" y="723.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2,449 samples, 0.37%)</title><rect x="568.5" y="707.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,449 samples, 0.37%)</title><rect x="568.5" y="691.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2,449 samples, 0.37%)</title><rect x="568.5" y="675.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.5" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2,449 samples, 0.37%)</title><rect x="568.5" y="659.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="571.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (5,784 samples, 0.87%)</title><rect x="572.8" y="787.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.8" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (5,784 samples, 0.87%)</title><rect x="572.8" y="771.0" width="10.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="575.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3,104 samples, 0.46%)</title><rect x="583.0" y="787.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,624 samples, 0.24%)</title><rect x="583.0" y="771.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1,624 samples, 0.24%)</title><rect x="583.0" y="755.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1,624 samples, 0.24%)</title><rect x="583.0" y="739.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,624 samples, 0.24%)</title><rect x="583.0" y="723.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1,624 samples, 0.24%)</title><rect x="583.0" y="707.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1,624 samples, 0.24%)</title><rect x="583.0" y="691.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.0" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1,624 samples, 0.24%)</title><rect x="583.0" y="675.0" width="2.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="586.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (1,480 samples, 0.22%)</title><rect x="585.9" y="771.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.9" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (1,480 samples, 0.22%)</title><rect x="585.9" y="755.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="588.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (9,293 samples, 1.39%)</title><rect x="588.5" y="787.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/167882164.run (4,590 samples, 0.69%)</title><rect x="588.5" y="771.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (4,590 samples, 0.69%)</title><rect x="588.5" y="755.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,590 samples, 0.69%)</title><rect x="588.5" y="739.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4,590 samples, 0.69%)</title><rect x="588.5" y="723.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4,590 samples, 0.69%)</title><rect x="588.5" y="707.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (4,590 samples, 0.69%)</title><rect x="588.5" y="691.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (4,590 samples, 0.69%)</title><rect x="588.5" y="675.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (4,590 samples, 0.69%)</title><rect x="588.5" y="659.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (4,579 samples, 0.69%)</title><rect x="588.5" y="643.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4,579 samples, 0.69%)</title><rect x="588.5" y="627.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3,180 samples, 0.48%)</title><rect x="588.5" y="611.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3,180 samples, 0.48%)</title><rect x="588.5" y="595.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3,180 samples, 0.48%)</title><rect x="588.5" y="579.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1151844284.linkToTargetMethod (2,273 samples, 0.34%)</title><rect x="588.5" y="563.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1380806038.invoke (2,273 samples, 0.34%)</title><rect x="588.5" y="547.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,273 samples, 0.34%)</title><rect x="588.5" y="531.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2,273 samples, 0.34%)</title><rect x="588.5" y="515.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2,273 samples, 0.34%)</title><rect x="588.5" y="499.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.5" y="510.0"></text>
</g>
<g>
<title>byte[] (2,273 samples, 0.34%)</title><rect x="588.5" y="483.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="591.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (907 samples, 0.14%)</title><rect x="592.5" y="563.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (907 samples, 0.14%)</title><rect x="592.5" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (907 samples, 0.14%)</title><rect x="592.5" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (907 samples, 0.14%)</title><rect x="592.5" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (907 samples, 0.14%)</title><rect x="592.5" y="499.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="595.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1,399 samples, 0.21%)</title><rect x="594.1" y="611.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,399 samples, 0.21%)</title><rect x="594.1" y="595.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,399 samples, 0.21%)</title><rect x="594.1" y="579.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,399 samples, 0.21%)</title><rect x="594.1" y="563.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,399 samples, 0.21%)</title><rect x="594.1" y="547.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,399 samples, 0.21%)</title><rect x="594.1" y="531.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,390 samples, 0.21%)</title><rect x="594.1" y="515.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="597.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$184/853746396.run (4,703 samples, 0.70%)</title><rect x="596.6" y="771.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (4,703 samples, 0.70%)</title><rect x="596.6" y="755.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,822 samples, 0.27%)</title><rect x="596.6" y="739.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,822 samples, 0.27%)</title><rect x="596.6" y="723.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$252/1669380854.get$Lambda (1,822 samples, 0.27%)</title><rect x="596.6" y="707.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.6" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$252 (1,822 samples, 0.27%)</title><rect x="596.6" y="691.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="599.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,880 samples, 0.43%)</title><rect x="599.8" y="739.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,880 samples, 0.43%)</title><rect x="599.8" y="723.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,880 samples, 0.43%)</title><rect x="599.8" y="707.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,867 samples, 0.43%)</title><rect x="599.8" y="691.0" width="5.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="602.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (18,434 samples, 2.76%)</title><rect x="604.9" y="787.0" width="32.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.9" y="798.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (3,079 samples, 0.46%)</title><rect x="604.9" y="771.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.9" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3,079 samples, 0.46%)</title><rect x="604.9" y="755.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.9" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3,079 samples, 0.46%)</title><rect x="604.9" y="739.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.9" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (3,079 samples, 0.46%)</title><rect x="604.9" y="723.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.9" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (3,079 samples, 0.46%)</title><rect x="604.9" y="707.0" width="5.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="607.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15,355 samples, 2.30%)</title><rect x="610.4" y="771.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.4" y="782.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,035 samples, 0.30%)</title><rect x="610.4" y="755.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,035 samples, 0.30%)</title><rect x="610.4" y="739.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$311/1255574723.get$Lambda (2,035 samples, 0.30%)</title><rect x="610.4" y="723.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$311 (2,035 samples, 0.30%)</title><rect x="610.4" y="707.0" width="3.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="613.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (4,125 samples, 0.62%)</title><rect x="613.9" y="755.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.9" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (4,125 samples, 0.62%)</title><rect x="613.9" y="739.0" width="7.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="616.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (2,035 samples, 0.30%)</title><rect x="621.2" y="755.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.2" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (2,035 samples, 0.30%)</title><rect x="621.2" y="739.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.2" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (2,035 samples, 0.30%)</title><rect x="621.2" y="723.0" width="3.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="624.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (7,160 samples, 1.07%)</title><rect x="624.8" y="755.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (3,026 samples, 0.45%)</title><rect x="624.8" y="739.0" width="5.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="627.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (4,134 samples, 0.62%)</title><rect x="630.2" y="739.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (4,134 samples, 0.62%)</title><rect x="630.2" y="723.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.2" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (4,134 samples, 0.62%)</title><rect x="630.2" y="707.0" width="7.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="633.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (10,590 samples, 1.58%)</title><rect x="637.5" y="787.0" width="18.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (963 samples, 0.14%)</title><rect x="637.5" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (963 samples, 0.14%)</title><rect x="637.5" y="755.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/387958208.get$Lambda (963 samples, 0.14%)</title><rect x="637.5" y="739.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.5" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (963 samples, 0.14%)</title><rect x="637.5" y="723.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="640.5" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5,681 samples, 0.85%)</title><rect x="639.2" y="771.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (2,360 samples, 0.35%)</title><rect x="639.2" y="755.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.2" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (2,360 samples, 0.35%)</title><rect x="639.2" y="739.0" width="4.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="642.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3,321 samples, 0.50%)</title><rect x="643.3" y="755.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.3" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3,226 samples, 0.48%)</title><rect x="643.3" y="739.0" width="5.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="646.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3,946 samples, 0.59%)</title><rect x="649.2" y="771.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (3,737 samples, 0.56%)</title><rect x="649.2" y="755.0" width="6.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="652.2" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (209 samples, 0.03%)</title><rect x="655.8" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="658.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2,173 samples, 0.33%)</title><rect x="656.2" y="787.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2,173 samples, 0.33%)</title><rect x="656.2" y="771.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2,173 samples, 0.33%)</title><rect x="656.2" y="755.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2,173 samples, 0.33%)</title><rect x="656.2" y="739.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2,173 samples, 0.33%)</title><rect x="656.2" y="723.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2,173 samples, 0.33%)</title><rect x="656.2" y="707.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2,173 samples, 0.33%)</title><rect x="656.2" y="691.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2,173 samples, 0.33%)</title><rect x="656.2" y="675.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2,173 samples, 0.33%)</title><rect x="656.2" y="659.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.2" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (2,173 samples, 0.33%)</title><rect x="656.2" y="643.0" width="3.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="659.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1,922 samples, 0.29%)</title><rect x="660.1" y="787.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,922 samples, 0.29%)</title><rect x="660.1" y="771.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,922 samples, 0.29%)</title><rect x="660.1" y="755.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.1" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,922 samples, 0.29%)</title><rect x="660.1" y="739.0" width="3.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="663.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (298,246 samples, 44.62%)</title><rect x="663.5" y="803.0" width="526.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.5" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6,871 samples, 1.03%)</title><rect x="663.5" y="787.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.5" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (6,871 samples, 1.03%)</title><rect x="663.5" y="771.0" width="12.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="666.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (291,375 samples, 43.59%)</title><rect x="675.7" y="787.0" width="514.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.7" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (291,375 samples, 43.59%)</title><rect x="675.7" y="771.0" width="514.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.7" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (291,375 samples, 43.59%)</title><rect x="675.7" y="755.0" width="514.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.7" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (135,031 samples, 20.20%)</title><rect x="675.7" y="739.0" width="238.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.7" y="750.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (135,031 samples, 20.20%)</title><rect x="675.7" y="723.0" width="238.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.7" y="734.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (8,303 samples, 1.24%)</title><rect x="675.7" y="707.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (8,303 samples, 1.24%)</title><rect x="675.7" y="691.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8,303 samples, 1.24%)</title><rect x="675.7" y="675.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.7" y="686.0"></text>
</g>
<g>
<title>java.lang.String (5,462 samples, 0.82%)</title><rect x="675.7" y="659.0" width="9.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="678.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,841 samples, 0.43%)</title><rect x="685.3" y="659.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="688.3" y="670.0"></text>
</g>
<g>
<title>byte[] (2,841 samples, 0.43%)</title><rect x="685.3" y="643.0" width="5.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="688.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (126,728 samples, 18.96%)</title><rect x="690.3" y="707.0" width="223.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.3" y="718.0">ru/mail/polis/service/Sharded..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (5,204 samples, 0.78%)</title><rect x="690.3" y="691.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,204 samples, 0.78%)</title><rect x="690.3" y="675.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,204 samples, 0.78%)</title><rect x="690.3" y="659.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (2,092 samples, 0.31%)</title><rect x="690.3" y="643.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="693.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,112 samples, 0.47%)</title><rect x="694.0" y="643.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.0" y="654.0"></text>
</g>
<g>
<title>byte[] (3,112 samples, 0.47%)</title><rect x="694.0" y="627.0" width="5.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="697.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (121,524 samples, 18.18%)</title><rect x="699.5" y="691.0" width="214.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.5" y="702.0">ru/mail/polis/service/Sharde..</text>
</g>
<g>
<title>java/lang/String.getBytes (2,387 samples, 0.36%)</title><rect x="699.5" y="675.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,387 samples, 0.36%)</title><rect x="699.5" y="659.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,387 samples, 0.36%)</title><rect x="699.5" y="643.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,387 samples, 0.36%)</title><rect x="699.5" y="627.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.5" y="638.0"></text>
</g>
<g>
<title>byte[] (2,387 samples, 0.36%)</title><rect x="699.5" y="611.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="702.5" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,069 samples, 0.76%)</title><rect x="703.7" y="675.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5,069 samples, 0.76%)</title><rect x="703.7" y="659.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.7" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,069 samples, 0.76%)</title><rect x="703.7" y="643.0" width="9.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="706.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6,328 samples, 0.95%)</title><rect x="712.7" y="675.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="715.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (6,328 samples, 0.95%)</title><rect x="712.7" y="659.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6,328 samples, 0.95%)</title><rect x="712.7" y="643.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (4,942 samples, 0.74%)</title><rect x="712.7" y="627.0" width="8.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="715.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,386 samples, 0.21%)</title><rect x="721.4" y="627.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.4" y="638.0"></text>
</g>
<g>
<title>byte[] (1,386 samples, 0.21%)</title><rect x="721.4" y="611.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5,425 samples, 0.81%)</title><rect x="723.8" y="675.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,425 samples, 0.81%)</title><rect x="723.8" y="659.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,425 samples, 0.81%)</title><rect x="723.8" y="643.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (2,269 samples, 0.34%)</title><rect x="723.8" y="627.0" width="4.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="726.8" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3,156 samples, 0.47%)</title><rect x="727.8" y="627.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.8" y="638.0"></text>
</g>
<g>
<title>byte[] (3,156 samples, 0.47%)</title><rect x="727.8" y="611.0" width="5.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="730.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.sendResponseAsync (7,796 samples, 1.17%)</title><rect x="733.4" y="675.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,906 samples, 0.29%)</title><rect x="733.4" y="659.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,906 samples, 0.29%)</title><rect x="733.4" y="643.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$142/329492948.get$Lambda (1,906 samples, 0.29%)</title><rect x="733.4" y="627.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApi$$Lambda$142 (1,906 samples, 0.29%)</title><rect x="733.4" y="611.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="736.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5,890 samples, 0.88%)</title><rect x="736.8" y="659.0" width="10.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5,890 samples, 0.88%)</title><rect x="736.8" y="643.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3,561 samples, 0.53%)</title><rect x="736.8" y="627.0" width="6.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="739.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2,329 samples, 0.35%)</title><rect x="743.1" y="627.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2,329 samples, 0.35%)</title><rect x="743.1" y="611.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="746.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (5,081 samples, 0.76%)</title><rect x="747.2" y="675.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (520 samples, 0.08%)</title><rect x="747.2" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (520 samples, 0.08%)</title><rect x="747.2" y="643.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (520 samples, 0.08%)</title><rect x="747.2" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (244 samples, 0.04%)</title><rect x="747.2" y="611.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="750.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (276 samples, 0.04%)</title><rect x="747.6" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.6" y="622.0"></text>
</g>
<g>
<title>byte[] (276 samples, 0.04%)</title><rect x="747.6" y="595.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="750.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.all (711 samples, 0.11%)</title><rect x="748.1" y="659.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.1" y="670.0"></text>
</g>
<g>
<title>java/util/Set.of (711 samples, 0.11%)</title><rect x="748.1" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.1" y="654.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (256 samples, 0.04%)</title><rect x="748.1" y="627.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="751.1" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (455 samples, 0.07%)</title><rect x="748.5" y="627.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (455 samples, 0.07%)</title><rect x="748.5" y="611.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="751.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (3,850 samples, 0.58%)</title><rect x="749.3" y="659.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="752.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (799 samples, 0.12%)</title><rect x="749.3" y="643.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.3" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (223 samples, 0.03%)</title><rect x="749.3" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.3" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (223 samples, 0.03%)</title><rect x="749.3" y="611.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="752.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (576 samples, 0.09%)</title><rect x="749.7" y="627.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.7" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (165 samples, 0.02%)</title><rect x="749.7" y="611.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="752.7" y="622.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (411 samples, 0.06%)</title><rect x="750.0" y="611.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="753.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2,773 samples, 0.41%)</title><rect x="750.7" y="643.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1,144 samples, 0.17%)</title><rect x="750.7" y="627.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1,144 samples, 0.17%)</title><rect x="750.7" y="611.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1,144 samples, 0.17%)</title><rect x="750.7" y="595.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1,144 samples, 0.17%)</title><rect x="750.7" y="579.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1,144 samples, 0.17%)</title><rect x="750.7" y="563.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,144 samples, 0.17%)</title><rect x="750.7" y="547.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,144 samples, 0.17%)</title><rect x="750.7" y="531.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (608 samples, 0.09%)</title><rect x="750.7" y="515.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="753.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (536 samples, 0.08%)</title><rect x="751.8" y="515.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.8" y="526.0"></text>
</g>
<g>
<title>byte[] (536 samples, 0.08%)</title><rect x="751.8" y="499.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="754.8" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (489 samples, 0.07%)</title><rect x="752.8" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (489 samples, 0.07%)</title><rect x="752.8" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (489 samples, 0.07%)</title><rect x="752.8" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.8" y="606.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (489 samples, 0.07%)</title><rect x="752.8" y="579.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="755.8" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (217 samples, 0.03%)</title><rect x="753.6" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="756.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (602 samples, 0.09%)</title><rect x="754.0" y="627.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (602 samples, 0.09%)</title><rect x="754.0" y="611.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (602 samples, 0.09%)</title><rect x="754.0" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (602 samples, 0.09%)</title><rect x="754.0" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (602 samples, 0.09%)</title><rect x="754.0" y="563.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="757.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (602 samples, 0.09%)</title><rect x="754.0" y="547.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="757.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (321 samples, 0.05%)</title><rect x="755.1" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="758.1" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (321 samples, 0.05%)</title><rect x="755.1" y="611.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="758.1" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.RF (278 samples, 0.04%)</title><rect x="755.6" y="643.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="758.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (81,144 samples, 12.14%)</title><rect x="756.1" y="675.0" width="143.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.1" y="686.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java.util.ArrayList (254 samples, 0.04%)</title><rect x="756.1" y="659.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="759.1" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (625 samples, 0.09%)</title><rect x="756.6" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (625 samples, 0.09%)</title><rect x="756.6" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (625 samples, 0.09%)</title><rect x="756.6" y="627.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (625 samples, 0.09%)</title><rect x="756.6" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (625 samples, 0.09%)</title><rect x="756.6" y="595.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.6" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (625 samples, 0.09%)</title><rect x="756.6" y="579.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="759.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (547 samples, 0.08%)</title><rect x="757.7" y="659.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.7" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (407 samples, 0.06%)</title><rect x="757.7" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.7" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (407 samples, 0.06%)</title><rect x="757.7" y="627.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="760.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (2,198 samples, 0.33%)</title><rect x="758.7" y="659.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashSet (200 samples, 0.03%)</title><rect x="758.7" y="643.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="761.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (606 samples, 0.09%)</title><rect x="759.0" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (606 samples, 0.09%)</title><rect x="759.0" y="627.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="762.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,392 samples, 0.21%)</title><rect x="760.1" y="643.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,392 samples, 0.21%)</title><rect x="760.1" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,392 samples, 0.21%)</title><rect x="760.1" y="611.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,027 samples, 0.15%)</title><rect x="760.1" y="595.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.1" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,027 samples, 0.15%)</title><rect x="760.1" y="579.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="763.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (365 samples, 0.05%)</title><rect x="761.9" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.9" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (365 samples, 0.05%)</title><rect x="761.9" y="579.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="764.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (260 samples, 0.04%)</title><rect x="762.5" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (260 samples, 0.04%)</title><rect x="762.5" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (260 samples, 0.04%)</title><rect x="762.5" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.get$Lambda (260 samples, 0.04%)</title><rect x="762.5" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$105 (260 samples, 0.04%)</title><rect x="762.5" y="595.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="765.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNodeAsync (71,859 samples, 10.75%)</title><rect x="763.0" y="659.0" width="126.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.0" y="670.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (478 samples, 0.07%)</title><rect x="763.0" y="643.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="766.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (287 samples, 0.04%)</title><rect x="763.8" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (287 samples, 0.04%)</title><rect x="763.8" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$135/1421739737.get$Lambda (287 samples, 0.04%)</title><rect x="763.8" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$135 (287 samples, 0.04%)</title><rect x="763.8" y="595.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="766.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,338 samples, 0.20%)</title><rect x="764.3" y="643.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,338 samples, 0.20%)</title><rect x="764.3" y="627.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (876 samples, 0.13%)</title><rect x="764.3" y="611.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="767.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (462 samples, 0.07%)</title><rect x="765.9" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="768.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (462 samples, 0.07%)</title><rect x="765.9" y="595.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="768.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (69,756 samples, 10.44%)</title><rect x="766.7" y="643.0" width="123.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.7" y="654.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.proxy (69,756 samples, 10.44%)</title><rect x="766.7" y="627.0" width="123.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="769.7" y="638.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (454 samples, 0.07%)</title><rect x="766.7" y="611.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="769.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,528 samples, 0.23%)</title><rect x="767.5" y="611.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,528 samples, 0.23%)</title><rect x="767.5" y="595.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (843 samples, 0.13%)</title><rect x="767.5" y="579.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="770.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (685 samples, 0.10%)</title><rect x="769.0" y="579.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (685 samples, 0.10%)</title><rect x="769.0" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (685 samples, 0.10%)</title><rect x="769.0" y="547.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="772.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (42,611 samples, 6.37%)</title><rect x="770.2" y="611.0" width="75.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.2" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (42,611 samples, 6.37%)</title><rect x="770.2" y="595.0" width="75.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.2" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (42,611 samples, 6.37%)</title><rect x="770.2" y="579.0" width="75.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.2" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (42,611 samples, 6.37%)</title><rect x="770.2" y="563.0" width="75.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.2" y="574.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (333 samples, 0.05%)</title><rect x="770.2" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (333 samples, 0.05%)</title><rect x="770.2" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$128/1067388313.get$Lambda (333 samples, 0.05%)</title><rect x="770.2" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$128 (333 samples, 0.05%)</title><rect x="770.2" y="499.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="773.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,552 samples, 0.23%)</title><rect x="770.8" y="547.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,552 samples, 0.23%)</title><rect x="770.8" y="531.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (893 samples, 0.13%)</title><rect x="770.8" y="515.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="773.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (659 samples, 0.10%)</title><rect x="772.4" y="515.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (659 samples, 0.10%)</title><rect x="772.4" y="499.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (659 samples, 0.10%)</title><rect x="772.4" y="483.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="775.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1,532 samples, 0.23%)</title><rect x="773.5" y="547.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,532 samples, 0.23%)</title><rect x="773.5" y="531.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (897 samples, 0.13%)</title><rect x="773.5" y="515.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="776.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (635 samples, 0.09%)</title><rect x="775.1" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (635 samples, 0.09%)</title><rect x="775.1" y="499.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (635 samples, 0.09%)</title><rect x="775.1" y="483.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="778.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (1,195 samples, 0.18%)</title><rect x="776.2" y="547.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="779.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (1,947 samples, 0.29%)</title><rect x="778.3" y="547.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="781.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (20,505 samples, 3.07%)</title><rect x="781.8" y="547.0" width="36.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.8" y="558.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2,341 samples, 0.35%)</title><rect x="781.8" y="531.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,845 samples, 0.28%)</title><rect x="781.8" y="515.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.8" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (627 samples, 0.09%)</title><rect x="781.8" y="499.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.8" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (627 samples, 0.09%)</title><rect x="781.8" y="483.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="784.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,218 samples, 0.18%)</title><rect x="782.9" y="499.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.9" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1,218 samples, 0.18%)</title><rect x="782.9" y="483.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="785.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (496 samples, 0.07%)</title><rect x="785.1" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (496 samples, 0.07%)</title><rect x="785.1" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (496 samples, 0.07%)</title><rect x="785.1" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/1836463382.get (496 samples, 0.07%)</title><rect x="785.1" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.1" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (496 samples, 0.07%)</title><rect x="785.1" y="451.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="788.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7,424 samples, 1.11%)</title><rect x="786.0" y="531.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7,424 samples, 1.11%)</title><rect x="786.0" y="515.0" width="13.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.0" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (319 samples, 0.05%)</title><rect x="786.0" y="499.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="789.0" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (524 samples, 0.08%)</title><rect x="786.5" y="499.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="789.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,061 samples, 0.16%)</title><rect x="787.5" y="499.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="790.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (327 samples, 0.05%)</title><rect x="789.3" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="792.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (670 samples, 0.10%)</title><rect x="789.9" y="499.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (670 samples, 0.10%)</title><rect x="789.9" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (670 samples, 0.10%)</title><rect x="789.9" y="467.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.9" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (670 samples, 0.10%)</title><rect x="789.9" y="451.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="792.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2,939 samples, 0.44%)</title><rect x="791.1" y="499.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,939 samples, 0.44%)</title><rect x="791.1" y="483.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (2,939 samples, 0.44%)</title><rect x="791.1" y="467.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,939 samples, 0.44%)</title><rect x="791.1" y="451.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,194 samples, 0.18%)</title><rect x="791.1" y="435.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (1,194 samples, 0.18%)</title><rect x="791.1" y="419.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,194 samples, 0.18%)</title><rect x="791.1" y="403.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,194 samples, 0.18%)</title><rect x="791.1" y="387.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,194 samples, 0.18%)</title><rect x="791.1" y="371.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,194 samples, 0.18%)</title><rect x="791.1" y="355.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,194 samples, 0.18%)</title><rect x="791.1" y="339.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,194 samples, 0.18%)</title><rect x="791.1" y="323.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,194 samples, 0.18%)</title><rect x="791.1" y="307.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="794.1" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (907 samples, 0.14%)</title><rect x="793.2" y="435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.2" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (907 samples, 0.14%)</title><rect x="793.2" y="419.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (436 samples, 0.07%)</title><rect x="793.2" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (436 samples, 0.07%)</title><rect x="793.2" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (436 samples, 0.07%)</title><rect x="793.2" y="371.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="796.2" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (471 samples, 0.07%)</title><rect x="794.0" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.0" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (471 samples, 0.07%)</title><rect x="794.0" y="387.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="797.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (838 samples, 0.13%)</title><rect x="794.8" y="435.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (838 samples, 0.13%)</title><rect x="794.8" y="419.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="797.8" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (649 samples, 0.10%)</title><rect x="796.3" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.3" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (649 samples, 0.10%)</title><rect x="796.3" y="483.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="799.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (935 samples, 0.14%)</title><rect x="797.4" y="499.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (935 samples, 0.14%)</title><rect x="797.4" y="483.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="800.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (375 samples, 0.06%)</title><rect x="799.1" y="531.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="802.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (7,514 samples, 1.12%)</title><rect x="799.7" y="531.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.7" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (7,514 samples, 1.12%)</title><rect x="799.7" y="515.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.7" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6,869 samples, 1.03%)</title><rect x="799.7" y="499.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.7" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6,869 samples, 1.03%)</title><rect x="799.7" y="483.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.7" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6,869 samples, 1.03%)</title><rect x="799.7" y="467.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.7" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1,390 samples, 0.21%)</title><rect x="799.7" y="451.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="802.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,933 samples, 0.29%)</title><rect x="802.2" y="451.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.2" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,933 samples, 0.29%)</title><rect x="802.2" y="435.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.2" y="446.0"></text>
</g>
<g>
<title>byte[] (1,933 samples, 0.29%)</title><rect x="802.2" y="419.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="805.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3,546 samples, 0.53%)</title><rect x="805.6" y="451.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,546 samples, 0.53%)</title><rect x="805.6" y="435.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,545 samples, 0.23%)</title><rect x="805.6" y="419.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="808.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,001 samples, 0.30%)</title><rect x="808.3" y="419.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.3" y="430.0"></text>
</g>
<g>
<title>byte[] (2,001 samples, 0.30%)</title><rect x="808.3" y="403.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="811.3" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (645 samples, 0.10%)</title><rect x="811.9" y="499.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="814.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,063 samples, 0.16%)</title><rect x="813.0" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,063 samples, 0.16%)</title><rect x="813.0" y="515.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="816.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,788 samples, 0.27%)</title><rect x="814.9" y="531.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (466 samples, 0.07%)</title><rect x="814.9" y="515.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="817.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (497 samples, 0.07%)</title><rect x="815.7" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (497 samples, 0.07%)</title><rect x="815.7" y="499.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="818.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (825 samples, 0.12%)</title><rect x="816.6" y="515.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (825 samples, 0.12%)</title><rect x="816.6" y="499.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="819.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (9,990 samples, 1.49%)</title><rect x="818.0" y="547.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (325 samples, 0.05%)</title><rect x="818.0" y="531.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="821.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (1,603 samples, 0.24%)</title><rect x="818.6" y="531.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="821.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (447 samples, 0.07%)</title><rect x="821.4" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (447 samples, 0.07%)</title><rect x="821.4" y="515.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="824.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (7,615 samples, 1.14%)</title><rect x="822.2" y="531.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7,615 samples, 1.14%)</title><rect x="822.2" y="515.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Class[] (623 samples, 0.09%)</title><rect x="822.2" y="499.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (650 samples, 0.10%)</title><rect x="823.3" y="499.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="826.3" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (642 samples, 0.10%)</title><rect x="824.5" y="499.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="827.5" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3,497 samples, 0.52%)</title><rect x="825.6" y="499.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (3,497 samples, 0.52%)</title><rect x="825.6" y="483.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.6" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (3,497 samples, 0.52%)</title><rect x="825.6" y="467.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.6" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (3,497 samples, 0.52%)</title><rect x="825.6" y="451.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.6" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (3,492 samples, 0.52%)</title><rect x="825.6" y="435.0" width="6.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="828.6" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1,174 samples, 0.18%)</title><rect x="831.8" y="499.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1,174 samples, 0.18%)</title><rect x="831.8" y="483.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (315 samples, 0.05%)</title><rect x="831.8" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (315 samples, 0.05%)</title><rect x="831.8" y="451.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="834.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (859 samples, 0.13%)</title><rect x="832.3" y="467.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (859 samples, 0.13%)</title><rect x="832.3" y="451.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="835.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1,029 samples, 0.15%)</title><rect x="833.8" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1,029 samples, 0.15%)</title><rect x="833.8" y="483.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1,029 samples, 0.15%)</title><rect x="833.8" y="467.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="836.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5,529 samples, 0.83%)</title><rect x="835.7" y="547.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (987 samples, 0.15%)</title><rect x="835.7" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (440 samples, 0.07%)</title><rect x="835.7" y="515.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="838.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (547 samples, 0.08%)</title><rect x="836.4" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (547 samples, 0.08%)</title><rect x="836.4" y="499.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (536 samples, 0.08%)</title><rect x="836.4" y="483.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="839.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (646 samples, 0.10%)</title><rect x="837.4" y="531.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="840.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3,896 samples, 0.58%)</title><rect x="838.5" y="531.0" width="6.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (681 samples, 0.10%)</title><rect x="838.5" y="515.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (681 samples, 0.10%)</title><rect x="838.5" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/1345656667.get$Lambda (356 samples, 0.05%)</title><rect x="838.5" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$122 (356 samples, 0.05%)</title><rect x="838.5" y="467.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="841.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.get$Lambda (325 samples, 0.05%)</title><rect x="839.2" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$125 (325 samples, 0.05%)</title><rect x="839.2" y="467.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="842.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,215 samples, 0.48%)</title><rect x="839.7" y="515.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,215 samples, 0.48%)</title><rect x="839.7" y="499.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,831 samples, 0.27%)</title><rect x="839.7" y="483.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="842.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,384 samples, 0.21%)</title><rect x="843.0" y="483.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,384 samples, 0.21%)</title><rect x="843.0" y="467.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,384 samples, 0.21%)</title><rect x="843.0" y="451.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="846.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.createRequest (24,801 samples, 3.71%)</title><rect x="845.4" y="611.0" width="43.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.4" y="622.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,977 samples, 0.30%)</title><rect x="845.4" y="595.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1049817027.invoke (1,977 samples, 0.30%)</title><rect x="845.4" y="579.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,977 samples, 0.30%)</title><rect x="845.4" y="563.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (497 samples, 0.07%)</title><rect x="845.4" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (497 samples, 0.07%)</title><rect x="845.4" y="531.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="848.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,480 samples, 0.22%)</title><rect x="846.3" y="547.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,480 samples, 0.22%)</title><rect x="846.3" y="531.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.3" y="542.0"></text>
</g>
<g>
<title>byte[] (1,480 samples, 0.22%)</title><rect x="846.3" y="515.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="849.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (8,365 samples, 1.25%)</title><rect x="848.9" y="595.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.9" y="606.0"></text>
</g>
<g>
<title>java.net.URI (1,775 samples, 0.27%)</title><rect x="848.9" y="579.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="851.9" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (6,590 samples, 0.99%)</title><rect x="852.0" y="579.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.0" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (646 samples, 0.10%)</title><rect x="852.0" y="563.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="855.0" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (5,944 samples, 0.89%)</title><rect x="853.2" y="563.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,019 samples, 0.15%)</title><rect x="853.2" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,019 samples, 0.15%)</title><rect x="853.2" y="531.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (558 samples, 0.08%)</title><rect x="853.2" y="515.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="856.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (461 samples, 0.07%)</title><rect x="854.2" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.2" y="526.0"></text>
</g>
<g>
<title>byte[] (461 samples, 0.07%)</title><rect x="854.2" y="499.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="857.2" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (4,925 samples, 0.74%)</title><rect x="855.0" y="547.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,487 samples, 0.37%)</title><rect x="855.0" y="531.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,487 samples, 0.37%)</title><rect x="855.0" y="515.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1,053 samples, 0.16%)</title><rect x="855.0" y="499.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="858.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,434 samples, 0.21%)</title><rect x="856.8" y="499.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="859.8" y="510.0"></text>
</g>
<g>
<title>byte[] (1,434 samples, 0.21%)</title><rect x="856.8" y="483.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="859.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (2,438 samples, 0.36%)</title><rect x="859.4" y="531.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="862.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,265 samples, 0.19%)</title><rect x="859.4" y="515.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,265 samples, 0.19%)</title><rect x="859.4" y="499.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (582 samples, 0.09%)</title><rect x="859.4" y="483.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="862.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (683 samples, 0.10%)</title><rect x="860.4" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.4" y="494.0"></text>
</g>
<g>
<title>byte[] (683 samples, 0.10%)</title><rect x="860.4" y="467.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="863.4" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1,173 samples, 0.18%)</title><rect x="861.6" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.6" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1,173 samples, 0.18%)</title><rect x="861.6" y="499.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="864.6" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,173 samples, 0.18%)</title><rect x="861.6" y="483.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,173 samples, 0.18%)</title><rect x="861.6" y="467.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (552 samples, 0.08%)</title><rect x="861.6" y="451.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="864.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (621 samples, 0.09%)</title><rect x="862.6" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.6" y="462.0"></text>
</g>
<g>
<title>byte[] (621 samples, 0.09%)</title><rect x="862.6" y="435.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="865.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (686 samples, 0.10%)</title><rect x="863.7" y="595.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (686 samples, 0.10%)</title><rect x="863.7" y="579.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="866.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2,209 samples, 0.33%)</title><rect x="864.9" y="595.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (860 samples, 0.13%)</title><rect x="864.9" y="579.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="867.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1,349 samples, 0.20%)</title><rect x="866.4" y="579.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (333 samples, 0.05%)</title><rect x="866.4" y="563.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="869.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1,016 samples, 0.15%)</title><rect x="867.0" y="563.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,016 samples, 0.15%)</title><rect x="867.0" y="547.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="870.0" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.of (584 samples, 0.09%)</title><rect x="868.8" y="595.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.8" y="606.0"></text>
</g>
<g>
<title>java/time/Duration.plus (584 samples, 0.09%)</title><rect x="868.8" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.8" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.plusMillis (584 samples, 0.09%)</title><rect x="868.8" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="871.8" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.plus (584 samples, 0.09%)</title><rect x="868.8" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.8" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (584 samples, 0.09%)</title><rect x="868.8" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.8" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.create (584 samples, 0.09%)</title><rect x="868.8" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.8" y="526.0"></text>
</g>
<g>
<title>java.time.Duration (584 samples, 0.09%)</title><rect x="868.8" y="499.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="871.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (9,109 samples, 1.36%)</title><rect x="869.8" y="595.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (770 samples, 0.12%)</title><rect x="869.8" y="579.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="872.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (8,339 samples, 1.25%)</title><rect x="871.2" y="579.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="874.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7,717 samples, 1.15%)</title><rect x="871.2" y="563.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7,717 samples, 1.15%)</title><rect x="871.2" y="547.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.2" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (415 samples, 0.06%)</title><rect x="871.2" y="531.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="874.2" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (483 samples, 0.07%)</title><rect x="871.9" y="531.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="874.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,105 samples, 0.17%)</title><rect x="872.8" y="531.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="875.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (336 samples, 0.05%)</title><rect x="874.7" y="531.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="877.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (648 samples, 0.10%)</title><rect x="875.3" y="531.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (648 samples, 0.10%)</title><rect x="875.3" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (648 samples, 0.10%)</title><rect x="875.3" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.3" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (648 samples, 0.10%)</title><rect x="875.3" y="483.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="878.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (659 samples, 0.10%)</title><rect x="876.5" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="879.5" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (659 samples, 0.10%)</title><rect x="876.5" y="515.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="879.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3,024 samples, 0.45%)</title><rect x="877.6" y="531.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (3,024 samples, 0.45%)</title><rect x="877.6" y="515.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,024 samples, 0.45%)</title><rect x="877.6" y="499.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="880.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,202 samples, 0.18%)</title><rect x="877.6" y="483.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (1,202 samples, 0.18%)</title><rect x="877.6" y="467.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="880.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,202 samples, 0.18%)</title><rect x="877.6" y="451.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,202 samples, 0.18%)</title><rect x="877.6" y="435.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="880.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,202 samples, 0.18%)</title><rect x="877.6" y="419.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,202 samples, 0.18%)</title><rect x="877.6" y="403.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,202 samples, 0.18%)</title><rect x="877.6" y="387.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,202 samples, 0.18%)</title><rect x="877.6" y="371.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,202 samples, 0.18%)</title><rect x="877.6" y="355.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="880.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (978 samples, 0.15%)</title><rect x="879.7" y="483.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.7" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (978 samples, 0.15%)</title><rect x="879.7" y="467.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (492 samples, 0.07%)</title><rect x="879.7" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (492 samples, 0.07%)</title><rect x="879.7" y="435.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (492 samples, 0.07%)</title><rect x="879.7" y="419.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="882.7" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (486 samples, 0.07%)</title><rect x="880.6" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.6" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (486 samples, 0.07%)</title><rect x="880.6" y="435.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="883.6" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (844 samples, 0.13%)</title><rect x="881.5" y="483.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (844 samples, 0.13%)</title><rect x="881.5" y="467.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="884.5" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1,047 samples, 0.16%)</title><rect x="883.0" y="531.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="886.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (1,047 samples, 0.16%)</title><rect x="883.0" y="515.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="886.0" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (622 samples, 0.09%)</title><rect x="884.8" y="563.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.8" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (622 samples, 0.09%)</title><rect x="884.8" y="547.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.8" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (622 samples, 0.09%)</title><rect x="884.8" y="531.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="887.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (1,871 samples, 0.28%)</title><rect x="885.9" y="595.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (1,871 samples, 0.28%)</title><rect x="885.9" y="579.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (1,871 samples, 0.28%)</title><rect x="885.9" y="563.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.9" y="574.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (1,871 samples, 0.28%)</title><rect x="885.9" y="547.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (885 samples, 0.13%)</title><rect x="885.9" y="531.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.9" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (885 samples, 0.13%)</title><rect x="885.9" y="515.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="888.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$109/1115088082.apply (986 samples, 0.15%)</title><rect x="887.5" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (986 samples, 0.15%)</title><rect x="887.5" y="515.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.5" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (470 samples, 0.07%)</title><rect x="887.5" y="499.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="890.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (516 samples, 0.08%)</title><rect x="888.3" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (516 samples, 0.08%)</title><rect x="888.3" y="483.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="891.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.getEmptyBodyResponseHandler (362 samples, 0.05%)</title><rect x="889.2" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (362 samples, 0.05%)</title><rect x="889.2" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (362 samples, 0.05%)</title><rect x="889.2" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.get$Lambda (362 samples, 0.05%)</title><rect x="889.2" y="563.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClient$$Lambda$133 (362 samples, 0.05%)</title><rect x="889.2" y="547.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="892.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocallyAsync (768 samples, 0.11%)</title><rect x="889.8" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (233 samples, 0.03%)</title><rect x="889.8" y="643.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="892.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (263 samples, 0.04%)</title><rect x="890.3" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (263 samples, 0.04%)</title><rect x="890.3" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$107/373692322.get$Lambda (263 samples, 0.04%)</title><rect x="890.3" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$107 (263 samples, 0.04%)</title><rect x="890.3" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="893.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (272 samples, 0.04%)</title><rect x="890.7" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (272 samples, 0.04%)</title><rect x="890.7" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (266 samples, 0.04%)</title><rect x="890.7" y="611.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="893.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponsesAsync (4,633 samples, 0.69%)</title><rect x="891.2" y="659.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.2" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (244 samples, 0.04%)</title><rect x="891.2" y="643.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="894.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1815611058.linkToTargetMethod (457 samples, 0.07%)</title><rect x="891.6" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/455680542.invokeStatic (457 samples, 0.07%)</title><rect x="891.6" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.get$Lambda (457 samples, 0.07%)</title><rect x="891.6" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$141 (457 samples, 0.07%)</title><rect x="891.6" y="595.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="894.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (738 samples, 0.11%)</title><rect x="892.4" y="643.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (738 samples, 0.11%)</title><rect x="892.4" y="627.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (456 samples, 0.07%)</title><rect x="892.4" y="611.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="895.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (282 samples, 0.04%)</title><rect x="893.2" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (282 samples, 0.04%)</title><rect x="893.2" y="595.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="896.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.firstN (3,194 samples, 0.48%)</title><rect x="893.7" y="643.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.7" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (210 samples, 0.03%)</title><rect x="893.7" y="627.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="896.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (206 samples, 0.03%)</title><rect x="894.1" y="627.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="897.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (156 samples, 0.02%)</title><rect x="894.5" y="627.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="897.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (309 samples, 0.05%)</title><rect x="894.7" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.7" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (309 samples, 0.05%)</title><rect x="894.7" y="611.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="897.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2,003 samples, 0.30%)</title><rect x="895.3" y="627.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2,003 samples, 0.30%)</title><rect x="895.3" y="611.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1,256 samples, 0.19%)</title><rect x="895.3" y="595.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="898.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (747 samples, 0.11%)</title><rect x="897.5" y="595.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (747 samples, 0.11%)</title><rect x="897.5" y="579.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="900.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.getResultHandler (310 samples, 0.05%)</title><rect x="898.8" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1238248940.linkToTargetMethod (310 samples, 0.05%)</title><rect x="898.8" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1831735832.invokeStatic (310 samples, 0.05%)</title><rect x="898.8" y="595.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.get$Lambda (310 samples, 0.05%)</title><rect x="898.8" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.8" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ExtendedCompletableFuture$$Lambda$138 (310 samples, 0.05%)</title><rect x="898.8" y="563.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="901.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (8,294 samples, 1.24%)</title><rect x="899.4" y="675.0" width="14.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.4" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2,112 samples, 0.32%)</title><rect x="899.4" y="659.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="902.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,228 samples, 0.33%)</title><rect x="903.1" y="659.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,228 samples, 0.33%)</title><rect x="903.1" y="643.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$277/1271947751.get$Lambda (2,228 samples, 0.33%)</title><rect x="903.1" y="627.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.1" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$277 (2,228 samples, 0.33%)</title><rect x="903.1" y="611.0" width="3.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="906.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,939 samples, 0.29%)</title><rect x="907.0" y="659.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,939 samples, 0.29%)</title><rect x="907.0" y="643.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,924 samples, 0.29%)</title><rect x="907.0" y="627.0" width="3.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="910.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (2,015 samples, 0.30%)</title><rect x="910.5" y="659.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,015 samples, 0.30%)</title><rect x="910.5" y="643.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,015 samples, 0.30%)</title><rect x="910.5" y="627.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.get$Lambda (2,015 samples, 0.30%)</title><rect x="910.5" y="611.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$105 (2,015 samples, 0.30%)</title><rect x="910.5" y="595.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="913.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (34,894 samples, 5.22%)</title><rect x="914.0" y="739.0" width="61.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.0" y="750.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (4,380 samples, 0.66%)</title><rect x="914.0" y="723.0" width="7.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="917.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7,383 samples, 1.10%)</title><rect x="921.7" y="723.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="924.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (6,654 samples, 1.00%)</title><rect x="921.7" y="707.0" width="11.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="924.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (729 samples, 0.11%)</title><rect x="933.5" y="707.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="936.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,131 samples, 3.46%)</title><rect x="934.8" y="723.0" width="40.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.8" y="734.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,131 samples, 3.46%)</title><rect x="934.8" y="707.0" width="40.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.8" y="718.0">one..</text>
</g>
<g>
<title>char[] (13,061 samples, 1.95%)</title><rect x="934.8" y="691.0" width="23.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="937.8" y="702.0">c..</text>
</g>
<g>
<title>char[] (1,206 samples, 0.18%)</title><rect x="957.8" y="691.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="960.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String (2,623 samples, 0.39%)</title><rect x="960.0" y="691.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="963.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,241 samples, 0.93%)</title><rect x="964.6" y="691.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,241 samples, 0.93%)</title><rect x="964.6" y="675.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,241 samples, 0.93%)</title><rect x="964.6" y="659.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.6" y="670.0"></text>
</g>
<g>
<title>byte[] (6,220 samples, 0.93%)</title><rect x="964.6" y="643.0" width="11.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="967.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3,339 samples, 0.50%)</title><rect x="975.6" y="739.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="978.6" y="750.0"></text>
</g>
<g>
<title>byte[] (3,339 samples, 0.50%)</title><rect x="975.6" y="723.0" width="5.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="978.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,902 samples, 0.58%)</title><rect x="981.5" y="739.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="984.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,902 samples, 0.58%)</title><rect x="981.5" y="723.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="984.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,902 samples, 0.58%)</title><rect x="981.5" y="707.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (2,295 samples, 0.34%)</title><rect x="981.5" y="691.0" width="4.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="984.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,607 samples, 0.24%)</title><rect x="985.6" y="691.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.6" y="702.0"></text>
</g>
<g>
<title>byte[] (1,607 samples, 0.24%)</title><rect x="985.6" y="675.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="988.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (114,209 samples, 17.09%)</title><rect x="988.4" y="739.0" width="201.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.4" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (114,209 samples, 17.09%)</title><rect x="988.4" y="723.0" width="201.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.4" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (47,762 samples, 7.15%)</title><rect x="988.4" y="707.0" width="84.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="991.4" y="718.0">char[]</text>
</g>
<g>
<title>char[] (8,713 samples, 1.30%)</title><rect x="1072.7" y="707.0" width="15.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1075.7" y="718.0"></text>
</g>
<g>
<title>java.lang.String (16,491 samples, 2.47%)</title><rect x="1088.1" y="707.0" width="29.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1091.1" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41,243 samples, 6.17%)</title><rect x="1117.2" y="707.0" width="72.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.2" y="718.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41,243 samples, 6.17%)</title><rect x="1117.2" y="691.0" width="72.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1120.2" y="702.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (41,243 samples, 6.17%)</title><rect x="1117.2" y="675.0" width="72.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.2" y="686.0">java/lan..</text>
</g>
<g>
<title>byte[] (40,643 samples, 6.08%)</title><rect x="1117.2" y="659.0" width="71.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1120.2" y="670.0">byte[]</text>
</g>
<g>
<title>byte[] (600 samples, 0.09%)</title><rect x="1188.9" y="659.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.9" y="670.0"></text>
</g>
</g>
</svg>
