<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (45,745 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (27,060 samples, 59.15%)</title><rect x="10.0" y="851.0" width="698.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (27,060 samples, 59.15%)</title><rect x="10.0" y="835.0" width="698.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (27,060 samples, 59.15%)</title><rect x="10.0" y="819.0" width="698.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8,332 samples, 18.21%)</title><rect x="10.0" y="803.0" width="214.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,332 samples, 18.21%)</title><rect x="10.0" y="787.0" width="214.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,332 samples, 18.21%)</title><rect x="10.0" y="771.0" width="214.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$124/1746722692.apply (8,331 samples, 18.21%)</title><rect x="10.0" y="755.0" width="214.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiE..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (8,331 samples, 18.21%)</title><rect x="10.0" y="739.0" width="214.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiE..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (8,331 samples, 18.21%)</title><rect x="10.0" y="723.0" width="214.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/MultiE..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (5,287 samples, 11.56%)</title><rect x="10.0" y="707.0" width="136.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (5,287 samples, 11.56%)</title><rect x="10.0" y="691.0" width="136.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (5,287 samples, 11.56%)</title><rect x="10.0" y="675.0" width="136.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,068 samples, 11.08%)</title><rect x="10.0" y="659.0" width="130.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,068 samples, 11.08%)</title><rect x="10.0" y="643.0" width="130.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,068 samples, 11.08%)</title><rect x="10.0" y="627.0" width="130.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$203/505924666.apply (5,068 samples, 11.08%)</title><rect x="10.0" y="611.0" width="130.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,068 samples, 11.08%)</title><rect x="10.0" y="595.0" width="130.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,068 samples, 11.08%)</title><rect x="10.0" y="579.0" width="130.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/544549740.apply (5,068 samples, 11.08%)</title><rect x="10.0" y="563.0" width="130.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,068 samples, 11.08%)</title><rect x="10.0" y="547.0" width="130.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (5,068 samples, 11.08%)</title><rect x="10.0" y="531.0" width="130.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5,068 samples, 11.08%)</title><rect x="10.0" y="515.0" width="130.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5,068 samples, 11.08%)</title><rect x="10.0" y="499.0" width="130.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$231/1123664723.apply (5,068 samples, 11.08%)</title><rect x="10.0" y="483.0" width="130.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (5,068 samples, 11.08%)</title><rect x="10.0" y="467.0" width="130.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (5,068 samples, 11.08%)</title><rect x="10.0" y="451.0" width="130.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5,068 samples, 11.08%)</title><rect x="10.0" y="435.0" width="130.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,152 samples, 2.52%)</title><rect x="10.0" y="419.0" width="29.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,152 samples, 2.52%)</title><rect x="10.0" y="403.0" width="29.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,152 samples, 2.52%)</title><rect x="10.0" y="387.0" width="29.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="398.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,152 samples, 2.52%)</title><rect x="10.0" y="371.0" width="29.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="382.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,152 samples, 2.52%)</title><rect x="10.0" y="355.0" width="29.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="366.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (239 samples, 0.52%)</title><rect x="10.0" y="339.0" width="6.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (913 samples, 2.00%)</title><rect x="16.2" y="339.0" width="23.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.2" y="350.0">s..</text>
</g>
<g>
<title>java.lang.Object (913 samples, 2.00%)</title><rect x="16.2" y="323.0" width="23.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.2" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3,916 samples, 8.56%)</title><rect x="39.7" y="419.0" width="101.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.7" y="430.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3,916 samples, 8.56%)</title><rect x="39.7" y="403.0" width="101.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.7" y="414.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (3,914 samples, 8.56%)</title><rect x="39.7" y="387.0" width="101.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.7" y="398.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3,914 samples, 8.56%)</title><rect x="39.7" y="371.0" width="101.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.7" y="382.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,914 samples, 8.56%)</title><rect x="39.7" y="355.0" width="101.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.7" y="366.0">jdk/internal..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,411 samples, 5.27%)</title><rect x="39.7" y="339.0" width="62.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="42.7" y="350.0">jdk.in..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,503 samples, 3.29%)</title><rect x="101.9" y="339.0" width="38.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.9" y="350.0">sun..</text>
</g>
<g>
<title>java.lang.Object (1,503 samples, 3.29%)</title><rect x="101.9" y="323.0" width="38.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="104.9" y="334.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (219 samples, 0.48%)</title><rect x="140.7" y="659.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (219 samples, 0.48%)</title><rect x="140.7" y="643.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (199 samples, 0.44%)</title><rect x="140.7" y="627.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (199 samples, 0.44%)</title><rect x="140.7" y="611.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (199 samples, 0.44%)</title><rect x="140.7" y="595.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$153/493368255.apply (199 samples, 0.44%)</title><rect x="140.7" y="579.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (199 samples, 0.44%)</title><rect x="140.7" y="563.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (199 samples, 0.44%)</title><rect x="140.7" y="547.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (199 samples, 0.44%)</title><rect x="140.7" y="531.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (199 samples, 0.44%)</title><rect x="140.7" y="515.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (198 samples, 0.43%)</title><rect x="140.7" y="499.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (198 samples, 0.43%)</title><rect x="140.7" y="483.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (198 samples, 0.43%)</title><rect x="140.7" y="467.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="143.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (20 samples, 0.04%)</title><rect x="145.9" y="627.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (20 samples, 0.04%)</title><rect x="145.9" y="611.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="148.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (2,899 samples, 6.34%)</title><rect x="146.4" y="707.0" width="74.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.4" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (898 samples, 1.96%)</title><rect x="146.4" y="691.0" width="23.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="149.4" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2,001 samples, 4.37%)</title><rect x="169.5" y="691.0" width="51.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.5" y="702.0">jdk/i..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,001 samples, 4.37%)</title><rect x="169.5" y="675.0" width="51.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.5" y="686.0">sun/n..</text>
</g>
<g>
<title>java.lang.Object (2,001 samples, 4.37%)</title><rect x="169.5" y="659.0" width="51.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="172.5" y="670.0">java...</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (145 samples, 0.32%)</title><rect x="221.2" y="707.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (145 samples, 0.32%)</title><rect x="221.2" y="691.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (142 samples, 0.31%)</title><rect x="221.2" y="675.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.2" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (142 samples, 0.31%)</title><rect x="221.2" y="659.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="224.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9,239 samples, 20.20%)</title><rect x="224.9" y="803.0" width="238.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.9" y="814.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9,239 samples, 20.20%)</title><rect x="224.9" y="787.0" width="238.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.9" y="798.0">java/util/concurrent/LinkedBlock..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,001 samples, 4.37%)</title><rect x="224.9" y="771.0" width="51.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.9" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,001 samples, 4.37%)</title><rect x="224.9" y="755.0" width="51.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.9" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,001 samples, 4.37%)</title><rect x="224.9" y="739.0" width="51.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.9" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,001 samples, 4.37%)</title><rect x="224.9" y="723.0" width="51.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.9" y="734.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,001 samples, 4.37%)</title><rect x="224.9" y="707.0" width="51.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.9" y="718.0">jdk/i..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,001 samples, 4.37%)</title><rect x="224.9" y="691.0" width="51.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="227.9" y="702.0">java...</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7,238 samples, 15.82%)</title><rect x="276.5" y="771.0" width="186.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.5" y="782.0">java/util/concurrent/loc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (7,238 samples, 15.82%)</title><rect x="276.5" y="755.0" width="186.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.5" y="766.0">java/util/concurrent/loc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (7,238 samples, 15.82%)</title><rect x="276.5" y="739.0" width="186.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.5" y="750.0">java/util/concurrent/loc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7,238 samples, 15.82%)</title><rect x="276.5" y="723.0" width="186.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.5" y="734.0">java/util/concurrent/loc..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7,238 samples, 15.82%)</title><rect x="276.5" y="707.0" width="186.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.5" y="718.0">java/util/concurrent/loc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7,238 samples, 15.82%)</title><rect x="276.5" y="691.0" width="186.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.5" y="702.0">jdk/internal/misc/Unsafe..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (7,238 samples, 15.82%)</title><rect x="276.5" y="675.0" width="186.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="279.5" y="686.0">java.util.concurrent.loc..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$249/1883349404.run (41 samples, 0.09%)</title><rect x="463.2" y="803.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (41 samples, 0.09%)</title><rect x="463.2" y="787.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (41 samples, 0.09%)</title><rect x="463.2" y="771.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (41 samples, 0.09%)</title><rect x="463.2" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (41 samples, 0.09%)</title><rect x="463.2" y="739.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (41 samples, 0.09%)</title><rect x="463.2" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 0.09%)</title><rect x="463.2" y="707.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (41 samples, 0.09%)</title><rect x="463.2" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (41 samples, 0.09%)</title><rect x="463.2" y="675.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (41 samples, 0.09%)</title><rect x="463.2" y="659.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (41 samples, 0.09%)</title><rect x="463.2" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (41 samples, 0.09%)</title><rect x="463.2" y="627.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (41 samples, 0.09%)</title><rect x="463.2" y="611.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 0.09%)</title><rect x="463.2" y="595.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (41 samples, 0.09%)</title><rect x="463.2" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 0.09%)</title><rect x="463.2" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (38 samples, 0.08%)</title><rect x="463.2" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/323025519.apply (37 samples, 0.08%)</title><rect x="463.3" y="531.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (37 samples, 0.08%)</title><rect x="463.3" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (37 samples, 0.08%)</title><rect x="463.3" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (37 samples, 0.08%)</title><rect x="463.3" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (37 samples, 0.08%)</title><rect x="463.3" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (37 samples, 0.08%)</title><rect x="463.3" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/173598784.run (37 samples, 0.08%)</title><rect x="463.3" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (37 samples, 0.08%)</title><rect x="463.3" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (37 samples, 0.08%)</title><rect x="463.3" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (37 samples, 0.08%)</title><rect x="463.3" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (37 samples, 0.08%)</title><rect x="463.3" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (37 samples, 0.08%)</title><rect x="463.3" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (37 samples, 0.08%)</title><rect x="463.3" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (37 samples, 0.08%)</title><rect x="463.3" y="323.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (37 samples, 0.08%)</title><rect x="463.3" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (37 samples, 0.08%)</title><rect x="463.3" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (37 samples, 0.08%)</title><rect x="463.3" y="275.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (37 samples, 0.08%)</title><rect x="463.3" y="259.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (37 samples, 0.08%)</title><rect x="463.3" y="243.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1257117945.run (37 samples, 0.08%)</title><rect x="463.3" y="227.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (37 samples, 0.08%)</title><rect x="463.3" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (37 samples, 0.08%)</title><rect x="463.3" y="195.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (37 samples, 0.08%)</title><rect x="463.3" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (37 samples, 0.08%)</title><rect x="463.3" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (34 samples, 0.07%)</title><rect x="463.4" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (34 samples, 0.07%)</title><rect x="463.4" y="131.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.06%)</title><rect x="463.6" y="115.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.06%)</title><rect x="463.6" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (26 samples, 0.06%)</title><rect x="463.6" y="83.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (26 samples, 0.06%)</title><rect x="463.6" y="67.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26 samples, 0.06%)</title><rect x="463.6" y="51.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.6" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (18 samples, 0.04%)</title><rect x="463.6" y="35.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="466.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9,448 samples, 20.65%)</title><rect x="464.3" y="803.0" width="243.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.3" y="814.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9,448 samples, 20.65%)</title><rect x="464.3" y="787.0" width="243.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.3" y="798.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,704 samples, 8.10%)</title><rect x="464.3" y="771.0" width="95.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.3" y="782.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (3,704 samples, 8.10%)</title><rect x="464.3" y="755.0" width="95.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.3" y="766.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,704 samples, 8.10%)</title><rect x="464.3" y="739.0" width="95.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.3" y="750.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2,965 samples, 6.48%)</title><rect x="464.3" y="723.0" width="76.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.3" y="734.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2,965 samples, 6.48%)</title><rect x="464.3" y="707.0" width="76.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.3" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2,965 samples, 6.48%)</title><rect x="464.3" y="691.0" width="76.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.3" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2,965 samples, 6.48%)</title><rect x="464.3" y="675.0" width="76.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.3" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2,965 samples, 6.48%)</title><rect x="464.3" y="659.0" width="76.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.3" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2,965 samples, 6.48%)</title><rect x="464.3" y="643.0" width="76.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.3" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2,965 samples, 6.48%)</title><rect x="464.3" y="627.0" width="76.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.3" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2,965 samples, 6.48%)</title><rect x="464.3" y="611.0" width="76.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.3" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,965 samples, 6.48%)</title><rect x="464.3" y="595.0" width="76.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.3" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,041 samples, 4.46%)</title><rect x="464.3" y="579.0" width="52.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="467.3" y="590.0">jdk.i..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (924 samples, 2.02%)</title><rect x="517.0" y="579.0" width="23.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.0" y="590.0">s..</text>
</g>
<g>
<title>java.lang.Object (924 samples, 2.02%)</title><rect x="517.0" y="563.0" width="23.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="520.0" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (739 samples, 1.62%)</title><rect x="540.8" y="723.0" width="19.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (739 samples, 1.62%)</title><rect x="540.8" y="707.0" width="19.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (739 samples, 1.62%)</title><rect x="540.8" y="691.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (739 samples, 1.62%)</title><rect x="540.8" y="675.0" width="19.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (739 samples, 1.62%)</title><rect x="540.8" y="659.0" width="19.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (739 samples, 1.62%)</title><rect x="540.8" y="643.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (739 samples, 1.62%)</title><rect x="540.8" y="627.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (739 samples, 1.62%)</title><rect x="540.8" y="611.0" width="19.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (739 samples, 1.62%)</title><rect x="540.8" y="595.0" width="19.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (739 samples, 1.62%)</title><rect x="540.8" y="579.0" width="19.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (739 samples, 1.62%)</title><rect x="540.8" y="563.0" width="19.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (739 samples, 1.62%)</title><rect x="540.8" y="547.0" width="19.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (739 samples, 1.62%)</title><rect x="540.8" y="531.0" width="19.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (99 samples, 0.22%)</title><rect x="540.8" y="515.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$238/1134623909.apply (99 samples, 0.22%)</title><rect x="540.8" y="499.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (99 samples, 0.22%)</title><rect x="540.8" y="483.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (99 samples, 0.22%)</title><rect x="540.8" y="467.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (99 samples, 0.22%)</title><rect x="540.8" y="451.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (99 samples, 0.22%)</title><rect x="540.8" y="435.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (99 samples, 0.22%)</title><rect x="540.8" y="419.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="543.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (640 samples, 1.40%)</title><rect x="543.3" y="515.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (640 samples, 1.40%)</title><rect x="543.3" y="499.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$239/1779741848.apply (640 samples, 1.40%)</title><rect x="543.3" y="483.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (640 samples, 1.40%)</title><rect x="543.3" y="467.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (640 samples, 1.40%)</title><rect x="543.3" y="451.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (640 samples, 1.40%)</title><rect x="543.3" y="435.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (640 samples, 1.40%)</title><rect x="543.3" y="419.0" width="16.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="546.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5,744 samples, 12.56%)</title><rect x="559.8" y="771.0" width="148.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.8" y="782.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,744 samples, 12.56%)</title><rect x="559.8" y="755.0" width="148.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.8" y="766.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,744 samples, 12.56%)</title><rect x="559.8" y="739.0" width="148.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.8" y="750.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$194/1255567114.run (5,744 samples, 12.56%)</title><rect x="559.8" y="723.0" width="148.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.8" y="734.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,744 samples, 12.56%)</title><rect x="559.8" y="707.0" width="148.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.8" y="718.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5,737 samples, 12.54%)</title><rect x="559.8" y="691.0" width="148.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.8" y="702.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5,737 samples, 12.54%)</title><rect x="559.8" y="675.0" width="148.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.8" y="686.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5,737 samples, 12.54%)</title><rect x="559.8" y="659.0" width="148.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.8" y="670.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1257117945.run (5,737 samples, 12.54%)</title><rect x="559.8" y="643.0" width="148.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.8" y="654.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5,737 samples, 12.54%)</title><rect x="559.8" y="627.0" width="148.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="638.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5,737 samples, 12.54%)</title><rect x="559.8" y="611.0" width="148.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.8" y="622.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,737 samples, 12.54%)</title><rect x="559.8" y="595.0" width="148.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.8" y="606.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,737 samples, 12.54%)</title><rect x="559.8" y="579.0" width="148.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.8" y="590.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (184 samples, 0.40%)</title><rect x="559.8" y="563.0" width="4.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="562.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (5,553 samples, 12.14%)</title><rect x="564.6" y="563.0" width="143.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.6" y="574.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5,553 samples, 12.14%)</title><rect x="564.6" y="547.0" width="143.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.6" y="558.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,317 samples, 2.88%)</title><rect x="564.6" y="531.0" width="34.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.6" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,317 samples, 2.88%)</title><rect x="564.6" y="515.0" width="34.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.6" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,317 samples, 2.88%)</title><rect x="564.6" y="499.0" width="34.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,317 samples, 2.88%)</title><rect x="564.6" y="483.0" width="34.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.6" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,317 samples, 2.88%)</title><rect x="564.6" y="467.0" width="34.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.6" y="478.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (378 samples, 0.83%)</title><rect x="564.6" y="451.0" width="9.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="567.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (939 samples, 2.05%)</title><rect x="574.3" y="451.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.3" y="462.0">s..</text>
</g>
<g>
<title>java.lang.Object (939 samples, 2.05%)</title><rect x="574.3" y="435.0" width="24.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="577.3" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4,236 samples, 9.26%)</title><rect x="598.6" y="531.0" width="109.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.6" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4,236 samples, 9.26%)</title><rect x="598.6" y="515.0" width="109.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="601.6" y="526.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4,236 samples, 9.26%)</title><rect x="598.6" y="499.0" width="109.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.6" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4,236 samples, 9.26%)</title><rect x="598.6" y="483.0" width="109.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.6" y="494.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,236 samples, 9.26%)</title><rect x="598.6" y="467.0" width="109.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.6" y="478.0">jdk/internal/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,220 samples, 7.04%)</title><rect x="598.6" y="451.0" width="83.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="601.6" y="462.0">jdk.inter..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,016 samples, 2.22%)</title><rect x="681.6" y="451.0" width="26.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.6" y="462.0">s..</text>
</g>
<g>
<title>java.lang.Object (1,016 samples, 2.22%)</title><rect x="681.6" y="435.0" width="26.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="684.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (48 samples, 0.10%)</title><rect x="708.0" y="851.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (48 samples, 0.10%)</title><rect x="708.0" y="835.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (48 samples, 0.10%)</title><rect x="708.0" y="819.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (48 samples, 0.10%)</title><rect x="708.0" y="803.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (48 samples, 0.10%)</title><rect x="708.0" y="787.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (48 samples, 0.10%)</title><rect x="708.0" y="771.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 0.10%)</title><rect x="708.0" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (48 samples, 0.10%)</title><rect x="708.0" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$151/1114120118.accept (48 samples, 0.10%)</title><rect x="708.0" y="723.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$sendResponseAsync$0 (48 samples, 0.10%)</title><rect x="708.0" y="707.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 0.10%)</title><rect x="708.0" y="691.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.0" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.StorageSession (48 samples, 0.10%)</title><rect x="708.0" y="675.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="711.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (18,296 samples, 40.00%)</title><rect x="709.3" y="851.0" width="471.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.3" y="862.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (278 samples, 0.61%)</title><rect x="709.3" y="835.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/765718646.accept (278 samples, 0.61%)</title><rect x="709.3" y="819.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (278 samples, 0.61%)</title><rect x="709.3" y="803.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (278 samples, 0.61%)</title><rect x="709.3" y="787.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (278 samples, 0.61%)</title><rect x="709.3" y="771.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (278 samples, 0.61%)</title><rect x="709.3" y="755.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (278 samples, 0.61%)</title><rect x="709.3" y="739.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (278 samples, 0.61%)</title><rect x="709.3" y="723.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (278 samples, 0.61%)</title><rect x="709.3" y="707.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (278 samples, 0.61%)</title><rect x="709.3" y="691.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (278 samples, 0.61%)</title><rect x="709.3" y="675.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/1546095920.run (278 samples, 0.61%)</title><rect x="709.3" y="659.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (278 samples, 0.61%)</title><rect x="709.3" y="643.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (278 samples, 0.61%)</title><rect x="709.3" y="627.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (278 samples, 0.61%)</title><rect x="709.3" y="611.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (278 samples, 0.61%)</title><rect x="709.3" y="595.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (278 samples, 0.61%)</title><rect x="709.3" y="579.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (278 samples, 0.61%)</title><rect x="709.3" y="563.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (278 samples, 0.61%)</title><rect x="709.3" y="547.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (278 samples, 0.61%)</title><rect x="709.3" y="531.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (278 samples, 0.61%)</title><rect x="709.3" y="515.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (251 samples, 0.55%)</title><rect x="709.3" y="499.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (251 samples, 0.55%)</title><rect x="709.3" y="483.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (251 samples, 0.55%)</title><rect x="709.3" y="467.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (251 samples, 0.55%)</title><rect x="709.3" y="451.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (251 samples, 0.55%)</title><rect x="709.3" y="435.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (251 samples, 0.55%)</title><rect x="709.3" y="419.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (251 samples, 0.55%)</title><rect x="709.3" y="403.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (251 samples, 0.55%)</title><rect x="709.3" y="387.0" width="6.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="712.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (27 samples, 0.06%)</title><rect x="715.7" y="499.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.06%)</title><rect x="715.7" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (27 samples, 0.06%)</title><rect x="715.7" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (27 samples, 0.06%)</title><rect x="715.7" y="451.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.06%)</title><rect x="715.7" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 0.06%)</title><rect x="715.7" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (27 samples, 0.06%)</title><rect x="715.7" y="403.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="718.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (11,555 samples, 25.26%)</title><rect x="716.4" y="835.0" width="298.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="719.4" y="846.0">jdk.internal.net.http.HttpClientImpl$Sel..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (872 samples, 1.91%)</title><rect x="1014.5" y="835.0" width="22.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.5" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$182/4401270.run (236 samples, 0.52%)</title><rect x="1014.5" y="819.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (236 samples, 0.52%)</title><rect x="1014.5" y="803.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (236 samples, 0.52%)</title><rect x="1014.5" y="787.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (236 samples, 0.52%)</title><rect x="1014.5" y="771.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (236 samples, 0.52%)</title><rect x="1014.5" y="755.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (236 samples, 0.52%)</title><rect x="1014.5" y="739.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$176/1546095920.run (236 samples, 0.52%)</title><rect x="1014.5" y="723.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (236 samples, 0.52%)</title><rect x="1014.5" y="707.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1017.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (236 samples, 0.52%)</title><rect x="1014.5" y="691.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (236 samples, 0.52%)</title><rect x="1014.5" y="675.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (236 samples, 0.52%)</title><rect x="1014.5" y="659.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (236 samples, 0.52%)</title><rect x="1014.5" y="643.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (236 samples, 0.52%)</title><rect x="1014.5" y="627.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (236 samples, 0.52%)</title><rect x="1014.5" y="611.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (236 samples, 0.52%)</title><rect x="1014.5" y="595.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (236 samples, 0.52%)</title><rect x="1014.5" y="579.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (216 samples, 0.47%)</title><rect x="1014.5" y="563.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (216 samples, 0.47%)</title><rect x="1014.5" y="547.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (216 samples, 0.47%)</title><rect x="1014.5" y="531.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (216 samples, 0.47%)</title><rect x="1014.5" y="515.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (216 samples, 0.47%)</title><rect x="1014.5" y="499.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (216 samples, 0.47%)</title><rect x="1014.5" y="483.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (216 samples, 0.47%)</title><rect x="1014.5" y="467.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (216 samples, 0.47%)</title><rect x="1014.5" y="451.0" width="5.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1017.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (20 samples, 0.04%)</title><rect x="1020.1" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (20 samples, 0.04%)</title><rect x="1020.1" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (20 samples, 0.04%)</title><rect x="1020.1" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1023.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20 samples, 0.04%)</title><rect x="1020.1" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 0.04%)</title><rect x="1020.1" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1023.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.04%)</title><rect x="1020.1" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (20 samples, 0.04%)</title><rect x="1020.1" y="467.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1023.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$185/203120582.run (636 samples, 1.39%)</title><rect x="1020.6" y="819.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (636 samples, 1.39%)</title><rect x="1020.6" y="803.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (636 samples, 1.39%)</title><rect x="1020.6" y="787.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1023.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (636 samples, 1.39%)</title><rect x="1020.6" y="771.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1023.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (636 samples, 1.39%)</title><rect x="1020.6" y="755.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (604 samples, 1.32%)</title><rect x="1020.6" y="739.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (604 samples, 1.32%)</title><rect x="1020.6" y="723.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (604 samples, 1.32%)</title><rect x="1020.6" y="707.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (604 samples, 1.32%)</title><rect x="1020.6" y="691.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (604 samples, 1.32%)</title><rect x="1020.6" y="675.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1023.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (604 samples, 1.32%)</title><rect x="1020.6" y="659.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (604 samples, 1.32%)</title><rect x="1020.6" y="643.0" width="15.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (604 samples, 1.32%)</title><rect x="1020.6" y="627.0" width="15.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1023.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.07%)</title><rect x="1036.2" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.07%)</title><rect x="1036.2" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.07%)</title><rect x="1036.2" y="707.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.07%)</title><rect x="1036.2" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.07%)</title><rect x="1036.2" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1039.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.07%)</title><rect x="1036.2" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.2" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.07%)</title><rect x="1036.2" y="643.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1039.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (354 samples, 0.77%)</title><rect x="1037.0" y="835.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (354 samples, 0.77%)</title><rect x="1037.0" y="819.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.0" y="830.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (354 samples, 0.77%)</title><rect x="1037.0" y="803.0" width="9.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1040.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (2,588 samples, 5.66%)</title><rect x="1046.1" y="835.0" width="66.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.1" y="846.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,588 samples, 5.66%)</title><rect x="1046.1" y="819.0" width="66.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1049.1" y="830.0">jdk.int..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (2,643 samples, 5.78%)</title><rect x="1112.9" y="835.0" width="68.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.9" y="846.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2,643 samples, 5.78%)</title><rect x="1112.9" y="819.0" width="68.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.9" y="830.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2,643 samples, 5.78%)</title><rect x="1112.9" y="803.0" width="68.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.9" y="814.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2,643 samples, 5.78%)</title><rect x="1112.9" y="787.0" width="68.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.9" y="798.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2,643 samples, 5.78%)</title><rect x="1112.9" y="771.0" width="68.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.9" y="782.0">sun/nio..</text>
</g>
<g>
<title>java.lang.Object (2,643 samples, 5.78%)</title><rect x="1112.9" y="755.0" width="68.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1115.9" y="766.0">java.la..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (341 samples, 0.75%)</title><rect x="1181.2" y="851.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (341 samples, 0.75%)</title><rect x="1181.2" y="835.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (238 samples, 0.52%)</title><rect x="1181.2" y="819.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (238 samples, 0.52%)</title><rect x="1181.2" y="803.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (238 samples, 0.52%)</title><rect x="1181.2" y="787.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (238 samples, 0.52%)</title><rect x="1181.2" y="771.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (238 samples, 0.52%)</title><rect x="1181.2" y="755.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1184.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (238 samples, 0.52%)</title><rect x="1181.2" y="739.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (233 samples, 0.51%)</title><rect x="1181.2" y="723.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNodeAsync (133 samples, 0.29%)</title><rect x="1181.2" y="707.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (133 samples, 0.29%)</title><rect x="1181.2" y="691.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.proxy (133 samples, 0.29%)</title><rect x="1181.2" y="675.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (133 samples, 0.29%)</title><rect x="1181.2" y="659.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (133 samples, 0.29%)</title><rect x="1181.2" y="643.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (133 samples, 0.29%)</title><rect x="1181.2" y="627.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (133 samples, 0.29%)</title><rect x="1181.2" y="611.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1184.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (133 samples, 0.29%)</title><rect x="1181.2" y="595.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (133 samples, 0.29%)</title><rect x="1181.2" y="579.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1184.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (133 samples, 0.29%)</title><rect x="1181.2" y="563.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (133 samples, 0.29%)</title><rect x="1181.2" y="547.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (120 samples, 0.26%)</title><rect x="1181.2" y="531.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1184.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (120 samples, 0.26%)</title><rect x="1181.2" y="515.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (120 samples, 0.26%)</title><rect x="1181.2" y="499.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (120 samples, 0.26%)</title><rect x="1181.2" y="483.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (120 samples, 0.26%)</title><rect x="1181.2" y="467.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1184.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (120 samples, 0.26%)</title><rect x="1181.2" y="451.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (120 samples, 0.26%)</title><rect x="1181.2" y="435.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (120 samples, 0.26%)</title><rect x="1181.2" y="419.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1184.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.03%)</title><rect x="1184.3" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.03%)</title><rect x="1184.3" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.03%)</title><rect x="1184.3" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1187.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.03%)</title><rect x="1184.3" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.03%)</title><rect x="1184.3" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.03%)</title><rect x="1184.3" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (13 samples, 0.03%)</title><rect x="1184.3" y="435.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1187.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocallyAsync (100 samples, 0.22%)</title><rect x="1184.6" y="707.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1187.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (100 samples, 0.22%)</title><rect x="1184.6" y="691.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (100 samples, 0.22%)</title><rect x="1184.6" y="675.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (86 samples, 0.19%)</title><rect x="1184.6" y="659.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (86 samples, 0.19%)</title><rect x="1184.6" y="643.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (86 samples, 0.19%)</title><rect x="1184.6" y="627.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1187.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (86 samples, 0.19%)</title><rect x="1184.6" y="611.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (86 samples, 0.19%)</title><rect x="1184.6" y="595.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (86 samples, 0.19%)</title><rect x="1184.6" y="579.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (86 samples, 0.19%)</title><rect x="1184.6" y="563.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (86 samples, 0.19%)</title><rect x="1184.6" y="547.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.03%)</title><rect x="1186.9" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.03%)</title><rect x="1186.9" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (14 samples, 0.03%)</title><rect x="1186.9" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14 samples, 0.03%)</title><rect x="1186.9" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.03%)</title><rect x="1186.9" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1189.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.03%)</title><rect x="1186.9" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (14 samples, 0.03%)</title><rect x="1186.9" y="563.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1189.9" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.StorageSession (103 samples, 0.23%)</title><rect x="1187.3" y="819.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
</g>
</svg>
