<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (93,694 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (37,897 samples, 40.45%)</title><rect x="10.0" y="803.0" width="477.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (37,897 samples, 40.45%)</title><rect x="10.0" y="787.0" width="477.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (37,897 samples, 40.45%)</title><rect x="10.0" y="771.0" width="477.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (8,609 samples, 9.19%)</title><rect x="10.0" y="755.0" width="108.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,609 samples, 9.19%)</title><rect x="10.0" y="739.0" width="108.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,609 samples, 9.19%)</title><rect x="10.0" y="723.0" width="108.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (49 samples, 0.05%)</title><rect x="10.0" y="707.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/1345656667.apply (8,560 samples, 9.14%)</title><rect x="10.7" y="707.0" width="107.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.7" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (8,560 samples, 9.14%)</title><rect x="10.7" y="691.0" width="107.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.7" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (8,560 samples, 9.14%)</title><rect x="10.7" y="675.0" width="107.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.7" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.05%)</title><rect x="10.7" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.05%)</title><rect x="10.7" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/60851830.get$Lambda (30 samples, 0.03%)</title><rect x="10.7" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$235 (30 samples, 0.03%)</title><rect x="10.7" y="611.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.get$Lambda (21 samples, 0.02%)</title><rect x="11.0" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (21 samples, 0.02%)</title><rect x="11.0" y="611.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (90 samples, 0.10%)</title><rect x="11.3" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (90 samples, 0.10%)</title><rect x="11.3" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (47 samples, 0.05%)</title><rect x="11.3" y="627.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.05%)</title><rect x="11.9" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.05%)</title><rect x="11.9" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.05%)</title><rect x="11.9" y="595.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="14.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (187 samples, 0.20%)</title><rect x="12.4" y="659.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (187 samples, 0.20%)</title><rect x="12.4" y="643.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (107 samples, 0.11%)</title><rect x="12.4" y="627.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="15.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.09%)</title><rect x="13.8" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (80 samples, 0.09%)</title><rect x="13.8" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (80 samples, 0.09%)</title><rect x="13.8" y="595.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="16.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (8,043 samples, 8.58%)</title><rect x="14.8" y="659.0" width="101.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.8" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (8,043 samples, 8.58%)</title><rect x="14.8" y="643.0" width="101.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.8" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (8,043 samples, 8.58%)</title><rect x="14.8" y="627.0" width="101.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.8" y="638.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.08%)</title><rect x="14.8" y="611.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.08%)</title><rect x="14.8" y="595.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.get$Lambda (26 samples, 0.03%)</title><rect x="14.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$132 (26 samples, 0.03%)</title><rect x="14.8" y="563.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/873270299.get$Lambda (32 samples, 0.03%)</title><rect x="15.4" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$208 (32 samples, 0.03%)</title><rect x="15.4" y="563.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="18.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4,935 samples, 5.27%)</title><rect x="15.8" y="611.0" width="62.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.8" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4,935 samples, 5.27%)</title><rect x="15.8" y="595.0" width="62.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4,897 samples, 5.23%)</title><rect x="15.8" y="579.0" width="61.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.8" y="590.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/873270299.apply (4,897 samples, 5.23%)</title><rect x="15.8" y="563.0" width="61.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (4,897 samples, 5.23%)</title><rect x="15.8" y="547.0" width="61.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4,897 samples, 5.23%)</title><rect x="15.8" y="531.0" width="61.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.8" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.apply (4,897 samples, 5.23%)</title><rect x="15.8" y="515.0" width="61.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.8" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4,897 samples, 5.23%)</title><rect x="15.8" y="499.0" width="61.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.8" y="510.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.03%)</title><rect x="15.8" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="15.8" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.get$Lambda (24 samples, 0.03%)</title><rect x="15.8" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$234 (24 samples, 0.03%)</title><rect x="15.8" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="18.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (133 samples, 0.14%)</title><rect x="16.1" y="483.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (133 samples, 0.14%)</title><rect x="16.1" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (49 samples, 0.05%)</title><rect x="16.1" y="451.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="19.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (40 samples, 0.04%)</title><rect x="16.7" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (40 samples, 0.04%)</title><rect x="16.7" y="435.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (40 samples, 0.04%)</title><rect x="16.7" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (40 samples, 0.04%)</title><rect x="16.7" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (40 samples, 0.04%)</title><rect x="16.7" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (40 samples, 0.04%)</title><rect x="16.7" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (33 samples, 0.04%)</title><rect x="16.8" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="17.2" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="17.2" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="17.2" y="419.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="20.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (86 samples, 0.09%)</title><rect x="17.7" y="483.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (86 samples, 0.09%)</title><rect x="17.7" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (39 samples, 0.04%)</title><rect x="17.7" y="451.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="18.2" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="18.2" y="435.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="21.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="18.2" y="419.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="21.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,654 samples, 4.97%)</title><rect x="18.8" y="483.0" width="58.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.8" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.05%)</title><rect x="18.8" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.05%)</title><rect x="18.8" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/2043781199.get$Lambda (25 samples, 0.03%)</title><rect x="18.8" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$232 (25 samples, 0.03%)</title><rect x="18.8" y="419.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="21.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$233/660082140.get$Lambda (21 samples, 0.02%)</title><rect x="19.1" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$233 (21 samples, 0.02%)</title><rect x="19.1" y="419.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="22.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,968 samples, 4.24%)</title><rect x="19.4" y="467.0" width="50.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.4" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,968 samples, 4.24%)</title><rect x="19.4" y="451.0" width="50.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.4" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (42 samples, 0.04%)</title><rect x="19.4" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/2043781199.apply (3,855 samples, 4.11%)</title><rect x="19.9" y="435.0" width="48.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.9" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,855 samples, 4.11%)</title><rect x="19.9" y="419.0" width="48.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.9" y="430.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (92 samples, 0.10%)</title><rect x="20.1" y="403.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (92 samples, 0.10%)</title><rect x="20.1" y="387.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (56 samples, 0.06%)</title><rect x="20.1" y="371.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="23.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="20.8" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.04%)</title><rect x="20.8" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="20.8" y="339.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="23.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="21.3" y="403.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="24.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (62 samples, 0.07%)</title><rect x="21.8" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (34 samples, 0.04%)</title><rect x="21.8" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="24.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (28 samples, 0.03%)</title><rect x="22.2" y="387.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (27 samples, 0.03%)</title><rect x="22.2" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (27 samples, 0.03%)</title><rect x="22.2" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (27 samples, 0.03%)</title><rect x="22.2" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (27 samples, 0.03%)</title><rect x="22.2" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (27 samples, 0.03%)</title><rect x="22.2" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (120 samples, 0.13%)</title><rect x="22.5" y="403.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (120 samples, 0.13%)</title><rect x="22.5" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (32 samples, 0.03%)</title><rect x="22.5" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (32 samples, 0.03%)</title><rect x="22.5" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (32 samples, 0.03%)</title><rect x="22.5" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (32 samples, 0.03%)</title><rect x="22.5" y="323.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="25.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (88 samples, 0.09%)</title><rect x="22.9" y="371.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (88 samples, 0.09%)</title><rect x="22.9" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (61 samples, 0.07%)</title><rect x="22.9" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="25.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (27 samples, 0.03%)</title><rect x="23.7" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (27 samples, 0.03%)</title><rect x="23.7" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="26.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,528 samples, 3.77%)</title><rect x="24.0" y="403.0" width="44.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.0" y="414.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (26 samples, 0.03%)</title><rect x="24.0" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="27.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (63 samples, 0.07%)</title><rect x="24.4" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.4" y="398.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.04%)</title><rect x="24.4" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="27.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.03%)</title><rect x="24.8" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.8" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (378 samples, 0.40%)</title><rect x="25.2" y="387.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (378 samples, 0.40%)</title><rect x="25.2" y="371.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (378 samples, 0.40%)</title><rect x="25.2" y="355.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.2" y="366.0"></text>
</g>
<g>
<title>byte[] (378 samples, 0.40%)</title><rect x="25.2" y="339.0" width="4.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="28.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (83 samples, 0.09%)</title><rect x="29.9" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.9" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (83 samples, 0.09%)</title><rect x="29.9" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.9" y="382.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.09%)</title><rect x="29.9" y="355.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="32.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (347 samples, 0.37%)</title><rect x="31.0" y="387.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (347 samples, 0.37%)</title><rect x="31.0" y="371.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.03%)</title><rect x="31.0" y="355.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="34.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (321 samples, 0.34%)</title><rect x="31.3" y="355.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.3" y="366.0"></text>
</g>
<g>
<title>byte[] (321 samples, 0.34%)</title><rect x="31.3" y="339.0" width="4.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="34.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.06%)</title><rect x="35.3" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (58 samples, 0.06%)</title><rect x="35.3" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.3" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (58 samples, 0.06%)</title><rect x="35.3" y="355.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="38.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (39 samples, 0.04%)</title><rect x="36.1" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (39 samples, 0.04%)</title><rect x="36.1" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="39.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,114 samples, 2.26%)</title><rect x="36.6" y="387.0" width="26.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.6" y="398.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (33 samples, 0.04%)</title><rect x="36.6" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="36.6" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="36.6" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.6" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.get$Lambda (33 samples, 0.04%)</title><rect x="36.6" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.6" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$254 (33 samples, 0.04%)</title><rect x="36.6" y="307.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="39.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,088 samples, 1.16%)</title><rect x="37.0" y="371.0" width="13.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (561 samples, 0.60%)</title><rect x="37.0" y="355.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.0" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (561 samples, 0.60%)</title><rect x="37.0" y="339.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.0" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (561 samples, 0.60%)</title><rect x="37.0" y="323.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (561 samples, 0.60%)</title><rect x="37.0" y="307.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.0" y="318.0"></text>
</g>
<g>
<title>byte[] (561 samples, 0.60%)</title><rect x="37.0" y="291.0" width="7.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="40.0" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (68 samples, 0.07%)</title><rect x="44.0" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.0" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (68 samples, 0.07%)</title><rect x="44.0" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (68 samples, 0.07%)</title><rect x="44.0" y="323.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (68 samples, 0.07%)</title><rect x="44.0" y="307.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="47.0" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (83 samples, 0.09%)</title><rect x="44.9" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.9" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (41 samples, 0.04%)</title><rect x="44.9" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="47.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (42 samples, 0.04%)</title><rect x="45.4" y="339.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (42 samples, 0.04%)</title><rect x="45.4" y="323.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="48.4" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.test (376 samples, 0.40%)</title><rect x="45.9" y="355.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.9" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (376 samples, 0.40%)</title><rect x="45.9" y="339.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/960733886.test (376 samples, 0.40%)</title><rect x="45.9" y="323.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (376 samples, 0.40%)</title><rect x="45.9" y="307.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.9" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/707161353.test (376 samples, 0.40%)</title><rect x="45.9" y="291.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (376 samples, 0.40%)</title><rect x="45.9" y="275.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/90767234.test (376 samples, 0.40%)</title><rect x="45.9" y="259.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (376 samples, 0.40%)</title><rect x="45.9" y="243.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (376 samples, 0.40%)</title><rect x="45.9" y="227.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (376 samples, 0.40%)</title><rect x="45.9" y="211.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (180 samples, 0.19%)</title><rect x="45.9" y="195.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="48.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (196 samples, 0.21%)</title><rect x="48.2" y="195.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.2" y="206.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.21%)</title><rect x="48.2" y="179.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="51.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (993 samples, 1.06%)</title><rect x="50.7" y="371.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (993 samples, 1.06%)</title><rect x="50.7" y="355.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (993 samples, 1.06%)</title><rect x="50.7" y="339.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.02%)</title><rect x="50.9" y="323.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="53.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (49 samples, 0.05%)</title><rect x="51.2" y="323.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="54.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (22 samples, 0.02%)</title><rect x="51.8" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="54.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.05%)</title><rect x="52.1" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.05%)</title><rect x="52.1" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.1" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (44 samples, 0.05%)</title><rect x="52.1" y="291.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.1" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (44 samples, 0.05%)</title><rect x="52.1" y="275.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="55.1" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (42 samples, 0.04%)</title><rect x="52.6" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.6" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (42 samples, 0.04%)</title><rect x="52.6" y="307.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="55.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (736 samples, 0.79%)</title><rect x="53.2" y="323.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (736 samples, 0.79%)</title><rect x="53.2" y="307.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (736 samples, 0.79%)</title><rect x="53.2" y="291.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (74 samples, 0.08%)</title><rect x="53.2" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.2" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (74 samples, 0.08%)</title><rect x="53.2" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (74 samples, 0.08%)</title><rect x="53.2" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="53.2" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="53.2" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="53.2" y="195.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.2" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="53.2" y="179.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.08%)</title><rect x="53.2" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.08%)</title><rect x="53.2" y="147.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="56.2" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (351 samples, 0.37%)</title><rect x="54.1" y="275.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.1" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (351 samples, 0.37%)</title><rect x="54.1" y="259.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (180 samples, 0.19%)</title><rect x="54.1" y="243.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (180 samples, 0.19%)</title><rect x="54.1" y="227.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 0.19%)</title><rect x="54.1" y="211.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="57.1" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (171 samples, 0.18%)</title><rect x="56.4" y="243.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.4" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (171 samples, 0.18%)</title><rect x="56.4" y="227.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="59.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (311 samples, 0.33%)</title><rect x="58.5" y="275.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (311 samples, 0.33%)</title><rect x="58.5" y="259.0" width="3.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="61.5" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (59 samples, 0.06%)</title><rect x="62.4" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (59 samples, 0.06%)</title><rect x="62.4" y="307.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="65.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (86 samples, 0.09%)</title><rect x="63.2" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (26 samples, 0.03%)</title><rect x="63.2" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.2" y="382.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.03%)</title><rect x="63.2" y="355.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="66.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.06%)</title><rect x="63.5" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (60 samples, 0.06%)</title><rect x="63.5" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754894440.invoke (60 samples, 0.06%)</title><rect x="63.5" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.06%)</title><rect x="63.5" y="323.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (25 samples, 0.03%)</title><rect x="63.5" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.03%)</title><rect x="63.5" y="291.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="66.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (35 samples, 0.04%)</title><rect x="63.8" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (35 samples, 0.04%)</title><rect x="63.8" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.8" y="302.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="63.8" y="275.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="66.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (110 samples, 0.12%)</title><rect x="64.3" y="387.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (110 samples, 0.12%)</title><rect x="64.3" y="371.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.12%)</title><rect x="64.3" y="355.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (110 samples, 0.12%)</title><rect x="64.3" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754894440.invoke (110 samples, 0.12%)</title><rect x="64.3" y="323.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.12%)</title><rect x="64.3" y="307.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (34 samples, 0.04%)</title><rect x="64.3" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.04%)</title><rect x="64.3" y="275.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="67.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (76 samples, 0.08%)</title><rect x="64.7" y="291.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (76 samples, 0.08%)</title><rect x="64.7" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.7" y="286.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.08%)</title><rect x="64.7" y="259.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="67.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (224 samples, 0.24%)</title><rect x="65.7" y="387.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.7" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (56 samples, 0.06%)</title><rect x="65.7" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (66 samples, 0.07%)</title><rect x="66.4" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.07%)</title><rect x="66.4" y="355.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="69.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (102 samples, 0.11%)</title><rect x="67.2" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.2" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (102 samples, 0.11%)</title><rect x="67.2" y="355.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="70.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.08%)</title><rect x="68.5" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (71 samples, 0.08%)</title><rect x="68.5" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (71 samples, 0.08%)</title><rect x="68.5" y="403.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="71.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (83 samples, 0.09%)</title><rect x="69.4" y="467.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="72.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.05%)</title><rect x="70.4" y="467.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="73.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (508 samples, 0.54%)</title><rect x="71.0" y="467.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.04%)</title><rect x="71.0" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.04%)</title><rect x="71.0" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/208720215.get$Lambda (26 samples, 0.03%)</title><rect x="71.2" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (26 samples, 0.03%)</title><rect x="71.2" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="74.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (57 samples, 0.06%)</title><rect x="71.5" y="451.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="74.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (32 samples, 0.03%)</title><rect x="72.2" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="75.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (60 samples, 0.06%)</title><rect x="72.6" y="451.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="75.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (157 samples, 0.17%)</title><rect x="73.4" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (157 samples, 0.17%)</title><rect x="73.4" y="435.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (157 samples, 0.17%)</title><rect x="73.4" y="419.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (157 samples, 0.17%)</title><rect x="73.4" y="403.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (157 samples, 0.17%)</title><rect x="73.4" y="387.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (157 samples, 0.17%)</title><rect x="73.4" y="371.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (157 samples, 0.17%)</title><rect x="73.4" y="355.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (157 samples, 0.17%)</title><rect x="73.4" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (157 samples, 0.17%)</title><rect x="73.4" y="323.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.07%)</title><rect x="73.4" y="307.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.07%)</title><rect x="73.4" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1371022227.get$Lambda (28 samples, 0.03%)</title><rect x="73.4" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$221 (28 samples, 0.03%)</title><rect x="73.4" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="76.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (39 samples, 0.04%)</title><rect x="73.8" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$223 (39 samples, 0.04%)</title><rect x="73.8" y="259.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="76.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (43 samples, 0.05%)</title><rect x="74.2" y="307.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="77.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (47 samples, 0.05%)</title><rect x="74.8" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (47 samples, 0.05%)</title><rect x="74.8" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (23 samples, 0.02%)</title><rect x="74.8" y="275.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="77.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (24 samples, 0.03%)</title><rect x="75.1" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (24 samples, 0.03%)</title><rect x="75.1" y="259.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="78.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (122 samples, 0.13%)</title><rect x="75.4" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (29 samples, 0.03%)</title><rect x="75.4" y="435.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (51 samples, 0.05%)</title><rect x="75.7" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="78.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (42 samples, 0.04%)</title><rect x="76.4" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.4" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (42 samples, 0.04%)</title><rect x="76.4" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.4" y="430.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.04%)</title><rect x="76.4" y="403.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="79.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (41 samples, 0.04%)</title><rect x="76.9" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="76.9" y="435.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="79.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="77.4" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="77.4" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.04%)</title><rect x="77.4" y="547.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="80.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (96 samples, 0.10%)</title><rect x="77.9" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (96 samples, 0.10%)</title><rect x="77.9" y="595.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (52 samples, 0.06%)</title><rect x="77.9" y="579.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="80.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="78.6" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="78.6" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="78.6" y="547.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="81.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,935 samples, 3.13%)</title><rect x="79.1" y="611.0" width="37.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.1" y="622.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.06%)</title><rect x="79.1" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.06%)</title><rect x="79.1" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1400471465.get$Lambda (36 samples, 0.04%)</title><rect x="79.1" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$202 (36 samples, 0.04%)</title><rect x="79.1" y="547.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="82.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1560002630.get$Lambda (20 samples, 0.02%)</title><rect x="79.6" y="563.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$204 (20 samples, 0.02%)</title><rect x="79.6" y="547.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="82.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (77 samples, 0.08%)</title><rect x="79.8" y="595.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (77 samples, 0.08%)</title><rect x="79.8" y="579.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1560002630.apply (39 samples, 0.04%)</title><rect x="79.8" y="563.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (39 samples, 0.04%)</title><rect x="79.8" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (39 samples, 0.04%)</title><rect x="79.8" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.04%)</title><rect x="79.8" y="515.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="82.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="80.3" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="80.3" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.04%)</title><rect x="80.3" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="83.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (37 samples, 0.04%)</title><rect x="80.8" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (37 samples, 0.04%)</title><rect x="80.8" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="80.8" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="80.8" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="80.8" y="531.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="83.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (2,765 samples, 2.95%)</title><rect x="81.3" y="595.0" width="34.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.3" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.04%)</title><rect x="81.3" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.04%)</title><rect x="81.3" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1237283969.get$Lambda (38 samples, 0.04%)</title><rect x="81.3" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$143 (38 samples, 0.04%)</title><rect x="81.3" y="531.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="84.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,567 samples, 2.74%)</title><rect x="81.7" y="579.0" width="32.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.7" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,567 samples, 2.74%)</title><rect x="81.7" y="563.0" width="32.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.7" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,522 samples, 2.69%)</title><rect x="81.7" y="547.0" width="31.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.7" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1237283969.apply (2,522 samples, 2.69%)</title><rect x="81.7" y="531.0" width="31.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.7" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (2,522 samples, 2.69%)</title><rect x="81.7" y="515.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.7" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (2,522 samples, 2.69%)</title><rect x="81.7" y="499.0" width="31.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.7" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="81.7" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="81.7" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$199/1705845297.get$Lambda (25 samples, 0.03%)</title><rect x="81.7" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$199 (25 samples, 0.03%)</title><rect x="81.7" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="84.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,038 samples, 1.11%)</title><rect x="82.1" y="483.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,038 samples, 1.11%)</title><rect x="82.1" y="467.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1,038 samples, 1.11%)</title><rect x="82.1" y="451.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$199/1705845297.apply (979 samples, 1.04%)</title><rect x="82.1" y="435.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (979 samples, 1.04%)</title><rect x="82.1" y="419.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (979 samples, 1.04%)</title><rect x="82.1" y="403.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (979 samples, 1.04%)</title><rect x="82.1" y="387.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (646 samples, 0.69%)</title><rect x="82.1" y="371.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.1" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (166 samples, 0.18%)</title><rect x="82.1" y="355.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.03%)</title><rect x="82.1" y="339.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="85.1" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (66 samples, 0.07%)</title><rect x="82.4" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (66 samples, 0.07%)</title><rect x="82.4" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.4" y="334.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.07%)</title><rect x="82.4" y="307.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="85.4" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (76 samples, 0.08%)</title><rect x="83.2" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.2" y="350.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.08%)</title><rect x="83.2" y="323.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="86.2" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (25 samples, 0.03%)</title><rect x="84.1" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.1" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (25 samples, 0.03%)</title><rect x="84.1" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="87.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (297 samples, 0.32%)</title><rect x="84.5" y="355.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (32 samples, 0.03%)</title><rect x="84.5" y="339.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="87.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (212 samples, 0.23%)</title><rect x="84.9" y="339.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (212 samples, 0.23%)</title><rect x="84.9" y="323.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (146 samples, 0.16%)</title><rect x="84.9" y="307.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (146 samples, 0.16%)</title><rect x="84.9" y="291.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/2001223946.get$Lambda (146 samples, 0.16%)</title><rect x="84.9" y="275.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (146 samples, 0.16%)</title><rect x="84.9" y="259.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="87.9" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (66 samples, 0.07%)</title><rect x="86.7" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/2001223946.run (66 samples, 0.07%)</title><rect x="86.7" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (66 samples, 0.07%)</title><rect x="86.7" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.7" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (66 samples, 0.07%)</title><rect x="86.7" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (66 samples, 0.07%)</title><rect x="86.7" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.7" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (66 samples, 0.07%)</title><rect x="86.7" y="227.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="89.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (53 samples, 0.06%)</title><rect x="87.5" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (53 samples, 0.06%)</title><rect x="87.5" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.5" y="334.0"></text>
</g>
<g>
<title>int[] (53 samples, 0.06%)</title><rect x="87.5" y="307.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="90.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (158 samples, 0.17%)</title><rect x="88.2" y="355.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.2" y="366.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.09%)</title><rect x="88.2" y="339.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="91.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.08%)</title><rect x="89.3" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (74 samples, 0.08%)</title><rect x="89.3" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.3" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.08%)</title><rect x="89.3" y="307.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="92.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (333 samples, 0.36%)</title><rect x="90.2" y="371.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.2" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (99 samples, 0.11%)</title><rect x="90.2" y="355.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="93.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (77 samples, 0.08%)</title><rect x="91.4" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (77 samples, 0.08%)</title><rect x="91.4" y="339.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="94.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (157 samples, 0.17%)</title><rect x="92.4" y="355.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (157 samples, 0.17%)</title><rect x="92.4" y="339.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="95.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="94.4" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="94.4" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="94.4" y="403.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="97.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,459 samples, 1.56%)</title><rect x="95.1" y="483.0" width="18.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (114 samples, 0.12%)</title><rect x="95.1" y="467.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="98.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,302 samples, 1.39%)</title><rect x="96.6" y="467.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (32 samples, 0.03%)</title><rect x="96.6" y="451.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="99.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (36 samples, 0.04%)</title><rect x="97.0" y="451.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="100.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (41 samples, 0.04%)</title><rect x="97.4" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="100.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (73 samples, 0.08%)</title><rect x="97.9" y="451.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (73 samples, 0.08%)</title><rect x="97.9" y="435.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.9" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (73 samples, 0.08%)</title><rect x="97.9" y="419.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="100.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (37 samples, 0.04%)</title><rect x="98.9" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (37 samples, 0.04%)</title><rect x="98.9" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="101.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (97 samples, 0.10%)</title><rect x="99.3" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="102.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (52 samples, 0.06%)</title><rect x="100.5" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="103.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (67 samples, 0.07%)</title><rect x="101.2" y="451.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="104.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (81 samples, 0.09%)</title><rect x="102.0" y="451.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="105.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (393 samples, 0.42%)</title><rect x="103.1" y="451.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (35 samples, 0.04%)</title><rect x="103.1" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="106.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (24 samples, 0.03%)</title><rect x="103.7" y="435.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="106.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (26 samples, 0.03%)</title><rect x="104.0" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="107.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (33 samples, 0.04%)</title><rect x="104.5" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.04%)</title><rect x="104.5" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="107.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (39 samples, 0.04%)</title><rect x="104.9" y="435.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="107.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.06%)</title><rect x="105.4" y="435.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="108.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (153 samples, 0.16%)</title><rect x="106.1" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (27 samples, 0.03%)</title><rect x="106.1" y="419.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="109.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (38 samples, 0.04%)</title><rect x="106.4" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="109.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (28 samples, 0.03%)</title><rect x="106.9" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (28 samples, 0.03%)</title><rect x="106.9" y="403.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="109.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (60 samples, 0.06%)</title><rect x="107.3" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (23 samples, 0.02%)</title><rect x="107.3" y="403.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="110.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (20 samples, 0.02%)</title><rect x="107.8" y="403.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="110.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (244 samples, 0.26%)</title><rect x="108.0" y="451.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (34 samples, 0.04%)</title><rect x="108.7" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (34 samples, 0.04%)</title><rect x="108.7" y="419.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="111.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (155 samples, 0.17%)</title><rect x="109.1" y="435.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (32 samples, 0.03%)</title><rect x="109.1" y="419.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="112.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (43 samples, 0.05%)</title><rect x="109.5" y="419.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="112.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (68 samples, 0.07%)</title><rect x="110.2" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (25 samples, 0.03%)</title><rect x="110.2" y="403.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="113.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (26 samples, 0.03%)</title><rect x="110.8" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="113.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (26 samples, 0.03%)</title><rect x="111.1" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (26 samples, 0.03%)</title><rect x="111.1" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (26 samples, 0.03%)</title><rect x="111.1" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (26 samples, 0.03%)</title><rect x="111.1" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.1" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (26 samples, 0.03%)</title><rect x="111.1" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (26 samples, 0.03%)</title><rect x="111.1" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.03%)</title><rect x="111.1" y="355.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="114.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (123 samples, 0.13%)</title><rect x="111.4" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (24 samples, 0.03%)</title><rect x="111.4" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.03%)</title><rect x="111.4" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1084093799.get$Lambda (24 samples, 0.03%)</title><rect x="111.4" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$153 (24 samples, 0.03%)</title><rect x="111.4" y="387.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="114.4" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (99 samples, 0.11%)</title><rect x="111.7" y="435.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1084093799.run (99 samples, 0.11%)</title><rect x="111.7" y="419.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (99 samples, 0.11%)</title><rect x="111.7" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.7" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (27 samples, 0.03%)</title><rect x="111.7" y="387.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="114.7" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (72 samples, 0.08%)</title><rect x="112.1" y="387.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.1" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (40 samples, 0.04%)</title><rect x="112.1" y="371.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="115.1" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (32 samples, 0.03%)</title><rect x="112.6" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.6" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.03%)</title><rect x="112.6" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.6" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.03%)</title><rect x="112.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.6" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (32 samples, 0.03%)</title><rect x="112.6" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.6" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (29 samples, 0.03%)</title><rect x="112.6" y="307.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="115.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (43 samples, 0.05%)</title><rect x="113.0" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.05%)</title><rect x="113.0" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="116.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="113.5" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="113.5" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="113.5" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="116.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (47 samples, 0.05%)</title><rect x="114.1" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (47 samples, 0.05%)</title><rect x="114.1" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="114.1" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="114.1" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="114.1" y="515.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="117.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (113 samples, 0.12%)</title><rect x="114.7" y="579.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (73 samples, 0.08%)</title><rect x="114.7" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (73 samples, 0.08%)</title><rect x="114.7" y="547.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1534255922.linkToTargetMethod (73 samples, 0.08%)</title><rect x="114.7" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1819550379.invoke (73 samples, 0.08%)</title><rect x="114.7" y="515.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1014054035.invoke (73 samples, 0.08%)</title><rect x="114.7" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.08%)</title><rect x="114.7" y="483.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (73 samples, 0.08%)</title><rect x="114.7" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (73 samples, 0.08%)</title><rect x="114.7" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.7" y="462.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.08%)</title><rect x="114.7" y="435.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="117.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (40 samples, 0.04%)</title><rect x="115.6" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="115.6" y="547.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="118.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (48 samples, 0.05%)</title><rect x="116.1" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (48 samples, 0.05%)</title><rect x="116.1" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (48 samples, 0.05%)</title><rect x="116.1" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.1" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (48 samples, 0.05%)</title><rect x="116.1" y="611.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="119.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (141 samples, 0.15%)</title><rect x="116.7" y="659.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (119 samples, 0.13%)</title><rect x="116.7" y="643.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="119.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (22 samples, 0.02%)</title><rect x="118.2" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (22 samples, 0.02%)</title><rect x="118.2" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.2" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.02%)</title><rect x="118.2" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.2" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (22 samples, 0.02%)</title><rect x="118.2" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.2" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.02%)</title><rect x="118.2" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.2" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.02%)</title><rect x="118.2" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.2" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (22 samples, 0.02%)</title><rect x="118.2" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.2" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (22 samples, 0.02%)</title><rect x="118.2" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.2" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (22 samples, 0.02%)</title><rect x="118.2" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (22 samples, 0.02%)</title><rect x="118.2" y="499.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.2" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (22 samples, 0.02%)</title><rect x="118.2" y="483.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="121.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,428 samples, 2.59%)</title><rect x="118.5" y="755.0" width="30.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.5" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,428 samples, 2.59%)</title><rect x="118.5" y="739.0" width="30.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.5" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,419 samples, 2.58%)</title><rect x="118.5" y="723.0" width="30.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.5" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,419 samples, 2.58%)</title><rect x="118.5" y="707.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.5" y="718.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,419 samples, 2.58%)</title><rect x="118.5" y="691.0" width="30.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="121.5" y="702.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$252/1669380854.run (1,648 samples, 1.76%)</title><rect x="149.0" y="755.0" width="20.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,648 samples, 1.76%)</title><rect x="149.0" y="739.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,648 samples, 1.76%)</title><rect x="149.0" y="723.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,648 samples, 1.76%)</title><rect x="149.0" y="707.0" width="20.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,648 samples, 1.76%)</title><rect x="149.0" y="691.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,648 samples, 1.76%)</title><rect x="149.0" y="675.0" width="20.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,648 samples, 1.76%)</title><rect x="149.0" y="659.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,648 samples, 1.76%)</title><rect x="149.0" y="643.0" width="20.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,648 samples, 1.76%)</title><rect x="149.0" y="627.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,648 samples, 1.76%)</title><rect x="149.0" y="611.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,648 samples, 1.76%)</title><rect x="149.0" y="595.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,511 samples, 1.61%)</title><rect x="149.0" y="579.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (94 samples, 0.10%)</title><rect x="149.0" y="563.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (94 samples, 0.10%)</title><rect x="149.0" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$257/3868478.get$Lambda (23 samples, 0.02%)</title><rect x="149.0" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$257 (23 samples, 0.02%)</title><rect x="149.0" y="515.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="152.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$273/1081468444.get$Lambda (39 samples, 0.04%)</title><rect x="149.3" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$273 (39 samples, 0.04%)</title><rect x="149.3" y="515.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="152.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$278/875190164.get$Lambda (32 samples, 0.03%)</title><rect x="149.8" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$278 (32 samples, 0.03%)</title><rect x="149.8" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="152.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,417 samples, 1.51%)</title><rect x="150.2" y="563.0" width="17.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (64 samples, 0.07%)</title><rect x="150.2" y="547.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="153.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,353 samples, 1.44%)</title><rect x="151.0" y="547.0" width="17.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,353 samples, 1.44%)</title><rect x="151.0" y="531.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,353 samples, 1.44%)</title><rect x="151.0" y="515.0" width="17.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (228 samples, 0.24%)</title><rect x="151.0" y="499.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (75 samples, 0.08%)</title><rect x="151.0" y="483.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="154.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$266/153627331.apply (120 samples, 0.13%)</title><rect x="152.0" y="483.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (120 samples, 0.13%)</title><rect x="152.0" y="467.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (120 samples, 0.13%)</title><rect x="152.0" y="451.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (23 samples, 0.02%)</title><rect x="152.0" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (23 samples, 0.02%)</title><rect x="152.0" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.0" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (23 samples, 0.02%)</title><rect x="152.0" y="403.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="155.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (97 samples, 0.10%)</title><rect x="152.3" y="435.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (79 samples, 0.08%)</title><rect x="152.5" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (79 samples, 0.08%)</title><rect x="152.5" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (39 samples, 0.04%)</title><rect x="152.5" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="155.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="153.0" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="153.0" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="153.0" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="156.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (31 samples, 0.03%)</title><rect x="153.5" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (31 samples, 0.03%)</title><rect x="153.5" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (28 samples, 0.03%)</title><rect x="153.5" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (28 samples, 0.03%)</title><rect x="153.5" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (27 samples, 0.03%)</title><rect x="153.5" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.03%)</title><rect x="153.5" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (27 samples, 0.03%)</title><rect x="153.5" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (27 samples, 0.03%)</title><rect x="153.5" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,125 samples, 1.20%)</title><rect x="153.9" y="499.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,125 samples, 1.20%)</title><rect x="153.9" y="483.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (1,125 samples, 1.20%)</title><rect x="153.9" y="467.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,125 samples, 1.20%)</title><rect x="153.9" y="451.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,125 samples, 1.20%)</title><rect x="153.9" y="435.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (1,125 samples, 1.20%)</title><rect x="153.9" y="419.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,125 samples, 1.20%)</title><rect x="153.9" y="403.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.02%)</title><rect x="153.9" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.02%)</title><rect x="153.9" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$266/153627331.get$Lambda (23 samples, 0.02%)</title><rect x="153.9" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$266 (23 samples, 0.02%)</title><rect x="153.9" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="156.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (94 samples, 0.10%)</title><rect x="154.2" y="387.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (94 samples, 0.10%)</title><rect x="154.2" y="371.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (48 samples, 0.05%)</title><rect x="154.2" y="355.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="157.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="154.8" y="355.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="154.8" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="154.8" y="323.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="157.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (101 samples, 0.11%)</title><rect x="155.4" y="387.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (93 samples, 0.10%)</title><rect x="155.5" y="371.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (93 samples, 0.10%)</title><rect x="155.5" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (46 samples, 0.05%)</title><rect x="155.5" y="339.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="158.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="156.1" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="156.1" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="156.1" y="307.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="159.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (907 samples, 0.97%)</title><rect x="156.6" y="387.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (317 samples, 0.34%)</title><rect x="156.6" y="371.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (317 samples, 0.34%)</title><rect x="156.6" y="355.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (317 samples, 0.34%)</title><rect x="156.6" y="339.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$259/340323460.accept (103 samples, 0.11%)</title><rect x="156.6" y="323.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (103 samples, 0.11%)</title><rect x="156.6" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (103 samples, 0.11%)</title><rect x="156.6" y="291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.02%)</title><rect x="156.6" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.02%)</title><rect x="156.6" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/281969796.get$Lambda (20 samples, 0.02%)</title><rect x="156.6" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$260 (20 samples, 0.02%)</title><rect x="156.6" y="227.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="159.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (83 samples, 0.09%)</title><rect x="156.9" y="275.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (83 samples, 0.09%)</title><rect x="156.9" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (50 samples, 0.05%)</title><rect x="156.9" y="243.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="159.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.04%)</title><rect x="157.5" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.04%)</title><rect x="157.5" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.04%)</title><rect x="157.5" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="160.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$265/590862494.accept (132 samples, 0.14%)</title><rect x="157.9" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (132 samples, 0.14%)</title><rect x="157.9" y="307.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (132 samples, 0.14%)</title><rect x="157.9" y="291.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (132 samples, 0.14%)</title><rect x="157.9" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (132 samples, 0.14%)</title><rect x="157.9" y="259.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (132 samples, 0.14%)</title><rect x="157.9" y="243.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (132 samples, 0.14%)</title><rect x="157.9" y="227.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (132 samples, 0.14%)</title><rect x="157.9" y="211.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (132 samples, 0.14%)</title><rect x="157.9" y="195.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (132 samples, 0.14%)</title><rect x="157.9" y="179.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (56 samples, 0.06%)</title><rect x="157.9" y="163.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (56 samples, 0.06%)</title><rect x="157.9" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (33 samples, 0.04%)</title><rect x="157.9" y="131.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="160.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (23 samples, 0.02%)</title><rect x="158.4" y="131.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (23 samples, 0.02%)</title><rect x="158.4" y="115.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (23 samples, 0.02%)</title><rect x="158.4" y="99.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (23 samples, 0.02%)</title><rect x="158.4" y="83.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (23 samples, 0.02%)</title><rect x="158.4" y="67.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (23 samples, 0.02%)</title><rect x="158.4" y="51.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="161.4" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (76 samples, 0.08%)</title><rect x="158.6" y="163.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (76 samples, 0.08%)</title><rect x="158.6" y="147.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.6" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (24 samples, 0.03%)</title><rect x="158.6" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.6" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (24 samples, 0.03%)</title><rect x="158.6" y="115.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="161.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (52 samples, 0.06%)</title><rect x="159.0" y="131.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.0" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (26 samples, 0.03%)</title><rect x="159.0" y="115.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="162.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (26 samples, 0.03%)</title><rect x="159.3" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (26 samples, 0.03%)</title><rect x="159.3" y="99.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (26 samples, 0.03%)</title><rect x="159.3" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (26 samples, 0.03%)</title><rect x="159.3" y="67.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (26 samples, 0.03%)</title><rect x="159.3" y="51.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (26 samples, 0.03%)</title><rect x="159.3" y="35.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="162.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (82 samples, 0.09%)</title><rect x="159.6" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (82 samples, 0.09%)</title><rect x="159.6" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (82 samples, 0.09%)</title><rect x="159.6" y="291.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="162.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (590 samples, 0.63%)</title><rect x="160.6" y="371.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (57 samples, 0.06%)</title><rect x="160.6" y="355.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="163.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (28 samples, 0.03%)</title><rect x="161.4" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (28 samples, 0.03%)</title><rect x="161.4" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.03%)</title><rect x="161.4" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="164.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (505 samples, 0.54%)</title><rect x="161.7" y="355.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (33 samples, 0.04%)</title><rect x="161.7" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="164.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (271 samples, 0.29%)</title><rect x="162.1" y="339.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (47 samples, 0.05%)</title><rect x="162.1" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (47 samples, 0.05%)</title><rect x="162.1" y="307.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="165.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (43 samples, 0.05%)</title><rect x="162.7" y="323.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="165.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (181 samples, 0.19%)</title><rect x="163.3" y="323.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (43 samples, 0.05%)</title><rect x="163.7" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="166.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (30 samples, 0.03%)</title><rect x="164.3" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (30 samples, 0.03%)</title><rect x="164.3" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="167.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (72 samples, 0.08%)</title><rect x="164.6" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (26 samples, 0.03%)</title><rect x="164.6" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="167.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (20 samples, 0.02%)</title><rect x="165.0" y="291.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="168.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (26 samples, 0.03%)</title><rect x="165.2" y="291.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="168.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (201 samples, 0.21%)</title><rect x="165.5" y="339.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.5" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.03%)</title><rect x="165.5" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="168.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (101 samples, 0.11%)</title><rect x="165.9" y="323.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.06%)</title><rect x="165.9" y="307.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="168.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (48 samples, 0.05%)</title><rect x="166.6" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.6" y="318.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.05%)</title><rect x="166.6" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="169.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (69 samples, 0.07%)</title><rect x="167.2" y="323.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (69 samples, 0.07%)</title><rect x="167.2" y="307.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (69 samples, 0.07%)</title><rect x="167.2" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (69 samples, 0.07%)</title><rect x="167.2" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (69 samples, 0.07%)</title><rect x="167.2" y="259.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.2" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (69 samples, 0.07%)</title><rect x="167.2" y="243.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="170.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (137 samples, 0.15%)</title><rect x="168.1" y="579.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (137 samples, 0.15%)</title><rect x="168.1" y="563.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (137 samples, 0.15%)</title><rect x="168.1" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (137 samples, 0.15%)</title><rect x="168.1" y="531.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (137 samples, 0.15%)</title><rect x="168.1" y="515.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (137 samples, 0.15%)</title><rect x="168.1" y="499.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (56 samples, 0.06%)</title><rect x="168.1" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.1" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (56 samples, 0.06%)</title><rect x="168.1" y="467.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="171.1" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (81 samples, 0.09%)</title><rect x="168.8" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.8" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (81 samples, 0.09%)</title><rect x="168.8" y="467.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="171.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,119 samples, 5.46%)</title><rect x="169.8" y="755.0" width="64.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.8" y="766.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,119 samples, 5.46%)</title><rect x="169.8" y="739.0" width="64.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.8" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,261 samples, 4.55%)</title><rect x="169.8" y="723.0" width="53.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.8" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (4,261 samples, 4.55%)</title><rect x="169.8" y="707.0" width="53.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.8" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,261 samples, 4.55%)</title><rect x="169.8" y="691.0" width="53.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.8" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (77 samples, 0.08%)</title><rect x="169.8" y="675.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (77 samples, 0.08%)</title><rect x="169.8" y="659.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (77 samples, 0.08%)</title><rect x="169.8" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (77 samples, 0.08%)</title><rect x="169.8" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1151844284.linkToTargetMethod (40 samples, 0.04%)</title><rect x="169.8" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1380806038.invoke (40 samples, 0.04%)</title><rect x="169.8" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.04%)</title><rect x="169.8" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (40 samples, 0.04%)</title><rect x="169.8" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (40 samples, 0.04%)</title><rect x="169.8" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.8" y="558.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.04%)</title><rect x="169.8" y="531.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="172.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (37 samples, 0.04%)</title><rect x="170.3" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.04%)</title><rect x="170.3" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.04%)</title><rect x="170.3" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (37 samples, 0.04%)</title><rect x="170.3" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (37 samples, 0.04%)</title><rect x="170.3" y="547.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="173.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4,184 samples, 4.47%)</title><rect x="170.8" y="675.0" width="52.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.8" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4,184 samples, 4.47%)</title><rect x="170.8" y="659.0" width="52.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.8" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,184 samples, 4.47%)</title><rect x="170.8" y="643.0" width="52.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.8" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4,184 samples, 4.47%)</title><rect x="170.8" y="627.0" width="52.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.8" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,961 samples, 2.09%)</title><rect x="170.8" y="611.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.8" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,961 samples, 2.09%)</title><rect x="170.8" y="595.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.8" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,961 samples, 2.09%)</title><rect x="170.8" y="579.0" width="24.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.8" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,961 samples, 2.09%)</title><rect x="170.8" y="563.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,961 samples, 2.09%)</title><rect x="170.8" y="547.0" width="24.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.8" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,961 samples, 2.09%)</title><rect x="170.8" y="531.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.8" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,961 samples, 2.09%)</title><rect x="170.8" y="515.0" width="24.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,908 samples, 2.04%)</title><rect x="170.8" y="499.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.8" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,908 samples, 2.04%)</title><rect x="170.8" y="483.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.8" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,863 samples, 1.99%)</title><rect x="170.8" y="467.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.8" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (52 samples, 0.06%)</title><rect x="170.8" y="451.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="173.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1524095918.apply (41 samples, 0.04%)</title><rect x="171.4" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (41 samples, 0.04%)</title><rect x="171.4" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (41 samples, 0.04%)</title><rect x="171.4" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (41 samples, 0.04%)</title><rect x="171.4" y="403.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="171.4" y="387.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="174.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (1,680 samples, 1.79%)</title><rect x="171.9" y="451.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.9" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,680 samples, 1.79%)</title><rect x="171.9" y="435.0" width="21.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.9" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.03%)</title><rect x="171.9" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.03%)</title><rect x="171.9" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.get$Lambda (30 samples, 0.03%)</title><rect x="171.9" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$306 (30 samples, 0.03%)</title><rect x="171.9" y="371.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="174.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (88 samples, 0.09%)</title><rect x="172.3" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (88 samples, 0.09%)</title><rect x="172.3" y="403.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (51 samples, 0.05%)</title><rect x="172.3" y="387.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="175.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="173.0" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (37 samples, 0.04%)</title><rect x="173.0" y="371.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (37 samples, 0.04%)</title><rect x="173.0" y="355.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="176.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,562 samples, 1.67%)</title><rect x="173.4" y="419.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.03%)</title><rect x="173.4" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.03%)</title><rect x="173.4" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/444722083.get$Lambda (29 samples, 0.03%)</title><rect x="173.4" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (29 samples, 0.03%)</title><rect x="173.4" y="355.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="176.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (86 samples, 0.09%)</title><rect x="173.8" y="403.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (86 samples, 0.09%)</title><rect x="173.8" y="387.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (42 samples, 0.04%)</title><rect x="173.8" y="371.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="176.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="174.3" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="174.3" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="174.3" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="177.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,447 samples, 1.54%)</title><rect x="174.9" y="403.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$116/1476717268.apply (101 samples, 0.11%)</title><rect x="174.9" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (101 samples, 0.11%)</title><rect x="174.9" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (101 samples, 0.11%)</title><rect x="174.9" y="355.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (28 samples, 0.03%)</title><rect x="174.9" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="177.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (73 samples, 0.08%)</title><rect x="175.2" y="339.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (27 samples, 0.03%)</title><rect x="175.2" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="178.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="175.6" y="323.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="178.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,346 samples, 1.44%)</title><rect x="176.1" y="387.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="176.1" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="176.1" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/357846757.linkToTargetMethod (38 samples, 0.04%)</title><rect x="176.6" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/951328009.invokeStatic (38 samples, 0.04%)</title><rect x="176.6" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="179.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.get$Lambda (38 samples, 0.04%)</title><rect x="176.6" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (38 samples, 0.04%)</title><rect x="176.6" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="179.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (275 samples, 0.29%)</title><rect x="177.0" y="371.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (107 samples, 0.11%)</title><rect x="177.0" y="355.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (46 samples, 0.05%)</title><rect x="177.0" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.0" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (46 samples, 0.05%)</title><rect x="177.0" y="323.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="180.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (61 samples, 0.07%)</title><rect x="177.6" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.6" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (61 samples, 0.07%)</title><rect x="177.6" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="180.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (86 samples, 0.09%)</title><rect x="178.4" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (86 samples, 0.09%)</title><rect x="178.4" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (86 samples, 0.09%)</title><rect x="178.4" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (26 samples, 0.03%)</title><rect x="178.4" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (26 samples, 0.03%)</title><rect x="178.4" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (26 samples, 0.03%)</title><rect x="178.4" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.4" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (26 samples, 0.03%)</title><rect x="178.4" y="259.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="181.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$285/349554149.get (25 samples, 0.03%)</title><rect x="178.7" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (25 samples, 0.03%)</title><rect x="178.7" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="181.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (35 samples, 0.04%)</title><rect x="179.0" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="182.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (35 samples, 0.04%)</title><rect x="179.0" y="291.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="182.0" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (35 samples, 0.04%)</title><rect x="179.0" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.0" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (35 samples, 0.04%)</title><rect x="179.0" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="182.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (82 samples, 0.09%)</title><rect x="179.5" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (82 samples, 0.09%)</title><rect x="179.5" y="339.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="182.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (156 samples, 0.17%)</title><rect x="180.5" y="371.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (80 samples, 0.09%)</title><rect x="180.5" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (49 samples, 0.05%)</title><rect x="180.5" y="339.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="183.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.03%)</title><rect x="181.1" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (31 samples, 0.03%)</title><rect x="181.1" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (31 samples, 0.03%)</title><rect x="181.1" y="307.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="184.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (76 samples, 0.08%)</title><rect x="181.5" y="355.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (76 samples, 0.08%)</title><rect x="181.5" y="339.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (47 samples, 0.05%)</title><rect x="181.5" y="323.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="184.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.03%)</title><rect x="182.1" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (29 samples, 0.03%)</title><rect x="182.1" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.03%)</title><rect x="182.1" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="185.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (42 samples, 0.04%)</title><rect x="182.5" y="371.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="185.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (45 samples, 0.05%)</title><rect x="183.0" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="186.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.04%)</title><rect x="183.6" y="371.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="186.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (703 samples, 0.75%)</title><rect x="184.2" y="371.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (703 samples, 0.75%)</title><rect x="184.2" y="355.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (703 samples, 0.75%)</title><rect x="184.2" y="339.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (95 samples, 0.10%)</title><rect x="184.2" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (95 samples, 0.10%)</title><rect x="184.2" y="307.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.get$Lambda (25 samples, 0.03%)</title><rect x="184.2" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$291 (25 samples, 0.03%)</title><rect x="184.2" y="275.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="187.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1587562441.get$Lambda (28 samples, 0.03%)</title><rect x="184.6" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$292 (28 samples, 0.03%)</title><rect x="184.6" y="275.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="187.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1163391232.get$Lambda (42 samples, 0.04%)</title><rect x="184.9" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$295 (42 samples, 0.04%)</title><rect x="184.9" y="275.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="187.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (68 samples, 0.07%)</title><rect x="185.4" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="188.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (68 samples, 0.07%)</title><rect x="185.4" y="307.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (33 samples, 0.04%)</title><rect x="185.4" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="188.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="185.9" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="185.9" y="275.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.04%)</title><rect x="185.9" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="188.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (53 samples, 0.06%)</title><rect x="186.3" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (45 samples, 0.05%)</title><rect x="187.0" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="187.0" y="307.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="190.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (108 samples, 0.12%)</title><rect x="187.5" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (108 samples, 0.12%)</title><rect x="187.5" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="187.5" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="187.5" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$298/1051934413.get$Lambda (25 samples, 0.03%)</title><rect x="187.5" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="190.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$298 (25 samples, 0.03%)</title><rect x="187.5" y="243.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="190.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (83 samples, 0.09%)</title><rect x="187.8" y="291.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (83 samples, 0.09%)</title><rect x="187.8" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (83 samples, 0.09%)</title><rect x="187.8" y="259.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (48 samples, 0.05%)</title><rect x="187.8" y="243.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="190.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="188.4" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (35 samples, 0.04%)</title><rect x="188.4" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.04%)</title><rect x="188.4" y="211.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="191.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (120 samples, 0.13%)</title><rect x="188.9" y="323.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.13%)</title><rect x="188.9" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116237769.invoke (120 samples, 0.13%)</title><rect x="188.9" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.13%)</title><rect x="188.9" y="275.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (25 samples, 0.03%)</title><rect x="188.9" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.03%)</title><rect x="188.9" y="243.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="191.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (95 samples, 0.10%)</title><rect x="189.2" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (95 samples, 0.10%)</title><rect x="189.2" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.2" y="254.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.10%)</title><rect x="189.2" y="227.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="192.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (214 samples, 0.23%)</title><rect x="190.4" y="323.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (87 samples, 0.09%)</title><rect x="190.4" y="307.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="193.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (127 samples, 0.14%)</title><rect x="191.5" y="307.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (127 samples, 0.14%)</title><rect x="191.5" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116237769.invoke (127 samples, 0.14%)</title><rect x="191.5" y="275.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (127 samples, 0.14%)</title><rect x="191.5" y="259.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (28 samples, 0.03%)</title><rect x="191.5" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.03%)</title><rect x="191.5" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="194.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (99 samples, 0.11%)</title><rect x="191.8" y="243.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (99 samples, 0.11%)</title><rect x="191.8" y="227.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.8" y="238.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.11%)</title><rect x="191.8" y="211.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="194.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/60851830.apply (90 samples, 0.10%)</title><rect x="193.1" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (90 samples, 0.10%)</title><rect x="193.1" y="435.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (44 samples, 0.05%)</title><rect x="193.1" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.1" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (44 samples, 0.05%)</title><rect x="193.1" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.1" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (44 samples, 0.05%)</title><rect x="193.1" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.1" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (44 samples, 0.05%)</title><rect x="193.1" y="371.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="196.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (46 samples, 0.05%)</title><rect x="193.6" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="193.6" y="403.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="196.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (45 samples, 0.05%)</title><rect x="194.2" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="197.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (45 samples, 0.05%)</title><rect x="194.2" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.apply (45 samples, 0.05%)</title><rect x="194.2" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (45 samples, 0.05%)</title><rect x="194.2" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (45 samples, 0.05%)</title><rect x="194.2" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="194.2" y="387.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="197.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1477862221.apply (53 samples, 0.06%)</title><rect x="194.8" y="499.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="197.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (53 samples, 0.06%)</title><rect x="194.8" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (53 samples, 0.06%)</title><rect x="194.8" y="467.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="197.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,223 samples, 2.37%)</title><rect x="195.5" y="611.0" width="28.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.5" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (123 samples, 0.13%)</title><rect x="195.5" y="595.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (123 samples, 0.13%)</title><rect x="195.5" y="579.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (123 samples, 0.13%)</title><rect x="195.5" y="563.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (123 samples, 0.13%)</title><rect x="195.5" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (123 samples, 0.13%)</title><rect x="195.5" y="531.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.5" y="542.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.13%)</title><rect x="195.5" y="515.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="198.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (82 samples, 0.09%)</title><rect x="197.0" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (82 samples, 0.09%)</title><rect x="197.0" y="579.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (82 samples, 0.09%)</title><rect x="197.0" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (82 samples, 0.09%)</title><rect x="197.0" y="547.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (82 samples, 0.09%)</title><rect x="197.0" y="531.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.0" y="542.0"></text>
</g>
<g>
<title>byte[] (82 samples, 0.09%)</title><rect x="197.0" y="515.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="200.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (223 samples, 0.24%)</title><rect x="198.0" y="595.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.0" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (35 samples, 0.04%)</title><rect x="198.0" y="579.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="201.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.07%)</title><rect x="198.5" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.07%)</title><rect x="198.5" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.03%)</title><rect x="198.5" y="547.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="201.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.04%)</title><rect x="198.8" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.8" y="558.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.04%)</title><rect x="198.8" y="531.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="201.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.05%)</title><rect x="199.3" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.05%)</title><rect x="199.3" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.3" y="574.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.05%)</title><rect x="199.3" y="547.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="202.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (82 samples, 0.09%)</title><rect x="199.8" y="579.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (82 samples, 0.09%)</title><rect x="199.8" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.04%)</title><rect x="199.8" y="547.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="202.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.05%)</title><rect x="200.2" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.2" y="558.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.05%)</title><rect x="200.2" y="531.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="203.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (590 samples, 0.63%)</title><rect x="200.9" y="595.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (590 samples, 0.63%)</title><rect x="200.9" y="579.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (590 samples, 0.63%)</title><rect x="200.9" y="563.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.9" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (23 samples, 0.02%)</title><rect x="200.9" y="547.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="203.9" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.03%)</title><rect x="201.1" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="204.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (67 samples, 0.07%)</title><rect x="201.5" y="547.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="204.5" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (21 samples, 0.02%)</title><rect x="202.4" y="547.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="205.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.04%)</title><rect x="202.6" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.04%)</title><rect x="202.6" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (40 samples, 0.04%)</title><rect x="202.6" y="515.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="205.6" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (40 samples, 0.04%)</title><rect x="202.6" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="205.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (47 samples, 0.05%)</title><rect x="203.1" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.1" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (47 samples, 0.05%)</title><rect x="203.1" y="531.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="206.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (303 samples, 0.32%)</title><rect x="203.7" y="547.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (303 samples, 0.32%)</title><rect x="203.7" y="531.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (303 samples, 0.32%)</title><rect x="203.7" y="515.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (74 samples, 0.08%)</title><rect x="203.7" y="499.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (74 samples, 0.08%)</title><rect x="203.7" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (74 samples, 0.08%)</title><rect x="203.7" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="203.7" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="203.7" y="435.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="203.7" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="203.7" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.08%)</title><rect x="203.7" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.08%)</title><rect x="203.7" y="371.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="206.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (122 samples, 0.13%)</title><rect x="204.7" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.7" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (122 samples, 0.13%)</title><rect x="204.7" y="483.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="207.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (53 samples, 0.06%)</title><rect x="204.7" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (53 samples, 0.06%)</title><rect x="204.7" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.06%)</title><rect x="204.7" y="435.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="207.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (69 samples, 0.07%)</title><rect x="205.3" y="467.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.3" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (69 samples, 0.07%)</title><rect x="205.3" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="208.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (107 samples, 0.11%)</title><rect x="206.2" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (107 samples, 0.11%)</title><rect x="206.2" y="483.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="209.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (58 samples, 0.06%)</title><rect x="207.6" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (58 samples, 0.06%)</title><rect x="207.6" y="531.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="210.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,205 samples, 1.29%)</title><rect x="208.3" y="595.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.3" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (53 samples, 0.06%)</title><rect x="208.3" y="579.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="211.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (84 samples, 0.09%)</title><rect x="209.0" y="579.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (84 samples, 0.09%)</title><rect x="209.0" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.0" y="574.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.09%)</title><rect x="209.0" y="547.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="212.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (173 samples, 0.18%)</title><rect x="210.0" y="579.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (173 samples, 0.18%)</title><rect x="210.0" y="563.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.07%)</title><rect x="210.0" y="547.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="213.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (104 samples, 0.11%)</title><rect x="210.9" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.9" y="558.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.11%)</title><rect x="210.9" y="531.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="213.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (895 samples, 0.96%)</title><rect x="212.2" y="579.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (260 samples, 0.28%)</title><rect x="212.2" y="563.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (260 samples, 0.28%)</title><rect x="212.2" y="547.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (112 samples, 0.12%)</title><rect x="212.2" y="531.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="215.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (148 samples, 0.16%)</title><rect x="213.6" y="531.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.6" y="542.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.16%)</title><rect x="213.6" y="515.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="216.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (144 samples, 0.15%)</title><rect x="215.5" y="563.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (144 samples, 0.15%)</title><rect x="215.5" y="547.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.5" y="558.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.09%)</title><rect x="215.5" y="531.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="218.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.06%)</title><rect x="216.6" y="531.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="219.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (135 samples, 0.14%)</title><rect x="217.3" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (135 samples, 0.14%)</title><rect x="217.3" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (135 samples, 0.14%)</title><rect x="217.3" y="531.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.07%)</title><rect x="217.3" y="515.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="220.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.07%)</title><rect x="218.1" y="515.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.1" y="526.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.07%)</title><rect x="218.1" y="499.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="221.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (133 samples, 0.14%)</title><rect x="219.0" y="563.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (133 samples, 0.14%)</title><rect x="219.0" y="547.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (133 samples, 0.14%)</title><rect x="219.0" y="531.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (133 samples, 0.14%)</title><rect x="219.0" y="515.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (133 samples, 0.14%)</title><rect x="219.0" y="499.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (133 samples, 0.14%)</title><rect x="219.0" y="483.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="222.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (223 samples, 0.24%)</title><rect x="220.7" y="563.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (84 samples, 0.09%)</title><rect x="220.7" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (84 samples, 0.09%)</title><rect x="220.7" y="531.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="223.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (84 samples, 0.09%)</title><rect x="221.7" y="547.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (84 samples, 0.09%)</title><rect x="221.7" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="224.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$281/147625240.apply (55 samples, 0.06%)</title><rect x="222.8" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (55 samples, 0.06%)</title><rect x="222.8" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="225.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (55 samples, 0.06%)</title><rect x="222.8" y="515.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="225.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (858 samples, 0.92%)</title><rect x="223.5" y="723.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (858 samples, 0.92%)</title><rect x="223.5" y="707.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (858 samples, 0.92%)</title><rect x="223.5" y="691.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (858 samples, 0.92%)</title><rect x="223.5" y="675.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (858 samples, 0.92%)</title><rect x="223.5" y="659.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (850 samples, 0.91%)</title><rect x="223.5" y="643.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.04%)</title><rect x="223.5" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.04%)</title><rect x="223.5" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (28 samples, 0.03%)</title><rect x="223.6" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$223 (28 samples, 0.03%)</title><rect x="223.6" y="579.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="226.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (46 samples, 0.05%)</title><rect x="224.0" y="627.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="227.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (44 samples, 0.05%)</title><rect x="224.5" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (44 samples, 0.05%)</title><rect x="224.5" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (29 samples, 0.03%)</title><rect x="224.7" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (29 samples, 0.03%)</title><rect x="224.7" y="579.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="227.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (720 samples, 0.77%)</title><rect x="225.1" y="627.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (720 samples, 0.77%)</title><rect x="225.1" y="611.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.run (638 samples, 0.68%)</title><rect x="225.1" y="595.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (638 samples, 0.68%)</title><rect x="225.1" y="579.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="228.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (638 samples, 0.68%)</title><rect x="225.1" y="563.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (164 samples, 0.18%)</title><rect x="225.1" y="547.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (116 samples, 0.12%)</title><rect x="225.1" y="531.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.1" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (45 samples, 0.05%)</title><rect x="225.1" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.1" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (45 samples, 0.05%)</title><rect x="225.1" y="499.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="228.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (71 samples, 0.08%)</title><rect x="225.7" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (71 samples, 0.08%)</title><rect x="225.7" y="499.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="228.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (48 samples, 0.05%)</title><rect x="226.6" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (48 samples, 0.05%)</title><rect x="226.6" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (48 samples, 0.05%)</title><rect x="226.6" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/1836463382.get (33 samples, 0.04%)</title><rect x="226.6" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.6" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (33 samples, 0.04%)</title><rect x="226.6" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="229.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (459 samples, 0.49%)</title><rect x="227.4" y="547.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (30 samples, 0.03%)</title><rect x="227.4" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.4" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (30 samples, 0.03%)</title><rect x="227.4" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (30 samples, 0.03%)</title><rect x="227.4" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (30 samples, 0.03%)</title><rect x="227.4" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.4" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (30 samples, 0.03%)</title><rect x="227.4" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="230.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (429 samples, 0.46%)</title><rect x="227.7" y="531.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (184 samples, 0.20%)</title><rect x="227.7" y="515.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.04%)</title><rect x="227.7" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (39 samples, 0.04%)</title><rect x="227.7" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.04%)</title><rect x="227.7" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (39 samples, 0.04%)</title><rect x="227.7" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (39 samples, 0.04%)</title><rect x="227.7" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.7" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (39 samples, 0.04%)</title><rect x="227.7" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="230.7" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (30 samples, 0.03%)</title><rect x="228.2" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (30 samples, 0.03%)</title><rect x="228.2" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (30 samples, 0.03%)</title><rect x="228.2" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (30 samples, 0.03%)</title><rect x="228.2" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (30 samples, 0.03%)</title><rect x="228.2" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.2" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (30 samples, 0.03%)</title><rect x="228.2" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="231.2" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (42 samples, 0.04%)</title><rect x="228.6" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.6" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (42 samples, 0.04%)</title><rect x="228.6" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.6" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (42 samples, 0.04%)</title><rect x="228.6" y="467.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="231.6" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (29 samples, 0.03%)</title><rect x="229.1" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (29 samples, 0.03%)</title><rect x="229.1" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (29 samples, 0.03%)</title><rect x="229.1" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="232.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (44 samples, 0.05%)</title><rect x="229.5" y="499.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="232.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (98 samples, 0.10%)</title><rect x="230.0" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="233.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (34 samples, 0.04%)</title><rect x="230.0" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (34 samples, 0.04%)</title><rect x="230.0" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (34 samples, 0.04%)</title><rect x="230.0" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.04%)</title><rect x="230.0" y="451.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="233.0" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (36 samples, 0.04%)</title><rect x="230.5" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (36 samples, 0.04%)</title><rect x="230.5" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (36 samples, 0.04%)</title><rect x="230.5" y="467.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="233.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (28 samples, 0.03%)</title><rect x="230.9" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (28 samples, 0.03%)</title><rect x="230.9" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="233.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (147 samples, 0.16%)</title><rect x="231.3" y="515.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (31 samples, 0.03%)</title><rect x="231.3" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="234.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (116 samples, 0.12%)</title><rect x="231.7" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (41 samples, 0.04%)</title><rect x="231.7" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (41 samples, 0.04%)</title><rect x="231.7" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (41 samples, 0.04%)</title><rect x="231.7" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (41 samples, 0.04%)</title><rect x="231.7" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="234.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (75 samples, 0.08%)</title><rect x="232.2" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (75 samples, 0.08%)</title><rect x="232.2" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (48 samples, 0.05%)</title><rect x="232.2" y="451.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="235.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (27 samples, 0.03%)</title><rect x="232.8" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (27 samples, 0.03%)</title><rect x="232.8" y="435.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="235.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (82 samples, 0.09%)</title><rect x="233.1" y="595.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (82 samples, 0.09%)</title><rect x="233.1" y="579.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (82 samples, 0.09%)</title><rect x="233.1" y="563.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (82 samples, 0.09%)</title><rect x="233.1" y="547.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (82 samples, 0.09%)</title><rect x="233.1" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (82 samples, 0.09%)</title><rect x="233.1" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (82 samples, 0.09%)</title><rect x="233.1" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/2089965289.accept (82 samples, 0.09%)</title><rect x="233.1" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (82 samples, 0.09%)</title><rect x="233.1" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (82 samples, 0.09%)</title><rect x="233.1" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (82 samples, 0.09%)</title><rect x="233.1" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (82 samples, 0.09%)</title><rect x="233.1" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.apply (82 samples, 0.09%)</title><rect x="233.1" y="403.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (82 samples, 0.09%)</title><rect x="233.1" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (82 samples, 0.09%)</title><rect x="233.1" y="371.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="236.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$107/373692322.run (303 samples, 0.32%)</title><rect x="234.3" y="755.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocallyAsync$1 (303 samples, 0.32%)</title><rect x="234.3" y="739.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (303 samples, 0.32%)</title><rect x="234.3" y="723.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (303 samples, 0.32%)</title><rect x="234.3" y="707.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (303 samples, 0.32%)</title><rect x="234.3" y="691.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.3" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 0.03%)</title><rect x="234.3" y="675.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="237.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (55 samples, 0.06%)</title><rect x="234.6" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.6" y="686.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.02%)</title><rect x="234.6" y="659.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="237.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.02%)</title><rect x="234.9" y="659.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="237.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (224 samples, 0.24%)</title><rect x="235.3" y="675.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (224 samples, 0.24%)</title><rect x="235.3" y="659.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (133 samples, 0.14%)</title><rect x="235.3" y="643.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.3" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (133 samples, 0.14%)</title><rect x="235.3" y="627.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="238.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (91 samples, 0.10%)</title><rect x="236.9" y="643.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (61 samples, 0.07%)</title><rect x="236.9" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.9" y="638.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (61 samples, 0.07%)</title><rect x="236.9" y="611.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="239.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (28 samples, 0.03%)</title><rect x="237.7" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (24 samples, 0.03%)</title><rect x="237.8" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.8" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Value (24 samples, 0.03%)</title><rect x="237.8" y="595.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="240.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$277/1271947751.run (19,790 samples, 21.12%)</title><rect x="238.1" y="755.0" width="249.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.1" y="766.0">ru/mail/polis/service/ShardedHttp..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodeRequest$0 (19,790 samples, 21.12%)</title><rect x="238.1" y="739.0" width="249.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.1" y="750.0">ru/mail/polis/service/ShardedHttp..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (19,790 samples, 21.12%)</title><rect x="238.1" y="723.0" width="249.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.1" y="734.0">ru/mail/polis/service/ShardedHttp..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (19,790 samples, 21.12%)</title><rect x="238.1" y="707.0" width="249.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.1" y="718.0">ru/mail/polis/service/ShardedHttp..</text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (19,790 samples, 21.12%)</title><rect x="238.1" y="691.0" width="249.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="241.1" y="702.0">ru/mail/polis/service/HttpApiBase..</text>
</g>
<g>
<title>one.nio.http.Response (833 samples, 0.89%)</title><rect x="238.1" y="675.0" width="10.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="241.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5,433 samples, 5.80%)</title><rect x="248.6" y="675.0" width="68.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.6" y="686.0">one/nio..</text>
</g>
<g>
<title>byte[] (2,494 samples, 2.66%)</title><rect x="248.6" y="659.0" width="31.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="251.6" y="670.0">by..</text>
</g>
<g>
<title>java.lang.String[] (2,017 samples, 2.15%)</title><rect x="280.0" y="659.0" width="25.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="283.0" y="670.0">j..</text>
</g>
<g>
<title>java.lang.String (922 samples, 0.98%)</title><rect x="305.4" y="659.0" width="11.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="308.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (13,524 samples, 14.43%)</title><rect x="317.0" y="675.0" width="170.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.0" y="686.0">ru/mail/polis/dao/MyDA..</text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (13,524 samples, 14.43%)</title><rect x="317.0" y="659.0" width="170.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.0" y="670.0">ru/mail/polis/dao/MyDA..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5,545 samples, 5.92%)</title><rect x="317.0" y="643.0" width="69.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.0" y="654.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,545 samples, 5.92%)</title><rect x="317.0" y="627.0" width="69.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="320.0" y="638.0">java.ni..</text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (7,979 samples, 8.52%)</title><rect x="386.8" y="643.0" width="100.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.8" y="654.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5,397 samples, 5.76%)</title><rect x="386.8" y="627.0" width="68.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.8" y="638.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,397 samples, 5.76%)</title><rect x="386.8" y="611.0" width="68.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="389.8" y="622.0">java.ni..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (37 samples, 0.04%)</title><rect x="454.8" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (37 samples, 0.04%)</title><rect x="454.8" y="611.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (37 samples, 0.04%)</title><rect x="454.8" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.8" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (34 samples, 0.04%)</title><rect x="454.8" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.8" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (34 samples, 0.04%)</title><rect x="454.8" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (2,545 samples, 2.72%)</title><rect x="455.3" y="627.0" width="32.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.3" y="638.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (324 samples, 0.35%)</title><rect x="455.3" y="611.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (324 samples, 0.35%)</title><rect x="455.3" y="595.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (100 samples, 0.11%)</title><rect x="455.3" y="579.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="458.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (224 samples, 0.24%)</title><rect x="456.5" y="579.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="459.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Value.of (2,221 samples, 2.37%)</title><rect x="459.3" y="611.0" width="28.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.3" y="622.0">r..</text>
</g>
<g>
<title>ru.mail.polis.dao.Value (2,221 samples, 2.37%)</title><rect x="459.3" y="595.0" width="28.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="462.3" y="606.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (12,512 samples, 13.35%)</title><rect x="487.3" y="803.0" width="157.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.3" y="814.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (12,512 samples, 13.35%)</title><rect x="487.3" y="787.0" width="157.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.3" y="798.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (12,512 samples, 13.35%)</title><rect x="487.3" y="771.0" width="157.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.3" y="782.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (12,512 samples, 13.35%)</title><rect x="487.3" y="755.0" width="157.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.3" y="766.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (12,512 samples, 13.35%)</title><rect x="487.3" y="739.0" width="157.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.3" y="750.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (12,512 samples, 13.35%)</title><rect x="487.3" y="723.0" width="157.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.3" y="734.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12,512 samples, 13.35%)</title><rect x="487.3" y="707.0" width="157.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.3" y="718.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12,512 samples, 13.35%)</title><rect x="487.3" y="691.0" width="157.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.3" y="702.0">java/util/concurrent..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.accept (4,305 samples, 4.59%)</title><rect x="487.3" y="675.0" width="54.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.3" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.lambda$getEmptyBodyResponseHandler$0 (4,305 samples, 4.59%)</title><rect x="487.3" y="659.0" width="54.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.3" y="670.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.valueOf (1,194 samples, 1.27%)</title><rect x="487.3" y="643.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1,194 samples, 1.27%)</title><rect x="487.3" y="627.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.3" y="638.0"></text>
</g>
<g>
<title>byte[] (613 samples, 0.65%)</title><rect x="487.3" y="611.0" width="7.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="490.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (581 samples, 0.62%)</title><rect x="495.0" y="611.0" width="7.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="498.0" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (697 samples, 0.74%)</title><rect x="502.4" y="643.0" width="8.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="505.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,414 samples, 2.58%)</title><rect x="511.1" y="643.0" width="30.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.1" y="654.0">on..</text>
</g>
<g>
<title>byte[] (1,029 samples, 1.10%)</title><rect x="511.1" y="627.0" width="13.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="514.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (772 samples, 0.82%)</title><rect x="524.1" y="627.0" width="9.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="527.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (613 samples, 0.65%)</title><rect x="533.8" y="627.0" width="7.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="536.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.accept (314 samples, 0.34%)</title><rect x="541.5" y="675.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.lambda$getResultHandler$0 (314 samples, 0.34%)</title><rect x="541.5" y="659.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.5" y="670.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (311 samples, 0.33%)</title><rect x="541.5" y="643.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.5" y="654.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (311 samples, 0.33%)</title><rect x="541.5" y="627.0" width="4.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="544.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$142/329492948.accept (6,458 samples, 6.89%)</title><rect x="545.5" y="675.0" width="81.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.5" y="686.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$sendResponseAsync$0 (6,458 samples, 6.89%)</title><rect x="545.5" y="659.0" width="81.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.5" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6,458 samples, 6.89%)</title><rect x="545.5" y="643.0" width="81.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.5" y="654.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,738 samples, 5.06%)</title><rect x="545.5" y="627.0" width="59.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.5" y="638.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3,174 samples, 3.39%)</title><rect x="545.5" y="611.0" width="40.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.5" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3,174 samples, 3.39%)</title><rect x="545.5" y="595.0" width="40.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.5" y="606.0">one..</text>
</g>
<g>
<title>byte[] (3,140 samples, 3.35%)</title><rect x="545.5" y="579.0" width="39.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="548.5" y="590.0">byt..</text>
</g>
<g>
<title>byte[] (34 samples, 0.04%)</title><rect x="585.0" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,564 samples, 1.67%)</title><rect x="585.5" y="611.0" width="19.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.5" y="622.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,564 samples, 1.67%)</title><rect x="585.5" y="595.0" width="19.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="588.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,720 samples, 1.84%)</title><rect x="605.2" y="627.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.2" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (1,720 samples, 1.84%)</title><rect x="605.2" y="611.0" width="21.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.2" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,720 samples, 1.84%)</title><rect x="605.2" y="595.0" width="21.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.2" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (768 samples, 0.82%)</title><rect x="605.2" y="579.0" width="9.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="608.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (952 samples, 1.02%)</title><rect x="614.8" y="579.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.8" y="590.0"></text>
</g>
<g>
<title>byte[] (952 samples, 1.02%)</title><rect x="614.8" y="563.0" width="12.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="617.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.accept (1,435 samples, 1.53%)</title><rect x="626.8" y="675.0" width="18.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodesResponsesAsync$3 (1,435 samples, 1.53%)</title><rect x="626.8" y="659.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponses (1,435 samples, 1.53%)</title><rect x="626.8" y="643.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.8" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (286 samples, 0.31%)</title><rect x="626.8" y="627.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="629.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,149 samples, 1.23%)</title><rect x="630.4" y="627.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.4" y="638.0"></text>
</g>
<g>
<title>byte[] (485 samples, 0.52%)</title><rect x="630.4" y="611.0" width="6.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="633.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (390 samples, 0.42%)</title><rect x="636.5" y="611.0" width="4.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="639.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (274 samples, 0.29%)</title><rect x="641.4" y="611.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="644.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (7,884 samples, 8.41%)</title><rect x="644.9" y="803.0" width="99.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.9" y="814.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (154 samples, 0.16%)</title><rect x="644.9" y="787.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (154 samples, 0.16%)</title><rect x="644.9" y="771.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1377655111.get$Lambda (84 samples, 0.09%)</title><rect x="644.9" y="755.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (84 samples, 0.09%)</title><rect x="644.9" y="739.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="647.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1072487675.get$Lambda (70 samples, 0.07%)</title><rect x="646.0" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$248 (70 samples, 0.07%)</title><rect x="646.0" y="739.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="649.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1148254374.linkToTargetMethod (130 samples, 0.14%)</title><rect x="646.8" y="787.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (130 samples, 0.14%)</title><rect x="646.8" y="771.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/1669720320.get$Lambda (130 samples, 0.14%)</title><rect x="646.8" y="755.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$241 (130 samples, 0.14%)</title><rect x="646.8" y="739.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="649.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,542 samples, 1.65%)</title><rect x="648.5" y="787.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/182260085.accept (1,309 samples, 1.40%)</title><rect x="648.5" y="771.0" width="16.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="651.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,309 samples, 1.40%)</title><rect x="648.5" y="755.0" width="16.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,309 samples, 1.40%)</title><rect x="648.5" y="739.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,309 samples, 1.40%)</title><rect x="648.5" y="723.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,309 samples, 1.40%)</title><rect x="648.5" y="707.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,309 samples, 1.40%)</title><rect x="648.5" y="691.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,309 samples, 1.40%)</title><rect x="648.5" y="675.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,309 samples, 1.40%)</title><rect x="648.5" y="659.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,309 samples, 1.40%)</title><rect x="648.5" y="643.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,309 samples, 1.40%)</title><rect x="648.5" y="627.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (1,309 samples, 1.40%)</title><rect x="648.5" y="611.0" width="16.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,309 samples, 1.40%)</title><rect x="648.5" y="595.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (463 samples, 0.49%)</title><rect x="648.5" y="579.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (463 samples, 0.49%)</title><rect x="648.5" y="563.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.5" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (195 samples, 0.21%)</title><rect x="648.5" y="547.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.5" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (195 samples, 0.21%)</title><rect x="648.5" y="531.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="651.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (268 samples, 0.29%)</title><rect x="650.9" y="547.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (129 samples, 0.14%)</title><rect x="650.9" y="531.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (129 samples, 0.14%)</title><rect x="650.9" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (129 samples, 0.14%)</title><rect x="650.9" y="499.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (129 samples, 0.14%)</title><rect x="650.9" y="483.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (129 samples, 0.14%)</title><rect x="650.9" y="467.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="653.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (139 samples, 0.15%)</title><rect x="652.6" y="531.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (139 samples, 0.15%)</title><rect x="652.6" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (139 samples, 0.15%)</title><rect x="652.6" y="499.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (139 samples, 0.15%)</title><rect x="652.6" y="483.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (139 samples, 0.15%)</title><rect x="652.6" y="467.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (136 samples, 0.15%)</title><rect x="652.6" y="451.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="655.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (89 samples, 0.09%)</title><rect x="654.3" y="579.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.09%)</title><rect x="654.3" y="563.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.09%)</title><rect x="654.3" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (89 samples, 0.09%)</title><rect x="654.3" y="531.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="657.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (89 samples, 0.09%)</title><rect x="654.3" y="515.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="657.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (755 samples, 0.81%)</title><rect x="655.5" y="579.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (405 samples, 0.43%)</title><rect x="655.5" y="563.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (269 samples, 0.29%)</title><rect x="655.5" y="547.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.5" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (269 samples, 0.29%)</title><rect x="655.5" y="531.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="658.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (136 samples, 0.15%)</title><rect x="658.8" y="547.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.8" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (136 samples, 0.15%)</title><rect x="658.8" y="531.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (136 samples, 0.15%)</title><rect x="658.8" y="515.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="661.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (350 samples, 0.37%)</title><rect x="660.6" y="563.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/1961873698.get (350 samples, 0.37%)</title><rect x="660.6" y="547.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (350 samples, 0.37%)</title><rect x="660.6" y="531.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (350 samples, 0.37%)</title><rect x="660.6" y="515.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (349 samples, 0.37%)</title><rect x="660.6" y="499.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.6" y="510.0"></text>
</g>
<g>
<title>byte[] (340 samples, 0.36%)</title><rect x="660.7" y="483.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/1936584687.accept (233 samples, 0.25%)</title><rect x="665.0" y="771.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (233 samples, 0.25%)</title><rect x="665.0" y="755.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/1669720320.run (233 samples, 0.25%)</title><rect x="665.0" y="739.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (233 samples, 0.25%)</title><rect x="665.0" y="723.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (233 samples, 0.25%)</title><rect x="665.0" y="707.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (233 samples, 0.25%)</title><rect x="665.0" y="691.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (233 samples, 0.25%)</title><rect x="665.0" y="675.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.0" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (233 samples, 0.25%)</title><rect x="665.0" y="659.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="668.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (797 samples, 0.85%)</title><rect x="667.9" y="787.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.9" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (797 samples, 0.85%)</title><rect x="667.9" y="771.0" width="10.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="670.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (245 samples, 0.26%)</title><rect x="677.9" y="787.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (115 samples, 0.12%)</title><rect x="677.9" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (115 samples, 0.12%)</title><rect x="677.9" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (115 samples, 0.12%)</title><rect x="677.9" y="739.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (115 samples, 0.12%)</title><rect x="677.9" y="723.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (115 samples, 0.12%)</title><rect x="677.9" y="707.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (115 samples, 0.12%)</title><rect x="677.9" y="691.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.9" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (115 samples, 0.12%)</title><rect x="677.9" y="675.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="680.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (130 samples, 0.14%)</title><rect x="679.4" y="771.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (130 samples, 0.14%)</title><rect x="679.4" y="755.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="682.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (859 samples, 0.92%)</title><rect x="681.0" y="787.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/167882164.run (419 samples, 0.45%)</title><rect x="681.0" y="771.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (419 samples, 0.45%)</title><rect x="681.0" y="755.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (419 samples, 0.45%)</title><rect x="681.0" y="739.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (419 samples, 0.45%)</title><rect x="681.0" y="723.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (419 samples, 0.45%)</title><rect x="681.0" y="707.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (419 samples, 0.45%)</title><rect x="681.0" y="691.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (419 samples, 0.45%)</title><rect x="681.0" y="675.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (419 samples, 0.45%)</title><rect x="681.0" y="659.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (418 samples, 0.45%)</title><rect x="681.0" y="643.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (418 samples, 0.45%)</title><rect x="681.0" y="627.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (312 samples, 0.33%)</title><rect x="681.0" y="611.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (312 samples, 0.33%)</title><rect x="681.0" y="595.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (312 samples, 0.33%)</title><rect x="681.0" y="579.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1151844284.linkToTargetMethod (231 samples, 0.25%)</title><rect x="681.0" y="563.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1380806038.invoke (231 samples, 0.25%)</title><rect x="681.0" y="547.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (231 samples, 0.25%)</title><rect x="681.0" y="531.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (231 samples, 0.25%)</title><rect x="681.0" y="515.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (231 samples, 0.25%)</title><rect x="681.0" y="499.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.0" y="510.0"></text>
</g>
<g>
<title>byte[] (231 samples, 0.25%)</title><rect x="681.0" y="483.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="684.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (81 samples, 0.09%)</title><rect x="683.9" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.09%)</title><rect x="683.9" y="547.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.09%)</title><rect x="683.9" y="531.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (81 samples, 0.09%)</title><rect x="683.9" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256 (81 samples, 0.09%)</title><rect x="683.9" y="499.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="686.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (106 samples, 0.11%)</title><rect x="684.9" y="611.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (106 samples, 0.11%)</title><rect x="684.9" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (106 samples, 0.11%)</title><rect x="684.9" y="579.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="687.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (106 samples, 0.11%)</title><rect x="684.9" y="563.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (106 samples, 0.11%)</title><rect x="684.9" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (106 samples, 0.11%)</title><rect x="684.9" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (105 samples, 0.11%)</title><rect x="684.9" y="515.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="687.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$184/853746396.run (440 samples, 0.47%)</title><rect x="686.3" y="771.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (440 samples, 0.47%)</title><rect x="686.3" y="755.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (170 samples, 0.18%)</title><rect x="686.3" y="739.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (170 samples, 0.18%)</title><rect x="686.3" y="723.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$252/1669380854.get$Lambda (170 samples, 0.18%)</title><rect x="686.3" y="707.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.3" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$252 (170 samples, 0.18%)</title><rect x="686.3" y="691.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="689.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (270 samples, 0.29%)</title><rect x="688.4" y="739.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (270 samples, 0.29%)</title><rect x="688.4" y="723.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (270 samples, 0.29%)</title><rect x="688.4" y="707.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (269 samples, 0.29%)</title><rect x="688.4" y="691.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="691.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,824 samples, 3.01%)</title><rect x="691.8" y="787.0" width="35.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.8" y="798.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.now (500 samples, 0.53%)</title><rect x="691.8" y="771.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.8" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (500 samples, 0.53%)</title><rect x="691.8" y="755.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.8" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (500 samples, 0.53%)</title><rect x="691.8" y="739.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.8" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (500 samples, 0.53%)</title><rect x="691.8" y="723.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.8" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (500 samples, 0.53%)</title><rect x="691.8" y="707.0" width="6.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="694.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2,324 samples, 2.48%)</title><rect x="698.1" y="771.0" width="29.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.1" y="782.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (304 samples, 0.32%)</title><rect x="698.1" y="755.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="701.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (304 samples, 0.32%)</title><rect x="698.1" y="739.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$311/1255574723.get$Lambda (304 samples, 0.32%)</title><rect x="698.1" y="723.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="701.1" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$311 (304 samples, 0.32%)</title><rect x="698.1" y="707.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="701.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (610 samples, 0.65%)</title><rect x="702.0" y="755.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (610 samples, 0.65%)</title><rect x="702.0" y="739.0" width="7.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="705.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (299 samples, 0.32%)</title><rect x="709.6" y="755.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.6" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (299 samples, 0.32%)</title><rect x="709.6" y="739.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="712.6" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (299 samples, 0.32%)</title><rect x="709.6" y="723.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="712.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1,111 samples, 1.19%)</title><rect x="713.4" y="755.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.4" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (486 samples, 0.52%)</title><rect x="713.4" y="739.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="716.4" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (625 samples, 0.67%)</title><rect x="719.5" y="739.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (625 samples, 0.67%)</title><rect x="719.5" y="723.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.5" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (625 samples, 0.67%)</title><rect x="719.5" y="707.0" width="7.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="722.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (934 samples, 1.00%)</title><rect x="727.4" y="787.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.08%)</title><rect x="727.4" y="771.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.08%)</title><rect x="727.4" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/387958208.get$Lambda (79 samples, 0.08%)</title><rect x="727.4" y="739.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.4" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (79 samples, 0.08%)</title><rect x="727.4" y="723.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="730.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (516 samples, 0.55%)</title><rect x="728.4" y="771.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (207 samples, 0.22%)</title><rect x="728.4" y="755.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.4" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (207 samples, 0.22%)</title><rect x="728.4" y="739.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="731.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (309 samples, 0.33%)</title><rect x="731.0" y="755.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.0" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (309 samples, 0.33%)</title><rect x="731.0" y="739.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="734.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (339 samples, 0.36%)</title><rect x="734.9" y="771.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.9" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (339 samples, 0.36%)</title><rect x="734.9" y="755.0" width="4.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="737.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (223 samples, 0.24%)</title><rect x="739.2" y="787.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (223 samples, 0.24%)</title><rect x="739.2" y="771.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (223 samples, 0.24%)</title><rect x="739.2" y="755.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (223 samples, 0.24%)</title><rect x="739.2" y="739.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (223 samples, 0.24%)</title><rect x="739.2" y="723.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (223 samples, 0.24%)</title><rect x="739.2" y="707.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.2" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (223 samples, 0.24%)</title><rect x="739.2" y="691.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (223 samples, 0.24%)</title><rect x="739.2" y="675.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (223 samples, 0.24%)</title><rect x="739.2" y="659.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.2" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (223 samples, 0.24%)</title><rect x="739.2" y="643.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="742.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (175 samples, 0.19%)</title><rect x="742.0" y="787.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (175 samples, 0.19%)</title><rect x="742.0" y="771.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (175 samples, 0.19%)</title><rect x="742.0" y="755.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.0" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (175 samples, 0.19%)</title><rect x="742.0" y="739.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="745.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35,397 samples, 37.78%)</title><rect x="744.2" y="803.0" width="445.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.2" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (810 samples, 0.86%)</title><rect x="744.2" y="787.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.2" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (810 samples, 0.86%)</title><rect x="744.2" y="771.0" width="10.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="747.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34,587 samples, 36.91%)</title><rect x="754.4" y="787.0" width="435.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.4" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34,587 samples, 36.91%)</title><rect x="754.4" y="771.0" width="435.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.4" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34,587 samples, 36.91%)</title><rect x="754.4" y="755.0" width="435.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.4" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15,726 samples, 16.78%)</title><rect x="754.4" y="739.0" width="198.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.4" y="750.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15,726 samples, 16.78%)</title><rect x="754.4" y="723.0" width="198.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.4" y="734.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (731 samples, 0.78%)</title><rect x="754.4" y="707.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (731 samples, 0.78%)</title><rect x="754.4" y="691.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (731 samples, 0.78%)</title><rect x="754.4" y="675.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.4" y="686.0"></text>
</g>
<g>
<title>java.lang.String (360 samples, 0.38%)</title><rect x="754.4" y="659.0" width="4.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="757.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (371 samples, 0.40%)</title><rect x="758.9" y="659.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.9" y="670.0"></text>
</g>
<g>
<title>byte[] (371 samples, 0.40%)</title><rect x="758.9" y="643.0" width="4.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="761.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (14,995 samples, 16.00%)</title><rect x="763.6" y="707.0" width="188.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.6" y="718.0">ru/mail/polis/service/Sh..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (613 samples, 0.65%)</title><rect x="763.6" y="691.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (613 samples, 0.65%)</title><rect x="763.6" y="675.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (613 samples, 0.65%)</title><rect x="763.6" y="659.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String (267 samples, 0.28%)</title><rect x="763.6" y="643.0" width="3.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="766.6" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (346 samples, 0.37%)</title><rect x="767.0" y="643.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.0" y="654.0"></text>
</g>
<g>
<title>byte[] (346 samples, 0.37%)</title><rect x="767.0" y="627.0" width="4.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="770.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (14,382 samples, 15.35%)</title><rect x="771.3" y="691.0" width="181.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.3" y="702.0">ru/mail/polis/service/S..</text>
</g>
<g>
<title>java/lang/String.getBytes (339 samples, 0.36%)</title><rect x="771.3" y="675.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (339 samples, 0.36%)</title><rect x="771.3" y="659.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (339 samples, 0.36%)</title><rect x="771.3" y="643.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (339 samples, 0.36%)</title><rect x="771.3" y="627.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.3" y="638.0"></text>
</g>
<g>
<title>byte[] (339 samples, 0.36%)</title><rect x="771.3" y="611.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="774.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (720 samples, 0.77%)</title><rect x="775.6" y="675.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (720 samples, 0.77%)</title><rect x="775.6" y="659.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.6" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (720 samples, 0.77%)</title><rect x="775.6" y="643.0" width="9.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="778.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (514 samples, 0.55%)</title><rect x="784.7" y="675.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (514 samples, 0.55%)</title><rect x="784.7" y="659.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (514 samples, 0.55%)</title><rect x="784.7" y="643.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (264 samples, 0.28%)</title><rect x="784.7" y="627.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="787.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (250 samples, 0.27%)</title><rect x="788.0" y="627.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.0" y="638.0"></text>
</g>
<g>
<title>byte[] (250 samples, 0.27%)</title><rect x="788.0" y="611.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="791.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (615 samples, 0.66%)</title><rect x="791.1" y="675.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (615 samples, 0.66%)</title><rect x="791.1" y="659.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (615 samples, 0.66%)</title><rect x="791.1" y="643.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String (300 samples, 0.32%)</title><rect x="791.1" y="627.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="794.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (315 samples, 0.34%)</title><rect x="794.9" y="627.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.9" y="638.0"></text>
</g>
<g>
<title>byte[] (315 samples, 0.34%)</title><rect x="794.9" y="611.0" width="4.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="797.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.sendResponseAsync (915 samples, 0.98%)</title><rect x="798.9" y="675.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (237 samples, 0.25%)</title><rect x="798.9" y="659.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (237 samples, 0.25%)</title><rect x="798.9" y="643.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$142/329492948.get$Lambda (237 samples, 0.25%)</title><rect x="798.9" y="627.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.9" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApi$$Lambda$142 (237 samples, 0.25%)</title><rect x="798.9" y="611.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="801.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (678 samples, 0.72%)</title><rect x="801.9" y="659.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (678 samples, 0.72%)</title><rect x="801.9" y="643.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (416 samples, 0.44%)</title><rect x="801.9" y="627.0" width="5.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="804.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (262 samples, 0.28%)</title><rect x="807.1" y="627.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (262 samples, 0.28%)</title><rect x="807.1" y="611.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="810.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (537 samples, 0.57%)</title><rect x="810.4" y="675.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.06%)</title><rect x="810.4" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.06%)</title><rect x="810.4" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.06%)</title><rect x="810.4" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.03%)</title><rect x="810.4" y="611.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="813.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.03%)</title><rect x="810.7" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.7" y="622.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.03%)</title><rect x="810.7" y="595.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="813.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.all (75 samples, 0.08%)</title><rect x="811.1" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.1" y="670.0"></text>
</g>
<g>
<title>java/util/Set.of (75 samples, 0.08%)</title><rect x="811.1" y="643.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.1" y="654.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (27 samples, 0.03%)</title><rect x="811.1" y="627.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="814.1" y="638.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (48 samples, 0.05%)</title><rect x="811.4" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.4" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.05%)</title><rect x="811.4" y="611.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="814.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (410 samples, 0.44%)</title><rect x="812.0" y="659.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (71 samples, 0.08%)</title><rect x="812.0" y="643.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (52 samples, 0.06%)</title><rect x="812.2" y="627.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.2" y="638.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (41 samples, 0.04%)</title><rect x="812.4" y="611.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="815.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (313 samples, 0.33%)</title><rect x="812.9" y="643.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.9" y="654.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (132 samples, 0.14%)</title><rect x="812.9" y="627.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.9" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (132 samples, 0.14%)</title><rect x="812.9" y="611.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.9" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (132 samples, 0.14%)</title><rect x="812.9" y="595.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.9" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (132 samples, 0.14%)</title><rect x="812.9" y="579.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (132 samples, 0.14%)</title><rect x="812.9" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (132 samples, 0.14%)</title><rect x="812.9" y="547.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (132 samples, 0.14%)</title><rect x="812.9" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.06%)</title><rect x="812.9" y="515.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="815.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (73 samples, 0.08%)</title><rect x="813.6" y="515.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.6" y="526.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.08%)</title><rect x="813.6" y="499.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="816.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (62 samples, 0.07%)</title><rect x="814.6" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (62 samples, 0.07%)</title><rect x="814.6" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (62 samples, 0.07%)</title><rect x="814.6" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.6" y="606.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (62 samples, 0.07%)</title><rect x="814.6" y="579.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="817.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="815.6" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="815.6" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="815.6" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="815.6" y="579.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.08%)</title><rect x="815.6" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.6" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.08%)</title><rect x="815.6" y="547.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="818.6" y="558.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (26 samples, 0.03%)</title><rect x="816.5" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.5" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (26 samples, 0.03%)</title><rect x="816.5" y="611.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="819.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.RF (26 samples, 0.03%)</title><rect x="816.8" y="643.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="819.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (9,437 samples, 10.07%)</title><rect x="817.2" y="675.0" width="118.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.2" y="686.0">ru/mail/polis/..</text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.04%)</title><rect x="817.2" y="659.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="820.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="817.6" y="659.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (74 samples, 0.08%)</title><rect x="817.6" y="643.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="817.6" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (74 samples, 0.08%)</title><rect x="817.6" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.08%)</title><rect x="817.6" y="595.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.6" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.08%)</title><rect x="817.6" y="579.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="820.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (62 samples, 0.07%)</title><rect x="818.6" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (49 samples, 0.05%)</title><rect x="818.6" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (49 samples, 0.05%)</title><rect x="818.6" y="627.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="821.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (228 samples, 0.24%)</title><rect x="819.4" y="659.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.4" y="670.0"></text>
</g>
<g>
<title>java.util.HashSet (21 samples, 0.02%)</title><rect x="819.4" y="643.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="822.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (62 samples, 0.07%)</title><rect x="819.6" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (62 samples, 0.07%)</title><rect x="819.6" y="627.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="822.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (145 samples, 0.15%)</title><rect x="820.4" y="643.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (145 samples, 0.15%)</title><rect x="820.4" y="627.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (145 samples, 0.15%)</title><rect x="820.4" y="611.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (109 samples, 0.12%)</title><rect x="820.4" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.4" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (109 samples, 0.12%)</title><rect x="820.4" y="579.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="823.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (36 samples, 0.04%)</title><rect x="821.8" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.8" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (36 samples, 0.04%)</title><rect x="821.8" y="579.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="824.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (33 samples, 0.04%)</title><rect x="822.2" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.04%)</title><rect x="822.2" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.04%)</title><rect x="822.2" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.get$Lambda (33 samples, 0.04%)</title><rect x="822.2" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$105 (33 samples, 0.04%)</title><rect x="822.2" y="595.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="825.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNodeAsync (8,381 samples, 8.95%)</title><rect x="822.6" y="659.0" width="105.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.6" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (57 samples, 0.06%)</title><rect x="822.6" y="643.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="825.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.04%)</title><rect x="823.4" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.04%)</title><rect x="823.4" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$135/1421739737.get$Lambda (39 samples, 0.04%)</title><rect x="823.4" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.4" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$135 (39 samples, 0.04%)</title><rect x="823.4" y="595.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="826.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (176 samples, 0.19%)</title><rect x="823.8" y="643.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (176 samples, 0.19%)</title><rect x="823.8" y="627.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (113 samples, 0.12%)</title><rect x="823.8" y="611.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="826.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (63 samples, 0.07%)</title><rect x="825.3" y="611.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (63 samples, 0.07%)</title><rect x="825.3" y="595.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="828.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (8,109 samples, 8.65%)</title><rect x="826.1" y="643.0" width="102.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.1" y="654.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.proxy (8,109 samples, 8.65%)</title><rect x="826.1" y="627.0" width="102.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.1" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (60 samples, 0.06%)</title><rect x="826.1" y="611.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="829.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (178 samples, 0.19%)</title><rect x="826.8" y="611.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (178 samples, 0.19%)</title><rect x="826.8" y="595.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (106 samples, 0.11%)</title><rect x="826.8" y="579.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="829.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (72 samples, 0.08%)</title><rect x="828.2" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (72 samples, 0.08%)</title><rect x="828.2" y="563.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (72 samples, 0.08%)</title><rect x="828.2" y="547.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="831.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,880 samples, 5.21%)</title><rect x="829.1" y="611.0" width="61.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.1" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,880 samples, 5.21%)</title><rect x="829.1" y="595.0" width="61.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.1" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,880 samples, 5.21%)</title><rect x="829.1" y="579.0" width="61.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.1" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,880 samples, 5.21%)</title><rect x="829.1" y="563.0" width="61.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.1" y="574.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (187 samples, 0.20%)</title><rect x="829.3" y="547.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (187 samples, 0.20%)</title><rect x="829.3" y="531.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (101 samples, 0.11%)</title><rect x="829.3" y="515.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="832.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.09%)</title><rect x="830.6" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (86 samples, 0.09%)</title><rect x="830.6" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (86 samples, 0.09%)</title><rect x="830.6" y="483.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="833.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (169 samples, 0.18%)</title><rect x="831.6" y="547.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (169 samples, 0.18%)</title><rect x="831.6" y="531.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="834.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (86 samples, 0.09%)</title><rect x="831.6" y="515.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="834.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (83 samples, 0.09%)</title><rect x="832.7" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="835.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (83 samples, 0.09%)</title><rect x="832.7" y="499.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (83 samples, 0.09%)</title><rect x="832.7" y="483.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="835.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (138 samples, 0.15%)</title><rect x="833.8" y="547.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="836.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (244 samples, 0.26%)</title><rect x="835.5" y="547.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="838.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2,384 samples, 2.54%)</title><rect x="838.6" y="547.0" width="30.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.6" y="558.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (280 samples, 0.30%)</title><rect x="838.6" y="531.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (202 samples, 0.22%)</title><rect x="838.6" y="515.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.6" y="526.0"></text>
</g>
<g>
<title>java/util/List.spliterator (61 samples, 0.07%)</title><rect x="838.6" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.6" y="510.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (61 samples, 0.07%)</title><rect x="838.6" y="483.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="841.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (141 samples, 0.15%)</title><rect x="839.4" y="499.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.4" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (141 samples, 0.15%)</title><rect x="839.4" y="483.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="842.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (78 samples, 0.08%)</title><rect x="841.1" y="515.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (78 samples, 0.08%)</title><rect x="841.1" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="844.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (78 samples, 0.08%)</title><rect x="841.1" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/1836463382.get (78 samples, 0.08%)</title><rect x="841.1" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.1" y="478.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (78 samples, 0.08%)</title><rect x="841.1" y="451.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="844.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (821 samples, 0.88%)</title><rect x="842.1" y="531.0" width="10.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (821 samples, 0.88%)</title><rect x="842.1" y="515.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.1" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (40 samples, 0.04%)</title><rect x="842.1" y="499.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="845.1" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (52 samples, 0.06%)</title><rect x="842.6" y="499.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="845.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (111 samples, 0.12%)</title><rect x="843.3" y="499.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="846.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (37 samples, 0.04%)</title><rect x="844.7" y="499.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="847.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.08%)</title><rect x="845.1" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.08%)</title><rect x="845.1" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (79 samples, 0.08%)</title><rect x="845.1" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.1" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (79 samples, 0.08%)</title><rect x="845.1" y="451.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="848.1" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (308 samples, 0.33%)</title><rect x="846.1" y="499.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (308 samples, 0.33%)</title><rect x="846.1" y="483.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (308 samples, 0.33%)</title><rect x="846.1" y="467.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (308 samples, 0.33%)</title><rect x="846.1" y="451.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.1" y="462.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (117 samples, 0.12%)</title><rect x="846.1" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (117 samples, 0.12%)</title><rect x="846.1" y="419.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (117 samples, 0.12%)</title><rect x="846.1" y="403.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (117 samples, 0.12%)</title><rect x="846.1" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (117 samples, 0.12%)</title><rect x="846.1" y="371.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (117 samples, 0.12%)</title><rect x="846.1" y="355.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (117 samples, 0.12%)</title><rect x="846.1" y="339.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (117 samples, 0.12%)</title><rect x="846.1" y="323.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (117 samples, 0.12%)</title><rect x="846.1" y="307.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="849.1" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (93 samples, 0.10%)</title><rect x="847.6" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.6" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (93 samples, 0.10%)</title><rect x="847.6" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (54 samples, 0.06%)</title><rect x="847.6" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.06%)</title><rect x="847.6" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.06%)</title><rect x="847.6" y="371.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="850.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (39 samples, 0.04%)</title><rect x="848.3" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.3" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (39 samples, 0.04%)</title><rect x="848.3" y="387.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="851.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (98 samples, 0.10%)</title><rect x="848.8" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (98 samples, 0.10%)</title><rect x="848.8" y="419.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="851.8" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (84 samples, 0.09%)</title><rect x="850.0" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.0" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (84 samples, 0.09%)</title><rect x="850.0" y="483.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="853.0" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (110 samples, 0.12%)</title><rect x="851.1" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.1" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (110 samples, 0.12%)</title><rect x="851.1" y="483.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="854.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (35 samples, 0.04%)</title><rect x="852.5" y="531.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="855.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (907 samples, 0.97%)</title><rect x="852.9" y="531.0" width="11.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.9" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (907 samples, 0.97%)</title><rect x="852.9" y="515.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.9" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (826 samples, 0.88%)</title><rect x="852.9" y="499.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.9" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (826 samples, 0.88%)</title><rect x="852.9" y="483.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.9" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (826 samples, 0.88%)</title><rect x="852.9" y="467.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.9" y="478.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (165 samples, 0.18%)</title><rect x="852.9" y="451.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="855.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (208 samples, 0.22%)</title><rect x="855.0" y="451.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.0" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (208 samples, 0.22%)</title><rect x="855.0" y="435.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.0" y="446.0"></text>
</g>
<g>
<title>byte[] (208 samples, 0.22%)</title><rect x="855.0" y="419.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="858.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (453 samples, 0.48%)</title><rect x="857.6" y="451.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (453 samples, 0.48%)</title><rect x="857.6" y="435.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (182 samples, 0.19%)</title><rect x="857.6" y="419.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="860.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (271 samples, 0.29%)</title><rect x="859.9" y="419.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.9" y="430.0"></text>
</g>
<g>
<title>byte[] (271 samples, 0.29%)</title><rect x="859.9" y="403.0" width="3.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="862.9" y="414.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (81 samples, 0.09%)</title><rect x="863.3" y="499.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="866.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (132 samples, 0.14%)</title><rect x="864.3" y="531.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (132 samples, 0.14%)</title><rect x="864.3" y="515.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="867.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (209 samples, 0.22%)</title><rect x="866.0" y="531.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.0" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (62 samples, 0.07%)</title><rect x="866.0" y="515.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="869.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (57 samples, 0.06%)</title><rect x="866.8" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.06%)</title><rect x="866.8" y="499.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="869.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (90 samples, 0.10%)</title><rect x="867.5" y="515.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="870.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (90 samples, 0.10%)</title><rect x="867.5" y="499.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="870.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,121 samples, 1.20%)</title><rect x="868.6" y="547.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="871.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (45 samples, 0.05%)</title><rect x="868.6" y="531.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="871.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (173 samples, 0.18%)</title><rect x="869.2" y="531.0" width="2.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="872.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (37 samples, 0.04%)</title><rect x="871.4" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (37 samples, 0.04%)</title><rect x="871.4" y="515.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="874.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (866 samples, 0.92%)</title><rect x="871.8" y="531.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (866 samples, 0.92%)</title><rect x="871.8" y="515.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Class[] (80 samples, 0.09%)</title><rect x="871.8" y="499.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="874.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.09%)</title><rect x="872.8" y="499.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="875.8" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList (77 samples, 0.08%)</title><rect x="873.9" y="499.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="876.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (391 samples, 0.42%)</title><rect x="874.9" y="499.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (391 samples, 0.42%)</title><rect x="874.9" y="483.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.9" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (391 samples, 0.42%)</title><rect x="874.9" y="467.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.9" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (391 samples, 0.42%)</title><rect x="874.9" y="451.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.9" y="462.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (391 samples, 0.42%)</title><rect x="874.9" y="435.0" width="4.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="877.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (145 samples, 0.15%)</title><rect x="879.8" y="499.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (145 samples, 0.15%)</title><rect x="879.8" y="483.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (51 samples, 0.05%)</title><rect x="879.8" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (51 samples, 0.05%)</title><rect x="879.8" y="451.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="882.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (94 samples, 0.10%)</title><rect x="880.4" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (94 samples, 0.10%)</title><rect x="880.4" y="451.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="883.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (87 samples, 0.09%)</title><rect x="881.6" y="499.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.6" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (87 samples, 0.09%)</title><rect x="881.6" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.6" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (87 samples, 0.09%)</title><rect x="881.6" y="467.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="884.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (619 samples, 0.66%)</title><rect x="882.7" y="547.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (100 samples, 0.11%)</title><rect x="882.7" y="531.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (48 samples, 0.05%)</title><rect x="882.7" y="515.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="885.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (52 samples, 0.06%)</title><rect x="883.3" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (52 samples, 0.06%)</title><rect x="883.3" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (51 samples, 0.05%)</title><rect x="883.3" y="483.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="886.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.08%)</title><rect x="884.0" y="531.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="887.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (444 samples, 0.47%)</title><rect x="884.9" y="531.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.09%)</title><rect x="884.9" y="515.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.09%)</title><rect x="884.9" y="499.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/1345656667.get$Lambda (35 samples, 0.04%)</title><rect x="884.9" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$122 (35 samples, 0.04%)</title><rect x="884.9" y="467.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="887.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.get$Lambda (48 samples, 0.05%)</title><rect x="885.4" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$125 (48 samples, 0.05%)</title><rect x="885.4" y="467.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="888.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (361 samples, 0.39%)</title><rect x="886.0" y="515.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (361 samples, 0.39%)</title><rect x="886.0" y="499.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (204 samples, 0.22%)</title><rect x="886.0" y="483.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="889.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (157 samples, 0.17%)</title><rect x="888.5" y="483.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (157 samples, 0.17%)</title><rect x="888.5" y="467.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (157 samples, 0.17%)</title><rect x="888.5" y="451.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="891.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.createRequest (2,950 samples, 3.15%)</title><rect x="890.5" y="611.0" width="37.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.5" y="622.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (234 samples, 0.25%)</title><rect x="890.5" y="595.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="893.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1049817027.invoke (234 samples, 0.25%)</title><rect x="890.5" y="579.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="893.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (234 samples, 0.25%)</title><rect x="890.5" y="563.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (63 samples, 0.07%)</title><rect x="890.5" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.07%)</title><rect x="890.5" y="531.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="893.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (171 samples, 0.18%)</title><rect x="891.3" y="547.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (171 samples, 0.18%)</title><rect x="891.3" y="531.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.3" y="542.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.18%)</title><rect x="891.3" y="515.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="894.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (999 samples, 1.07%)</title><rect x="893.5" y="595.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.5" y="606.0"></text>
</g>
<g>
<title>java.net.URI (206 samples, 0.22%)</title><rect x="893.5" y="579.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="896.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (793 samples, 0.85%)</title><rect x="896.1" y="579.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.1" y="590.0"></text>
</g>
<g>
<title>java.net.URI$Parser (77 samples, 0.08%)</title><rect x="896.1" y="563.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="899.1" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (716 samples, 0.76%)</title><rect x="897.0" y="563.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (113 samples, 0.12%)</title><rect x="897.0" y="547.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (113 samples, 0.12%)</title><rect x="897.0" y="531.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.06%)</title><rect x="897.0" y="515.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="900.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.06%)</title><rect x="897.8" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.8" y="526.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.06%)</title><rect x="897.8" y="499.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="900.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (603 samples, 0.64%)</title><rect x="898.5" y="547.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (307 samples, 0.33%)</title><rect x="898.5" y="531.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (307 samples, 0.33%)</title><rect x="898.5" y="515.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.5" y="526.0"></text>
</g>
<g>
<title>java.lang.String (132 samples, 0.14%)</title><rect x="898.5" y="499.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="901.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (175 samples, 0.19%)</title><rect x="900.1" y="499.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.1" y="510.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.19%)</title><rect x="900.1" y="483.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="903.1" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (296 samples, 0.32%)</title><rect x="902.3" y="531.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (159 samples, 0.17%)</title><rect x="902.3" y="515.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (159 samples, 0.17%)</title><rect x="902.3" y="499.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.07%)</title><rect x="902.3" y="483.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="905.3" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (90 samples, 0.10%)</title><rect x="903.2" y="483.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.2" y="494.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.10%)</title><rect x="903.2" y="467.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="906.2" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (137 samples, 0.15%)</title><rect x="904.3" y="515.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (137 samples, 0.15%)</title><rect x="904.3" y="499.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (137 samples, 0.15%)</title><rect x="904.3" y="483.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (137 samples, 0.15%)</title><rect x="904.3" y="467.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.05%)</title><rect x="904.3" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="907.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (86 samples, 0.09%)</title><rect x="905.0" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.0" y="462.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.09%)</title><rect x="905.0" y="435.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="908.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (80 samples, 0.09%)</title><rect x="906.1" y="595.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (80 samples, 0.09%)</title><rect x="906.1" y="579.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="909.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (246 samples, 0.26%)</title><rect x="907.1" y="595.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (91 samples, 0.10%)</title><rect x="907.1" y="579.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="910.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (155 samples, 0.17%)</title><rect x="908.2" y="579.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (44 samples, 0.05%)</title><rect x="908.2" y="563.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="911.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (111 samples, 0.12%)</title><rect x="908.8" y="563.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (111 samples, 0.12%)</title><rect x="908.8" y="547.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="911.8" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.of (60 samples, 0.06%)</title><rect x="910.2" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.2" y="606.0"></text>
</g>
<g>
<title>java/time/Duration.plus (60 samples, 0.06%)</title><rect x="910.2" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.2" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.plusMillis (60 samples, 0.06%)</title><rect x="910.2" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.2" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.plus (60 samples, 0.06%)</title><rect x="910.2" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.2" y="558.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (60 samples, 0.06%)</title><rect x="910.2" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.2" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.create (60 samples, 0.06%)</title><rect x="910.2" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.2" y="526.0"></text>
</g>
<g>
<title>java.time.Duration (60 samples, 0.06%)</title><rect x="910.2" y="499.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="913.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,099 samples, 1.17%)</title><rect x="910.9" y="595.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (101 samples, 0.11%)</title><rect x="910.9" y="579.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="913.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (998 samples, 1.07%)</title><rect x="912.2" y="579.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.2" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (907 samples, 0.97%)</title><rect x="912.2" y="563.0" width="11.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (907 samples, 0.97%)</title><rect x="912.2" y="547.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.2" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (44 samples, 0.05%)</title><rect x="912.2" y="531.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="915.2" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (66 samples, 0.07%)</title><rect x="912.7" y="531.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="915.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (123 samples, 0.13%)</title><rect x="913.6" y="531.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="916.6" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (34 samples, 0.04%)</title><rect x="915.1" y="531.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="918.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.07%)</title><rect x="915.5" y="531.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.07%)</title><rect x="915.5" y="515.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.get$Lambda (67 samples, 0.07%)</title><rect x="915.5" y="499.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.5" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (67 samples, 0.07%)</title><rect x="915.5" y="483.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="918.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (89 samples, 0.09%)</title><rect x="916.4" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.4" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (89 samples, 0.09%)</title><rect x="916.4" y="515.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="919.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (371 samples, 0.40%)</title><rect x="917.5" y="531.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (371 samples, 0.40%)</title><rect x="917.5" y="515.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.5" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (371 samples, 0.40%)</title><rect x="917.5" y="499.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (147 samples, 0.16%)</title><rect x="917.5" y="483.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (147 samples, 0.16%)</title><rect x="917.5" y="467.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (147 samples, 0.16%)</title><rect x="917.5" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (147 samples, 0.16%)</title><rect x="917.5" y="435.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (147 samples, 0.16%)</title><rect x="917.5" y="419.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (147 samples, 0.16%)</title><rect x="917.5" y="403.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (147 samples, 0.16%)</title><rect x="917.5" y="387.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.5" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (147 samples, 0.16%)</title><rect x="917.5" y="371.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (147 samples, 0.16%)</title><rect x="917.5" y="355.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="920.5" y="366.0"></text>
</g>
<g>
<title>java/util/List.copyOf (113 samples, 0.12%)</title><rect x="919.4" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.4" y="494.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (113 samples, 0.12%)</title><rect x="919.4" y="467.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (58 samples, 0.06%)</title><rect x="919.4" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.4" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.06%)</title><rect x="919.4" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="922.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.06%)</title><rect x="919.4" y="419.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="922.4" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (55 samples, 0.06%)</title><rect x="920.1" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.1" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (55 samples, 0.06%)</title><rect x="920.1" y="435.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="923.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (111 samples, 0.12%)</title><rect x="920.8" y="483.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.8" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (111 samples, 0.12%)</title><rect x="920.8" y="467.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="923.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (113 samples, 0.12%)</title><rect x="922.2" y="531.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.2" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (113 samples, 0.12%)</title><rect x="922.2" y="515.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="925.2" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (91 samples, 0.10%)</title><rect x="923.6" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.6" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (91 samples, 0.10%)</title><rect x="923.6" y="547.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.6" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (91 samples, 0.10%)</title><rect x="923.6" y="531.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="926.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (232 samples, 0.25%)</title><rect x="924.8" y="595.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="927.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (232 samples, 0.25%)</title><rect x="924.8" y="579.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (232 samples, 0.25%)</title><rect x="924.8" y="563.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.8" y="574.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (232 samples, 0.25%)</title><rect x="924.8" y="547.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (108 samples, 0.12%)</title><rect x="924.8" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.8" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (108 samples, 0.12%)</title><rect x="924.8" y="515.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="927.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$109/1115088082.apply (124 samples, 0.13%)</title><rect x="926.1" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (124 samples, 0.13%)</title><rect x="926.1" y="515.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.1" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (63 samples, 0.07%)</title><rect x="926.1" y="499.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="929.1" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (61 samples, 0.07%)</title><rect x="926.9" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.07%)</title><rect x="926.9" y="483.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="929.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.getEmptyBodyResponseHandler (41 samples, 0.04%)</title><rect x="927.7" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.04%)</title><rect x="927.7" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.04%)</title><rect x="927.7" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.get$Lambda (41 samples, 0.04%)</title><rect x="927.7" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.AsyncClient$$Lambda$133 (41 samples, 0.04%)</title><rect x="927.7" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="930.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocallyAsync (98 samples, 0.10%)</title><rect x="928.2" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.2" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (28 samples, 0.03%)</title><rect x="928.2" y="643.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="931.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.03%)</title><rect x="928.5" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="931.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.03%)</title><rect x="928.5" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$107/373692322.get$Lambda (28 samples, 0.03%)</title><rect x="928.5" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="931.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$107 (28 samples, 0.03%)</title><rect x="928.5" y="595.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="931.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.04%)</title><rect x="928.9" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.04%)</title><rect x="928.9" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (39 samples, 0.04%)</title><rect x="928.9" y="611.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="931.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponsesAsync (524 samples, 0.56%)</title><rect x="929.4" y="659.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (44 samples, 0.05%)</title><rect x="929.4" y="643.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="932.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1815611058.linkToTargetMethod (29 samples, 0.03%)</title><rect x="930.0" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/455680542.invokeStatic (29 samples, 0.03%)</title><rect x="930.0" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.get$Lambda (29 samples, 0.03%)</title><rect x="930.0" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$141 (29 samples, 0.03%)</title><rect x="930.0" y="595.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="933.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (89 samples, 0.09%)</title><rect x="930.3" y="643.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (89 samples, 0.09%)</title><rect x="930.3" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (55 samples, 0.06%)</title><rect x="930.3" y="611.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="933.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (34 samples, 0.04%)</title><rect x="931.0" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (34 samples, 0.04%)</title><rect x="931.0" y="595.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="934.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.firstN (362 samples, 0.39%)</title><rect x="931.5" y="643.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.03%)</title><rect x="931.5" y="627.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="934.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (36 samples, 0.04%)</title><rect x="931.8" y="627.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="934.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (22 samples, 0.02%)</title><rect x="932.3" y="627.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="935.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (43 samples, 0.05%)</title><rect x="932.5" y="627.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.05%)</title><rect x="932.5" y="611.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="935.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (191 samples, 0.20%)</title><rect x="933.1" y="627.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (191 samples, 0.20%)</title><rect x="933.1" y="611.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (118 samples, 0.13%)</title><rect x="933.1" y="595.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="936.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (73 samples, 0.08%)</title><rect x="934.6" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (73 samples, 0.08%)</title><rect x="934.6" y="579.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="937.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.getResultHandler (43 samples, 0.05%)</title><rect x="935.5" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1238248940.linkToTargetMethod (43 samples, 0.05%)</title><rect x="935.5" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1831735832.invokeStatic (43 samples, 0.05%)</title><rect x="935.5" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="938.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.get$Lambda (43 samples, 0.05%)</title><rect x="935.5" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.5" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ExtendedCompletableFuture$$Lambda$138 (43 samples, 0.05%)</title><rect x="935.5" y="563.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="938.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (1,305 samples, 1.39%)</title><rect x="936.0" y="675.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (346 samples, 0.37%)</title><rect x="936.0" y="659.0" width="4.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="939.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (335 samples, 0.36%)</title><rect x="940.4" y="659.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (335 samples, 0.36%)</title><rect x="940.4" y="643.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$277/1271947751.get$Lambda (335 samples, 0.36%)</title><rect x="940.4" y="627.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.4" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$277 (335 samples, 0.36%)</title><rect x="940.4" y="611.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="943.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (297 samples, 0.32%)</title><rect x="944.6" y="659.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (297 samples, 0.32%)</title><rect x="944.6" y="643.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (297 samples, 0.32%)</title><rect x="944.6" y="627.0" width="3.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="947.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (327 samples, 0.35%)</title><rect x="948.3" y="659.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (327 samples, 0.35%)</title><rect x="948.3" y="643.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (327 samples, 0.35%)</title><rect x="948.3" y="627.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.get$Lambda (327 samples, 0.35%)</title><rect x="948.3" y="611.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="951.3" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ShardedHttpApiBase$$Lambda$105 (327 samples, 0.35%)</title><rect x="948.3" y="595.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="951.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,319 samples, 4.61%)</title><rect x="952.5" y="739.0" width="54.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="955.5" y="750.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (402 samples, 0.43%)</title><rect x="952.5" y="723.0" width="5.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="955.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,144 samples, 1.22%)</title><rect x="957.5" y="723.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.5" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (1,144 samples, 1.22%)</title><rect x="957.5" y="707.0" width="14.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="960.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,773 samples, 2.96%)</title><rect x="971.9" y="723.0" width="35.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.9" y="734.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,773 samples, 2.96%)</title><rect x="971.9" y="707.0" width="35.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.9" y="718.0">on..</text>
</g>
<g>
<title>char[] (1,877 samples, 2.00%)</title><rect x="971.9" y="691.0" width="23.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="974.9" y="702.0">c..</text>
</g>
<g>
<title>java.lang.String (229 samples, 0.24%)</title><rect x="995.6" y="691.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="998.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (667 samples, 0.71%)</title><rect x="998.5" y="691.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (667 samples, 0.71%)</title><rect x="998.5" y="675.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (667 samples, 0.71%)</title><rect x="998.5" y="659.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.5" y="670.0"></text>
</g>
<g>
<title>byte[] (667 samples, 0.71%)</title><rect x="998.5" y="643.0" width="8.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1001.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (457 samples, 0.49%)</title><rect x="1006.9" y="739.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.9" y="750.0"></text>
</g>
<g>
<title>byte[] (457 samples, 0.49%)</title><rect x="1006.9" y="723.0" width="5.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1009.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (683 samples, 0.73%)</title><rect x="1012.6" y="739.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (683 samples, 0.73%)</title><rect x="1012.6" y="723.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (683 samples, 0.73%)</title><rect x="1012.6" y="707.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (347 samples, 0.37%)</title><rect x="1012.6" y="691.0" width="4.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1015.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (336 samples, 0.36%)</title><rect x="1017.0" y="691.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.0" y="702.0"></text>
</g>
<g>
<title>byte[] (336 samples, 0.36%)</title><rect x="1017.0" y="675.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1020.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,402 samples, 14.30%)</title><rect x="1021.2" y="739.0" width="168.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.2" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,402 samples, 14.30%)</title><rect x="1021.2" y="723.0" width="168.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.2" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (6,916 samples, 7.38%)</title><rect x="1021.2" y="707.0" width="87.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1024.2" y="718.0">char[]</text>
</g>
<g>
<title>char[] (41 samples, 0.04%)</title><rect x="1108.3" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1111.3" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1,952 samples, 2.08%)</title><rect x="1108.8" y="707.0" width="24.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1111.8" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,493 samples, 4.80%)</title><rect x="1133.4" y="707.0" width="56.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.4" y="718.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,493 samples, 4.80%)</title><rect x="1133.4" y="691.0" width="56.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.4" y="702.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,493 samples, 4.80%)</title><rect x="1133.4" y="675.0" width="56.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.4" y="686.0">java/l..</text>
</g>
<g>
<title>byte[] (4,493 samples, 4.80%)</title><rect x="1133.4" y="659.0" width="56.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1136.4" y="670.0">byte[]</text>
</g>
</g>
</svg>
