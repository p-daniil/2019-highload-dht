<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1701"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1701"> </text>
<g id="frames">
<g>
<title>all (7,502 samples, 100.00%)</title><rect x="10.0" y="1667.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="1678.0">all</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="10.0" y="1651.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.07%)</title><rect x="10.3" y="1651.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (7 samples, 0.09%)</title><rect x="11.3" y="1651.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.3" y="1662.0"></text>
</g>
<g>
<title>Klass::class_loader() const (2 samples, 0.03%)</title><rect x="12.4" y="1651.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.4" y="1662.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (38 samples, 0.51%)</title><rect x="13.0" y="1651.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.0" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (10 samples, 0.13%)</title><rect x="13.3" y="1635.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.3" y="1646.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.09%)</title><rect x="13.6" y="1619.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.6" y="1630.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.09%)</title><rect x="13.6" y="1603.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.6" y="1614.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.03%)</title><rect x="13.6" y="1587.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.6" y="1598.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="14.4" y="1587.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="17.4" y="1598.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (25 samples, 0.33%)</title><rect x="15.0" y="1635.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.0" y="1646.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (24 samples, 0.32%)</title><rect x="15.2" y="1619.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="18.2" y="1630.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (20 samples, 0.27%)</title><rect x="15.2" y="1603.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.2" y="1614.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="15.5" y="1587.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.5" y="1598.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (2 samples, 0.03%)</title><rect x="15.8" y="1587.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.8" y="1598.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.03%)</title><rect x="16.1" y="1587.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.1" y="1598.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (10 samples, 0.13%)</title><rect x="16.4" y="1587.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="19.4" y="1598.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (5 samples, 0.07%)</title><rect x="16.8" y="1571.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.8" y="1582.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="18.3" y="1603.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="21.3" y="1614.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (22 samples, 0.29%)</title><rect x="19.0" y="1651.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="22.0" y="1662.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (21 samples, 0.28%)</title><rect x="19.1" y="1635.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.1" y="1646.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (20 samples, 0.27%)</title><rect x="19.1" y="1619.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="22.1" y="1630.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (17 samples, 0.23%)</title><rect x="19.1" y="1603.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.1" y="1614.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (10 samples, 0.13%)</title><rect x="20.2" y="1587.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="23.2" y="1598.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (4 samples, 0.05%)</title><rect x="20.4" y="1571.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="23.4" y="1582.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="21.0" y="1571.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="24.0" y="1582.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (93 samples, 1.24%)</title><rect x="22.4" y="1651.0" width="14.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.4" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (79 samples, 1.05%)</title><rect x="24.3" y="1635.0" width="12.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.3" y="1646.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (71 samples, 0.95%)</title><rect x="24.9" y="1619.0" width="11.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.9" y="1630.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="25.1" y="1603.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.1" y="1614.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (59 samples, 0.79%)</title><rect x="25.4" y="1603.0" width="9.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="28.4" y="1614.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (5 samples, 0.07%)</title><rect x="26.0" y="1587.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="29.0" y="1598.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (3 samples, 0.04%)</title><rect x="26.4" y="1571.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="29.4" y="1582.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.03%)</title><rect x="26.8" y="1587.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.8" y="1598.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="27.1" y="1587.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="30.1" y="1598.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (3 samples, 0.04%)</title><rect x="27.5" y="1587.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.5" y="1598.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (29 samples, 0.39%)</title><rect x="28.4" y="1587.0" width="4.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.4" y="1598.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (2 samples, 0.03%)</title><rect x="28.6" y="1571.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.6" y="1582.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (3 samples, 0.04%)</title><rect x="28.9" y="1571.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.9" y="1582.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (3 samples, 0.04%)</title><rect x="29.3" y="1571.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.3" y="1582.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (6 samples, 0.08%)</title><rect x="29.8" y="1571.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.8" y="1582.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="30.3" y="1555.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="33.3" y="1566.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (7 samples, 0.09%)</title><rect x="30.8" y="1571.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.8" y="1582.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (5 samples, 0.07%)</title><rect x="30.9" y="1555.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="33.9" y="1566.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="31.4" y="1539.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="34.4" y="1550.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (6 samples, 0.08%)</title><rect x="32.0" y="1571.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="35.0" y="1582.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (4 samples, 0.05%)</title><rect x="33.1" y="1587.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="36.1" y="1598.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (3 samples, 0.04%)</title><rect x="33.8" y="1587.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="36.8" y="1598.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.03%)</title><rect x="34.2" y="1587.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="37.2" y="1598.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="34.7" y="1603.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="37.7" y="1614.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.08%)</title><rect x="35.2" y="1603.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="38.2" y="1614.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="36.1" y="1619.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="39.1" y="1630.0"></text>
</g>
<g>
<title>Klass::class_loader() const (2 samples, 0.03%)</title><rect x="36.7" y="1635.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="39.7" y="1646.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (36 samples, 0.48%)</title><rect x="37.1" y="1651.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="40.1" y="1662.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (35 samples, 0.47%)</title><rect x="37.2" y="1635.0" width="5.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="40.2" y="1646.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.13%)</title><rect x="37.7" y="1619.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="40.7" y="1630.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (10 samples, 0.13%)</title><rect x="37.7" y="1603.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="40.7" y="1614.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (19 samples, 0.25%)</title><rect x="39.3" y="1619.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="42.3" y="1630.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (16 samples, 0.21%)</title><rect x="39.7" y="1603.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="42.7" y="1614.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (4 samples, 0.05%)</title><rect x="40.0" y="1587.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="43.0" y="1598.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.09%)</title><rect x="40.7" y="1587.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="43.7" y="1598.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="41.9" y="1587.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="44.9" y="1598.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (2 samples, 0.03%)</title><rect x="42.2" y="1619.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="45.2" y="1630.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="42.7" y="1651.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="45.7" y="1662.0"></text>
</g>
<g>
<title>[not_walkable_Java] (40 samples, 0.53%)</title><rect x="43.2" y="1651.0" width="6.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="46.2" y="1662.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (5 samples, 0.07%)</title><rect x="43.2" y="1635.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="46.2" y="1646.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (19 samples, 0.25%)</title><rect x="44.3" y="1635.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.3" y="1646.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="44.4" y="1619.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="47.4" y="1630.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (16 samples, 0.21%)</title><rect x="44.8" y="1619.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="47.8" y="1630.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.05%)</title><rect x="44.9" y="1603.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="47.9" y="1614.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="44.9" y="1587.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="47.9" y="1598.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (11 samples, 0.15%)</title><rect x="45.5" y="1603.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="48.5" y="1614.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (2 samples, 0.03%)</title><rect x="45.5" y="1587.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="48.5" y="1598.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (4 samples, 0.05%)</title><rect x="46.0" y="1587.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="49.0" y="1598.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="46.2" y="1571.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="49.2" y="1582.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.04%)</title><rect x="46.6" y="1587.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="49.6" y="1598.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="46.6" y="1571.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="49.6" y="1582.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="46.6" y="1555.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="49.6" y="1566.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.07%)</title><rect x="47.3" y="1635.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="50.3" y="1646.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.04%)</title><rect x="47.4" y="1619.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="50.4" y="1630.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (7 samples, 0.09%)</title><rect x="48.1" y="1635.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="51.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="49.5" y="1651.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="52.5" y="1662.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="49.5" y="1635.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="52.5" y="1646.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (2 samples, 0.03%)</title><rect x="49.6" y="1619.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="52.6" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="49.6" y="1603.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="52.6" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="49.6" y="1587.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="52.6" y="1598.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="50.0" y="1635.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="53.0" y="1646.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (2 samples, 0.03%)</title><rect x="50.4" y="1635.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="53.4" y="1646.0"></text>
</g>
<g>
<title>[unknown_Java] (103 samples, 1.37%)</title><rect x="50.7" y="1651.0" width="16.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="53.7" y="1662.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="63.2" y="1635.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="66.2" y="1646.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="63.6" y="1635.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="66.6" y="1646.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.23%)</title><rect x="64.3" y="1635.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="67.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="64.7" y="1619.0" width="2.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="67.7" y="1630.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="64.7" y="1603.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="67.7" y="1614.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="64.7" y="1587.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="67.7" y="1598.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="64.7" y="1571.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="67.7" y="1582.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="64.7" y="1555.0" width="2.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="67.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="64.9" y="1539.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="67.9" y="1550.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="65.1" y="1523.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="68.1" y="1534.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="65.1" y="1507.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="68.1" y="1518.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (12 samples, 0.16%)</title><rect x="67.7" y="1651.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.7" y="1662.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="68.2" y="1635.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="71.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="68.2" y="1619.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="71.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="68.5" y="1603.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="71.5" y="1614.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="68.5" y="1587.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="71.5" y="1598.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="68.5" y="1571.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="71.5" y="1582.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="68.7" y="1555.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="71.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="69.0" y="1539.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="72.0" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="69.3" y="1523.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="72.3" y="1534.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,300 samples, 43.99%)</title><rect x="69.8" y="1651.0" width="519.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.8" y="1662.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,300 samples, 43.99%)</title><rect x="69.8" y="1635.0" width="519.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.8" y="1646.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,300 samples, 43.99%)</title><rect x="69.8" y="1619.0" width="519.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.8" y="1630.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (7 samples, 0.09%)</title><rect x="70.2" y="1603.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="73.2" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (831 samples, 11.08%)</title><rect x="71.5" y="1603.0" width="130.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.5" y="1614.0">java/util/concur..</text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="72.1" y="1587.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="75.1" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (823 samples, 10.97%)</title><rect x="72.4" y="1587.0" width="129.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.4" y="1598.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (820 samples, 10.93%)</title><rect x="72.9" y="1571.0" width="129.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.9" y="1582.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="73.1" y="1555.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.1" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="73.1" y="1539.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$122/1345656667.apply (817 samples, 10.89%)</title><rect x="73.4" y="1555.0" width="128.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.4" y="1566.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (815 samples, 10.86%)</title><rect x="73.4" y="1539.0" width="128.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.4" y="1550.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (815 samples, 10.86%)</title><rect x="73.4" y="1523.0" width="128.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.4" y="1534.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/Optional.isPresent (2 samples, 0.03%)</title><rect x="74.3" y="1507.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.3" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.03%)</title><rect x="74.6" y="1507.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.6" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.03%)</title><rect x="74.6" y="1491.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (2 samples, 0.03%)</title><rect x="74.6" y="1475.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.6" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="74.6" y="1459.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.6" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="75.0" y="1507.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="75.0" y="1491.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (649 samples, 8.65%)</title><rect x="75.4" y="1507.0" width="102.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.4" y="1518.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (649 samples, 8.65%)</title><rect x="75.4" y="1491.0" width="102.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.4" y="1502.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (649 samples, 8.65%)</title><rect x="75.4" y="1475.0" width="102.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.4" y="1486.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="75.4" y="1459.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.4" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="75.6" y="1443.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.get$Lambda (2 samples, 0.03%)</title><rect x="75.6" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.6" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.&lt;init&gt; (2 samples, 0.03%)</title><rect x="75.6" y="1411.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (320 samples, 4.27%)</title><rect x="75.9" y="1459.0" width="50.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.9" y="1470.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (320 samples, 4.27%)</title><rect x="75.9" y="1443.0" width="50.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.9" y="1454.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (5 samples, 0.07%)</title><rect x="75.9" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.07%)</title><rect x="75.9" y="1411.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.9" y="1422.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="76.4" y="1395.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="79.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (315 samples, 4.20%)</title><rect x="76.7" y="1427.0" width="49.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.7" y="1438.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/873270299.apply (315 samples, 4.20%)</title><rect x="76.7" y="1411.0" width="49.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.7" y="1422.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (314 samples, 4.19%)</title><rect x="76.8" y="1395.0" width="49.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.8" y="1406.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (314 samples, 4.19%)</title><rect x="76.8" y="1379.0" width="49.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.8" y="1390.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.apply (313 samples, 4.17%)</title><rect x="77.0" y="1363.0" width="49.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.0" y="1374.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (313 samples, 4.17%)</title><rect x="77.0" y="1347.0" width="49.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.0" y="1358.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9 samples, 0.12%)</title><rect x="77.0" y="1331.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 0.12%)</title><rect x="77.0" y="1315.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (5 samples, 0.07%)</title><rect x="77.0" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (5 samples, 0.07%)</title><rect x="77.0" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.05%)</title><rect x="77.8" y="1299.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (4 samples, 0.05%)</title><rect x="77.8" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.05%)</title><rect x="77.8" y="1267.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.05%)</title><rect x="77.8" y="1251.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (4 samples, 0.05%)</title><rect x="77.8" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (4 samples, 0.05%)</title><rect x="77.8" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (4 samples, 0.05%)</title><rect x="77.8" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (4 samples, 0.05%)</title><rect x="77.8" y="1187.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (4 samples, 0.05%)</title><rect x="77.8" y="1171.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (4 samples, 0.05%)</title><rect x="77.8" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$265/590862494.accept (4 samples, 0.05%)</title><rect x="77.8" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (4 samples, 0.05%)</title><rect x="77.8" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (4 samples, 0.05%)</title><rect x="77.8" y="1107.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (4 samples, 0.05%)</title><rect x="77.8" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (4 samples, 0.05%)</title><rect x="77.8" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="77.8" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="77.8" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.05%)</title><rect x="77.8" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.05%)</title><rect x="77.8" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.05%)</title><rect x="77.8" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.05%)</title><rect x="77.8" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.05%)</title><rect x="77.8" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.05%)</title><rect x="77.8" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.05%)</title><rect x="77.8" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="77.8" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.05%)</title><rect x="77.8" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.05%)</title><rect x="77.8" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.05%)</title><rect x="77.8" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.05%)</title><rect x="77.8" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.05%)</title><rect x="77.8" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.04%)</title><rect x="77.9" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.04%)</title><rect x="77.9" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.04%)</title><rect x="77.9" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.04%)</title><rect x="77.9" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3 samples, 0.04%)</title><rect x="77.9" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.9" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (3 samples, 0.04%)</title><rect x="77.9" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.04%)</title><rect x="77.9" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.04%)</title><rect x="77.9" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.04%)</title><rect x="77.9" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.03%)</title><rect x="78.1" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.03%)</title><rect x="78.1" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="643.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="81.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="627.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="81.1" y="638.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.03%)</title><rect x="78.1" y="611.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="595.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="81.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="579.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="81.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="563.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="81.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="547.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="81.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="531.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="81.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="515.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="499.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="81.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="483.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="81.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="467.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="81.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="451.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="435.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="81.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="419.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="81.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="403.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="81.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="387.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="81.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="371.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="355.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="81.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="339.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="323.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="81.1" y="334.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="307.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="81.1" y="318.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="291.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="275.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="81.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="259.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.1" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="243.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.1" y="254.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="227.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="81.1" y="238.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="211.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.1" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="195.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="81.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="179.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="81.1" y="190.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="163.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="81.1" y="174.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="147.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="81.1" y="158.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="131.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="81.1" y="142.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="115.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="81.1" y="126.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="99.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="81.1" y="110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="83.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="81.1" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="67.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="81.1" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="51.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="81.1" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="78.1" y="35.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="81.1" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="78.4" y="1331.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="78.4" y="1315.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (301 samples, 4.01%)</title><rect x="78.9" y="1331.0" width="47.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.9" y="1342.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (261 samples, 3.48%)</title><rect x="78.9" y="1315.0" width="41.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.9" y="1326.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (261 samples, 3.48%)</title><rect x="78.9" y="1299.0" width="41.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.9" y="1310.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (3 samples, 0.04%)</title><rect x="79.1" y="1283.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.04%)</title><rect x="79.1" y="1267.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/2043781199.apply (255 samples, 3.40%)</title><rect x="79.7" y="1283.0" width="40.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.7" y="1294.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (254 samples, 3.39%)</title><rect x="79.8" y="1267.0" width="40.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.8" y="1278.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="80.6" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="80.6" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="80.6" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="80.6" y="1203.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.20%)</title><rect x="80.9" y="1251.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.20%)</title><rect x="80.9" y="1235.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.05%)</title><rect x="80.9" y="1219.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.05%)</title><rect x="80.9" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.05%)</title><rect x="80.9" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="81.1" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.15%)</title><rect x="81.6" y="1219.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.15%)</title><rect x="81.6" y="1203.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.15%)</title><rect x="81.6" y="1187.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.15%)</title><rect x="81.6" y="1171.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.12%)</title><rect x="81.7" y="1155.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8 samples, 0.11%)</title><rect x="81.9" y="1139.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.07%)</title><rect x="82.2" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.07%)</title><rect x="82.2" y="1107.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (5 samples, 0.07%)</title><rect x="82.2" y="1091.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (5 samples, 0.07%)</title><rect x="82.2" y="1075.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (5 samples, 0.07%)</title><rect x="82.2" y="1059.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (5 samples, 0.07%)</title><rect x="82.2" y="1043.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (5 samples, 0.07%)</title><rect x="82.2" y="1027.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.07%)</title><rect x="82.2" y="1011.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.07%)</title><rect x="82.2" y="995.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.2" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (3 samples, 0.04%)</title><rect x="82.4" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.4" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (3 samples, 0.04%)</title><rect x="82.4" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="947.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="85.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="931.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="85.4" y="942.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.04%)</title><rect x="82.4" y="915.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="85.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="899.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="85.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="883.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="85.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="867.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="85.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="851.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="85.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="835.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="85.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="819.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="85.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="82.4" y="803.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="85.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="787.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="85.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="771.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="85.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="755.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="85.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="739.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="85.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="723.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="85.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="707.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="85.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="691.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="85.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="675.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="85.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="659.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="85.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="643.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="85.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="627.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="85.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="611.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="85.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="595.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="85.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="579.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="85.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="563.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="85.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.5" y="547.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="85.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (88 samples, 1.17%)</title><rect x="83.3" y="1251.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (84 samples, 1.12%)</title><rect x="83.8" y="1235.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (12 samples, 0.16%)</title><rect x="83.8" y="1219.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12 samples, 0.16%)</title><rect x="83.8" y="1203.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (12 samples, 0.16%)</title><rect x="83.8" y="1187.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.03%)</title><rect x="84.4" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.03%)</title><rect x="84.4" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.4" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.03%)</title><rect x="84.4" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="84.7" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (3 samples, 0.04%)</title><rect x="85.2" y="1171.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (72 samples, 0.96%)</title><rect x="85.7" y="1219.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (71 samples, 0.95%)</title><rect x="85.8" y="1203.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (68 samples, 0.91%)</title><rect x="85.8" y="1187.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (65 samples, 0.87%)</title><rect x="86.0" y="1171.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (65 samples, 0.87%)</title><rect x="86.0" y="1155.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.0" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="86.3" y="1139.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="86.3" y="1123.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.3" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="86.4" y="1107.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.4" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="86.4" y="1091.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.4" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="87.1" y="1075.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="90.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (56 samples, 0.75%)</title><rect x="87.4" y="1139.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (55 samples, 0.73%)</title><rect x="87.5" y="1123.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.5" y="1134.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (3 samples, 0.04%)</title><rect x="87.5" y="1107.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="90.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.68%)</title><rect x="88.0" y="1107.0" width="8.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="91.0" y="1118.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="88.2" y="1091.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="91.2" y="1102.0"></text>
</g>
<g>
<title>write (48 samples, 0.64%)</title><rect x="88.5" y="1091.0" width="7.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="91.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.60%)</title><rect x="89.0" y="1075.0" width="7.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="92.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.60%)</title><rect x="89.0" y="1059.0" width="7.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="92.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.52%)</title><rect x="89.9" y="1043.0" width="6.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="92.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.51%)</title><rect x="90.1" y="1027.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="93.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.49%)</title><rect x="90.2" y="1011.0" width="5.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="93.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.48%)</title><rect x="90.4" y="995.0" width="5.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="93.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="90.5" y="979.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="93.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.44%)</title><rect x="90.8" y="963.0" width="5.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="93.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="91.2" y="947.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="94.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.39%)</title><rect x="91.5" y="931.0" width="4.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="94.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.36%)</title><rect x="91.8" y="915.0" width="4.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="94.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="95.7" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="98.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="95.7" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="98.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="95.7" y="867.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="98.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="95.7" y="851.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="98.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="95.7" y="835.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="98.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="95.7" y="819.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="98.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="95.7" y="803.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="98.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.03%)</title><rect x="96.2" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="96.5" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (144 samples, 1.92%)</title><rect x="97.1" y="1251.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.1" y="1262.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="97.6" y="1235.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="97.6" y="1219.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="97.6" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="98.1" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="98.1" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="98.1" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (106 samples, 1.41%)</title><rect x="98.4" y="1235.0" width="16.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.4" y="1246.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (3 samples, 0.04%)</title><rect x="98.4" y="1219.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="98.4" y="1203.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="98.4" y="1187.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.4" y="1198.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.get$Lambda (3 samples, 0.04%)</title><rect x="98.4" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.4" y="1182.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.&lt;init&gt; (2 samples, 0.03%)</title><rect x="98.4" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.4" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="98.4" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.05%)</title><rect x="98.9" y="1219.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.9" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.05%)</title><rect x="98.9" y="1203.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.9" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.05%)</title><rect x="98.9" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.9" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.05%)</title><rect x="98.9" y="1171.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.9" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.05%)</title><rect x="98.9" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.9" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="98.9" y="1139.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="99.0" y="1123.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="99.0" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="99.0" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (64 samples, 0.85%)</title><rect x="99.5" y="1219.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (12 samples, 0.16%)</title><rect x="100.0" y="1203.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (12 samples, 0.16%)</title><rect x="100.0" y="1187.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.13%)</title><rect x="100.1" y="1171.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (2 samples, 0.03%)</title><rect x="100.9" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.9" y="1166.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="100.9" y="1139.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="103.9" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="101.4" y="1155.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="104.4" y="1166.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (22 samples, 0.29%)</title><rect x="102.0" y="1203.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.0" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (22 samples, 0.29%)</title><rect x="102.0" y="1187.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.0" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (7 samples, 0.09%)</title><rect x="102.3" y="1171.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.3" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (13 samples, 0.17%)</title><rect x="103.4" y="1171.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.4" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (13 samples, 0.17%)</title><rect x="103.4" y="1155.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.4" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (13 samples, 0.17%)</title><rect x="103.4" y="1139.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.4" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (7 samples, 0.09%)</title><rect x="104.4" y="1123.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.4" y="1134.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (5 samples, 0.07%)</title><rect x="105.5" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.5" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (5 samples, 0.07%)</title><rect x="105.5" y="1187.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.5" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (4 samples, 0.05%)</title><rect x="105.6" y="1171.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.6" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.05%)</title><rect x="105.6" y="1155.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.6" y="1166.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.04%)</title><rect x="106.3" y="1203.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="106.4" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.4" y="1198.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (6 samples, 0.08%)</title><rect x="106.7" y="1203.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.7" y="1214.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (4 samples, 0.05%)</title><rect x="107.0" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.0" y="1198.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$254/1706520377.test (12 samples, 0.16%)</title><rect x="107.7" y="1203.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.7" y="1214.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (12 samples, 0.16%)</title><rect x="107.7" y="1187.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/960733886.test (12 samples, 0.16%)</title><rect x="107.7" y="1171.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (12 samples, 0.16%)</title><rect x="107.7" y="1155.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.7" y="1166.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/707161353.test (12 samples, 0.16%)</title><rect x="107.7" y="1139.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.7" y="1150.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (12 samples, 0.16%)</title><rect x="107.7" y="1123.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/90767234.test (12 samples, 0.16%)</title><rect x="107.7" y="1107.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (12 samples, 0.16%)</title><rect x="107.7" y="1091.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="110.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.12%)</title><rect x="107.7" y="1075.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="107.7" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="108.0" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="108.1" y="1043.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="109.1" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="109.1" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.1" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="109.1" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (2 samples, 0.03%)</title><rect x="109.6" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (2 samples, 0.03%)</title><rect x="109.6" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (33 samples, 0.44%)</title><rect x="109.9" y="1219.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.9" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (33 samples, 0.44%)</title><rect x="109.9" y="1203.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.9" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (33 samples, 0.44%)</title><rect x="109.9" y="1187.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.9" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (4 samples, 0.05%)</title><rect x="110.4" y="1171.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.4" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (4 samples, 0.05%)</title><rect x="110.4" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.4" y="1166.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="110.4" y="1139.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="113.4" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.03%)</title><rect x="110.7" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (26 samples, 0.35%)</title><rect x="111.0" y="1171.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.0" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (24 samples, 0.32%)</title><rect x="111.3" y="1155.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.3" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (24 samples, 0.32%)</title><rect x="111.3" y="1139.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.09%)</title><rect x="111.3" y="1123.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.3" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (3 samples, 0.04%)</title><rect x="111.9" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.9" y="1118.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="112.1" y="1091.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="115.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="112.6" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.6" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="113.0" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.0" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (2 samples, 0.03%)</title><rect x="113.0" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.0" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="113.0" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.0" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.15%)</title><rect x="113.3" y="1123.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="113.3" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="113.3" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="113.3" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.3" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.7" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.7" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.05%)</title><rect x="114.0" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="114.1" y="1091.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="114.1" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="114.1" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.1" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.04%)</title><rect x="114.6" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.6" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.03%)</title><rect x="114.8" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4 samples, 0.05%)</title><rect x="115.1" y="1235.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2 samples, 0.03%)</title><rect x="115.1" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (2 samples, 0.03%)</title><rect x="115.1" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="115.4" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.03%)</title><rect x="115.4" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1754894440.invoke (2 samples, 0.03%)</title><rect x="115.4" y="1187.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (6 samples, 0.08%)</title><rect x="115.7" y="1235.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (6 samples, 0.08%)</title><rect x="115.7" y="1219.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="115.7" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (4 samples, 0.05%)</title><rect x="116.0" y="1203.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (20 samples, 0.27%)</title><rect x="116.6" y="1235.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.6" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="116.6" y="1219.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.6" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="116.6" y="1203.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.6" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="116.6" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.6" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="116.6" y="1171.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.6" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (3 samples, 0.04%)</title><rect x="116.8" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.8" y="1166.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="117.4" y="1187.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="120.4" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.15%)</title><rect x="117.7" y="1219.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.7" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="118.5" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.5" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.04%)</title><rect x="119.0" y="1203.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.0" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.03%)</title><rect x="119.2" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2 samples, 0.03%)</title><rect x="119.5" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (40 samples, 0.53%)</title><rect x="119.9" y="1315.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (26 samples, 0.35%)</title><rect x="119.9" y="1299.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.35%)</title><rect x="119.9" y="1283.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.35%)</title><rect x="119.9" y="1267.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (26 samples, 0.35%)</title><rect x="119.9" y="1251.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (26 samples, 0.35%)</title><rect x="119.9" y="1235.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (18 samples, 0.24%)</title><rect x="120.1" y="1219.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (14 samples, 0.19%)</title><rect x="120.4" y="1203.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (14 samples, 0.19%)</title><rect x="120.4" y="1187.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (9 samples, 0.12%)</title><rect x="120.7" y="1171.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="120.9" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="120.9" y="1139.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (2 samples, 0.03%)</title><rect x="120.9" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.&lt;init&gt; (2 samples, 0.03%)</title><rect x="120.9" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (4 samples, 0.05%)</title><rect x="121.2" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.03%)</title><rect x="121.5" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.03%)</title><rect x="121.8" y="1155.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="121.8" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2 samples, 0.03%)</title><rect x="122.1" y="1171.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="122.6" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7 samples, 0.09%)</title><rect x="122.9" y="1219.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.07%)</title><rect x="123.2" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.05%)</title><rect x="123.2" y="1187.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (10 samples, 0.13%)</title><rect x="124.0" y="1299.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.&lt;init&gt; (3 samples, 0.04%)</title><rect x="125.6" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="126.2" y="1459.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.2" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="126.4" y="1443.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (323 samples, 4.31%)</title><rect x="126.7" y="1459.0" width="50.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.7" y="1470.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.08%)</title><rect x="126.7" y="1443.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.08%)</title><rect x="126.7" y="1427.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.7" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.03%)</title><rect x="126.9" y="1411.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="126.9" y="1395.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$204/1560002630.apply (3 samples, 0.04%)</title><rect x="127.2" y="1411.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (2 samples, 0.03%)</title><rect x="127.3" y="1395.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.09%)</title><rect x="127.7" y="1443.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.08%)</title><rect x="127.8" y="1427.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.8" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.05%)</title><rect x="128.0" y="1411.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$202/1400471465.accept (3 samples, 0.04%)</title><rect x="128.1" y="1395.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (2 samples, 0.03%)</title><rect x="128.3" y="1379.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (309 samples, 4.12%)</title><rect x="128.9" y="1443.0" width="48.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.9" y="1454.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (295 samples, 3.93%)</title><rect x="128.9" y="1427.0" width="46.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.9" y="1438.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (295 samples, 3.93%)</title><rect x="128.9" y="1411.0" width="46.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.9" y="1422.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (293 samples, 3.91%)</title><rect x="129.2" y="1395.0" width="46.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.2" y="1406.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$143/1237283969.apply (293 samples, 3.91%)</title><rect x="129.2" y="1379.0" width="46.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.2" y="1390.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (291 samples, 3.88%)</title><rect x="129.5" y="1363.0" width="45.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.5" y="1374.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (291 samples, 3.88%)</title><rect x="129.5" y="1347.0" width="45.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.5" y="1358.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (141 samples, 1.88%)</title><rect x="133.8" y="1331.0" width="22.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.8" y="1342.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (141 samples, 1.88%)</title><rect x="133.8" y="1315.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="136.8" y="1326.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (140 samples, 1.87%)</title><rect x="133.9" y="1299.0" width="22.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.9" y="1310.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$199/1705845297.apply (137 samples, 1.83%)</title><rect x="134.4" y="1283.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.4" y="1294.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (136 samples, 1.81%)</title><rect x="134.6" y="1267.0" width="21.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.6" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (136 samples, 1.81%)</title><rect x="134.6" y="1251.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.6" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (136 samples, 1.81%)</title><rect x="134.6" y="1235.0" width="21.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.6" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (109 samples, 1.45%)</title><rect x="134.6" y="1219.0" width="17.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.6" y="1230.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.05%)</title><rect x="134.6" y="1203.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.6" y="1214.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.05%)</title><rect x="134.6" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.6" y="1198.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (4 samples, 0.05%)</title><rect x="134.6" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.6" y="1182.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (4 samples, 0.05%)</title><rect x="134.6" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (99 samples, 1.32%)</title><rect x="135.4" y="1203.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (97 samples, 1.29%)</title><rect x="135.4" y="1187.0" width="15.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (97 samples, 1.29%)</title><rect x="135.4" y="1171.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.4" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (97 samples, 1.29%)</title><rect x="135.4" y="1155.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.4" y="1166.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="136.0" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="139.0" y="1150.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (74 samples, 0.99%)</title><rect x="136.5" y="1139.0" width="11.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="139.5" y="1150.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.03%)</title><rect x="137.2" y="1123.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="140.2" y="1134.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.03%)</title><rect x="137.7" y="1123.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="140.7" y="1134.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="138.0" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="141.0" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.03%)</title><rect x="138.7" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="141.7" y="1134.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.12%)</title><rect x="139.3" y="1123.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="142.3" y="1134.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.04%)</title><rect x="139.5" y="1107.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="142.5" y="1118.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.05%)</title><rect x="139.9" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="142.9" y="1118.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (4 samples, 0.05%)</title><rect x="141.2" y="1123.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="144.2" y="1134.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (2 samples, 0.03%)</title><rect x="141.8" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.8" y="1134.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.09%)</title><rect x="142.1" y="1123.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="145.1" y="1134.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.05%)</title><rect x="142.6" y="1107.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="145.6" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="142.8" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="145.8" y="1102.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (31 samples, 0.41%)</title><rect x="143.2" y="1123.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="146.2" y="1134.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.11%)</title><rect x="144.8" y="1107.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="147.8" y="1118.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.04%)</title><rect x="145.6" y="1091.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="148.6" y="1102.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (7 samples, 0.09%)</title><rect x="146.1" y="1107.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="149.1" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.08%)</title><rect x="147.2" y="1107.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="150.2" y="1118.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (5 samples, 0.07%)</title><rect x="147.3" y="1091.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="150.3" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="147.6" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="150.6" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="147.6" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="150.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/2001223946.run (12 samples, 0.16%)</title><rect x="148.6" y="1139.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (10 samples, 0.13%)</title><rect x="148.9" y="1123.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.9" y="1134.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (10 samples, 0.13%)</title><rect x="148.9" y="1107.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (5 samples, 0.07%)</title><rect x="149.5" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (2 samples, 0.03%)</title><rect x="149.5" y="1075.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="149.5" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.5" y="1070.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.04%)</title><rect x="149.8" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.8" y="1086.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="150.0" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="150.0" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.03%)</title><rect x="150.6" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.03%)</title><rect x="150.6" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (5 samples, 0.07%)</title><rect x="150.9" y="1203.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.9" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="150.9" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.9" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="150.9" y="1171.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.9" y="1182.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="150.9" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.9" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="150.9" y="1139.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.9" y="1150.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="150.9" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.9" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="151.1" y="1107.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (27 samples, 0.36%)</title><rect x="151.7" y="1219.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.7" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.11%)</title><rect x="151.7" y="1203.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.7" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.11%)</title><rect x="151.7" y="1187.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.7" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="152.0" y="1171.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.0" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.08%)</title><rect x="152.0" y="1155.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.0" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (3 samples, 0.04%)</title><rect x="152.2" y="1139.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.2" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="152.7" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.25%)</title><rect x="153.0" y="1203.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.0" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (4 samples, 0.05%)</title><rect x="154.2" y="1187.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.2" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.05%)</title><rect x="154.9" y="1187.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="154.9" y="1171.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="154.9" y="1155.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="155.0" y="1139.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.0" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.04%)</title><rect x="155.5" y="1187.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.5" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.03%)</title><rect x="155.7" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (123 samples, 1.64%)</title><rect x="156.0" y="1331.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (123 samples, 1.64%)</title><rect x="156.0" y="1315.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (15 samples, 0.20%)</title><rect x="156.6" y="1299.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (12 samples, 0.16%)</title><rect x="157.1" y="1283.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (12 samples, 0.16%)</title><rect x="157.1" y="1267.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.&lt;init&gt; (10 samples, 0.13%)</title><rect x="157.4" y="1251.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (10 samples, 0.13%)</title><rect x="157.4" y="1235.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="158.5" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (3 samples, 0.04%)</title><rect x="159.0" y="1299.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (3 samples, 0.04%)</title><rect x="159.0" y="1283.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (3 samples, 0.04%)</title><rect x="159.0" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.0" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="159.0" y="1251.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.0" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="159.0" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (101 samples, 1.35%)</title><rect x="159.4" y="1299.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.4" y="1310.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (101 samples, 1.35%)</title><rect x="159.4" y="1283.0" width="15.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.4" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="159.7" y="1267.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="162.7" y="1278.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (64 samples, 0.85%)</title><rect x="160.4" y="1267.0" width="10.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="163.4" y="1278.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.03%)</title><rect x="161.3" y="1251.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="164.3" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.04%)</title><rect x="161.9" y="1251.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="164.9" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.04%)</title><rect x="161.9" y="1235.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="164.9" y="1246.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.04%)</title><rect x="162.6" y="1251.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="165.6" y="1262.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (13 samples, 0.17%)</title><rect x="163.2" y="1251.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="166.2" y="1262.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="164.1" y="1235.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="167.1" y="1246.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (3 samples, 0.04%)</title><rect x="164.5" y="1235.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="167.5" y="1246.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.03%)</title><rect x="165.2" y="1251.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="168.2" y="1262.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.03%)</title><rect x="165.7" y="1251.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="168.7" y="1262.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (12 samples, 0.16%)</title><rect x="166.2" y="1251.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="169.2" y="1262.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (8 samples, 0.11%)</title><rect x="166.7" y="1235.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="169.7" y="1246.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.07%)</title><rect x="166.7" y="1219.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="169.7" y="1230.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="167.0" y="1203.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="170.0" y="1214.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="167.4" y="1219.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="170.4" y="1230.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (15 samples, 0.20%)</title><rect x="168.1" y="1251.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="171.1" y="1262.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (6 samples, 0.08%)</title><rect x="168.9" y="1235.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="171.9" y="1246.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.03%)</title><rect x="169.5" y="1219.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="172.5" y="1230.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.04%)</title><rect x="170.0" y="1235.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="173.0" y="1246.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.04%)</title><rect x="170.0" y="1219.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="173.0" y="1230.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="170.0" y="1203.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="173.0" y="1214.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="170.0" y="1187.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="173.0" y="1198.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.03%)</title><rect x="170.4" y="1267.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="173.4" y="1278.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.05%)</title><rect x="171.2" y="1267.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="174.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1084093799.run (20 samples, 0.27%)</title><rect x="171.9" y="1267.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (19 samples, 0.25%)</title><rect x="172.0" y="1251.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.0" y="1262.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (19 samples, 0.25%)</title><rect x="172.0" y="1235.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.0" y="1246.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (15 samples, 0.20%)</title><rect x="172.5" y="1219.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.5" y="1230.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (14 samples, 0.19%)</title><rect x="172.6" y="1203.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.6" y="1214.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (14 samples, 0.19%)</title><rect x="172.6" y="1187.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="172.8" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.8" y="1182.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.04%)</title><rect x="172.8" y="1155.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.8" y="1166.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (10 samples, 0.13%)</title><rect x="173.3" y="1171.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.07%)</title><rect x="173.4" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="173.6" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (3 samples, 0.04%)</title><rect x="174.2" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="175.3" y="1427.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.3" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="175.3" y="1411.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (11 samples, 0.15%)</title><rect x="175.8" y="1427.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.8" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.04%)</title><rect x="176.3" y="1411.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (5 samples, 0.07%)</title><rect x="176.7" y="1411.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (4 samples, 0.05%)</title><rect x="176.9" y="1395.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="179.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1534255922.linkToTargetMethod (4 samples, 0.05%)</title><rect x="176.9" y="1379.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1819550379.invoke (4 samples, 0.05%)</title><rect x="176.9" y="1363.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="176.9" y="1347.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (2 samples, 0.03%)</title><rect x="176.9" y="1331.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1014054035.invoke (2 samples, 0.03%)</title><rect x="177.2" y="1347.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="177.2" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (102 samples, 1.36%)</title><rect x="177.5" y="1507.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.5" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (5 samples, 0.07%)</title><rect x="177.7" y="1491.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.7" y="1502.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.07%)</title><rect x="177.7" y="1475.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.7" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.04%)</title><rect x="177.7" y="1459.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="177.7" y="1443.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.7" y="1454.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="177.7" y="1427.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="177.7" y="1411.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="177.7" y="1395.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="177.7" y="1379.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (3 samples, 0.04%)</title><rect x="177.7" y="1363.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.03%)</title><rect x="178.1" y="1459.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (96 samples, 1.28%)</title><rect x="178.5" y="1491.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.5" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (96 samples, 1.28%)</title><rect x="178.5" y="1475.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.5" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (96 samples, 1.28%)</title><rect x="178.5" y="1459.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.5" y="1470.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.03%)</title><rect x="178.5" y="1443.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="181.5" y="1454.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.21%)</title><rect x="178.8" y="1443.0" width="14.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="181.8" y="1454.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="178.8" y="1427.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="181.8" y="1438.0"></text>
</g>
<g>
<title>write (89 samples, 1.19%)</title><rect x="179.1" y="1427.0" width="14.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="182.1" y="1438.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.15%)</title><rect x="179.6" y="1411.0" width="13.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="182.6" y="1422.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.15%)</title><rect x="179.6" y="1395.0" width="13.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="182.6" y="1406.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.07%)</title><rect x="180.5" y="1379.0" width="12.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="183.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 1.05%)</title><rect x="180.7" y="1363.0" width="12.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="183.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.04%)</title><rect x="180.8" y="1347.0" width="12.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="183.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.04%)</title><rect x="180.8" y="1331.0" width="12.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="183.8" y="1342.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.97%)</title><rect x="181.6" y="1315.0" width="11.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="184.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.91%)</title><rect x="182.4" y="1299.0" width="10.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="185.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.85%)</title><rect x="183.0" y="1283.0" width="10.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="186.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.79%)</title><rect x="183.8" y="1267.0" width="9.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="186.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.79%)</title><rect x="183.8" y="1251.0" width="9.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="186.8" y="1262.0"></text>
</g>
<g>
<title>write (3 samples, 0.04%)</title><rect x="193.1" y="1443.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="196.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (3 samples, 0.04%)</title><rect x="193.6" y="1507.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.6" y="1518.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.04%)</title><rect x="193.6" y="1491.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.6" y="1502.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (2 samples, 0.03%)</title><rect x="193.7" y="1475.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.7" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (23 samples, 0.31%)</title><rect x="194.0" y="1507.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.0" y="1518.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (4 samples, 0.05%)</title><rect x="194.5" y="1491.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="197.5" y="1502.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.05%)</title><rect x="194.5" y="1475.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.5" y="1486.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.05%)</title><rect x="194.5" y="1459.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.5" y="1470.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.05%)</title><rect x="194.5" y="1443.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.5" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (14 samples, 0.19%)</title><rect x="195.1" y="1491.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.1" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (3 samples, 0.04%)</title><rect x="195.6" y="1475.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (8 samples, 0.11%)</title><rect x="196.1" y="1475.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.1" y="1486.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (8 samples, 0.11%)</title><rect x="196.1" y="1459.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.1" y="1470.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.07%)</title><rect x="196.5" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.07%)</title><rect x="196.5" y="1427.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.5" y="1438.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.07%)</title><rect x="196.5" y="1411.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="199.5" y="1422.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (2 samples, 0.03%)</title><rect x="197.0" y="1395.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="200.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (2 samples, 0.03%)</title><rect x="197.3" y="1491.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.3" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (25 samples, 0.33%)</title><rect x="197.6" y="1507.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (25 samples, 0.33%)</title><rect x="197.6" y="1491.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (9 samples, 0.12%)</title><rect x="198.0" y="1475.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.0" y="1486.0"></text>
</g>
<g>
<title>java/util/Optional.of (9 samples, 0.12%)</title><rect x="198.0" y="1459.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="201.0" y="1470.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.03%)</title><rect x="198.1" y="1443.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.1" y="1454.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (6 samples, 0.08%)</title><rect x="198.4" y="1443.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="198.9" y="1427.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (2 samples, 0.03%)</title><rect x="199.1" y="1411.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.1" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (13 samples, 0.17%)</title><rect x="199.5" y="1475.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (2 samples, 0.03%)</title><rect x="199.7" y="1459.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.7" y="1470.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.05%)</title><rect x="200.0" y="1459.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.0" y="1470.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.05%)</title><rect x="200.0" y="1443.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.05%)</title><rect x="200.0" y="1427.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.0" y="1438.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.08%)</title><rect x="200.6" y="1459.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.6" y="1470.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (6 samples, 0.08%)</title><rect x="200.6" y="1443.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.6" y="1454.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="201.0" y="1427.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.0" y="1438.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="201.0" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2 samples, 0.03%)</title><rect x="201.6" y="1539.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/107149805.get (2 samples, 0.03%)</title><rect x="201.9" y="1587.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.9" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.05%)</title><rect x="202.4" y="1603.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.4" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.05%)</title><rect x="202.4" y="1587.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.4" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (2 samples, 0.03%)</title><rect x="202.7" y="1571.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.7" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (2 samples, 0.03%)</title><rect x="202.7" y="1555.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.7" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (755 samples, 10.06%)</title><rect x="203.0" y="1603.0" width="118.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.0" y="1614.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (740 samples, 9.86%)</title><rect x="205.4" y="1587.0" width="116.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.4" y="1598.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (562 samples, 7.49%)</title><rect x="205.7" y="1571.0" width="88.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.7" y="1582.0">java/util/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.07%)</title><rect x="206.5" y="1555.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.5" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.05%)</title><rect x="206.6" y="1539.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.6" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (35 samples, 0.47%)</title><rect x="207.2" y="1555.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.2" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (26 samples, 0.35%)</title><rect x="208.5" y="1539.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.5" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (9 samples, 0.12%)</title><rect x="210.4" y="1523.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (9 samples, 0.12%)</title><rect x="210.4" y="1507.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.4" y="1518.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (9 samples, 0.12%)</title><rect x="210.4" y="1491.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.4" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.12%)</title><rect x="210.4" y="1475.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (5 samples, 0.07%)</title><rect x="211.8" y="1523.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.8" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.17%)</title><rect x="212.9" y="1555.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.9" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (9 samples, 0.12%)</title><rect x="213.5" y="1539.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.5" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (9 samples, 0.12%)</title><rect x="213.5" y="1523.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.04%)</title><rect x="214.5" y="1507.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="214.5" y="1491.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="214.5" y="1475.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (67 samples, 0.89%)</title><rect x="215.0" y="1555.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.0" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (62 samples, 0.83%)</title><rect x="215.7" y="1539.0" width="9.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.7" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (55 samples, 0.73%)</title><rect x="216.5" y="1523.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 0.65%)</title><rect x="217.5" y="1507.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (47 samples, 0.63%)</title><rect x="217.8" y="1491.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.8" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.07%)</title><rect x="217.9" y="1475.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="220.9" y="1486.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="218.4" y="1459.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="221.4" y="1470.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (41 samples, 0.55%)</title><rect x="218.7" y="1475.0" width="6.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="221.7" y="1486.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.44%)</title><rect x="220.0" y="1459.0" width="5.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="223.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.44%)</title><rect x="220.0" y="1443.0" width="5.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="223.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="220.3" y="1427.0" width="4.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="223.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="220.3" y="1411.0" width="4.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="223.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="220.3" y="1395.0" width="4.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="223.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="220.3" y="1379.0" width="4.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="223.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.40%)</title><rect x="220.5" y="1363.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="223.5" y="1374.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.40%)</title><rect x="220.5" y="1347.0" width="4.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="223.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="225.2" y="1523.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.2" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (435 samples, 5.80%)</title><rect x="225.6" y="1555.0" width="68.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.6" y="1566.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (435 samples, 5.80%)</title><rect x="225.6" y="1539.0" width="68.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.6" y="1550.0">jdk/int..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="226.9" y="1523.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="229.9" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (4 samples, 0.05%)</title><rect x="227.4" y="1523.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="230.4" y="1534.0"></text>
</g>
<g>
<title>Unsafe_Park (184 samples, 2.45%)</title><rect x="228.0" y="1523.0" width="28.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="231.0" y="1534.0">Un..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.05%)</title><rect x="229.7" y="1507.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="232.7" y="1518.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.05%)</title><rect x="230.4" y="1507.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="233.4" y="1518.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="231.2" y="1507.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="234.2" y="1518.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (40 samples, 0.53%)</title><rect x="231.5" y="1507.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="234.5" y="1518.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.08%)</title><rect x="235.1" y="1491.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="238.1" y="1502.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.04%)</title><rect x="236.0" y="1491.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="239.0" y="1502.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.11%)</title><rect x="236.5" y="1491.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.5" y="1502.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (4 samples, 0.05%)</title><rect x="237.8" y="1507.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="240.8" y="1518.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="238.4" y="1507.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="241.4" y="1518.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (4 samples, 0.05%)</title><rect x="238.9" y="1507.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="241.9" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="239.5" y="1507.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="242.5" y="1518.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="239.5" y="1491.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="242.5" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="239.5" y="1475.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="242.5" y="1486.0"></text>
</g>
<g>
<title>__lll_unlock_wake (80 samples, 1.07%)</title><rect x="239.8" y="1507.0" width="12.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="242.8" y="1518.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.55%)</title><rect x="245.9" y="1491.0" width="6.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="248.9" y="1502.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.55%)</title><rect x="245.9" y="1475.0" width="6.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="248.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="248.8" y="1459.0" width="3.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="251.8" y="1470.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.29%)</title><rect x="248.9" y="1443.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="251.9" y="1454.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="249.7" y="1427.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="252.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="251.9" y="1411.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="254.9" y="1422.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.09%)</title><rect x="252.4" y="1507.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="255.4" y="1518.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (6 samples, 0.08%)</title><rect x="253.5" y="1507.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="256.5" y="1518.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.07%)</title><rect x="254.4" y="1507.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="257.4" y="1518.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (4 samples, 0.05%)</title><rect x="255.4" y="1507.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="258.4" y="1518.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.08%)</title><rect x="256.0" y="1507.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="259.0" y="1518.0"></text>
</g>
<g>
<title>[unknown] (233 samples, 3.11%)</title><rect x="256.9" y="1523.0" width="36.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="259.9" y="1534.0">[un..</text>
</g>
<g>
<title>__pthread_cleanup_pop (3 samples, 0.04%)</title><rect x="256.9" y="1507.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="259.9" y="1518.0"></text>
</g>
<g>
<title>__pthread_cond_wait (211 samples, 2.81%)</title><rect x="257.6" y="1507.0" width="33.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="260.6" y="1518.0">__..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.88%)</title><rect x="268.6" y="1491.0" width="22.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="271.6" y="1502.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.88%)</title><rect x="268.6" y="1475.0" width="22.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="271.6" y="1486.0">[..</text>
</g>
<g>
<title>[unknown] (124 samples, 1.65%)</title><rect x="271.3" y="1459.0" width="19.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="274.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.57%)</title><rect x="272.2" y="1443.0" width="18.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="275.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.47%)</title><rect x="273.5" y="1427.0" width="17.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="276.5" y="1438.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.19%)</title><rect x="276.8" y="1411.0" width="14.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="279.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.83%)</title><rect x="281.0" y="1395.0" width="9.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="284.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.60%)</title><rect x="283.7" y="1379.0" width="7.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="286.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.45%)</title><rect x="285.4" y="1363.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="288.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="289.8" y="1347.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="292.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="289.8" y="1331.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="292.8" y="1342.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="289.8" y="1315.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="292.8" y="1326.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="289.8" y="1299.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="292.8" y="1310.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="289.8" y="1283.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="292.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="289.8" y="1267.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="292.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="289.8" y="1251.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="292.8" y="1262.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.08%)</title><rect x="290.8" y="1507.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="293.8" y="1518.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.05%)</title><rect x="291.7" y="1507.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="294.7" y="1518.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (4 samples, 0.05%)</title><rect x="292.3" y="1507.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="295.3" y="1518.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.04%)</title><rect x="293.1" y="1507.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="296.1" y="1518.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="293.6" y="1523.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="296.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (18 samples, 0.24%)</title><rect x="294.2" y="1571.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.2" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (18 samples, 0.24%)</title><rect x="294.2" y="1555.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.2" y="1566.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.07%)</title><rect x="294.2" y="1539.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.2" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (8 samples, 0.11%)</title><rect x="295.0" y="1539.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.0" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.09%)</title><rect x="295.0" y="1523.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.09%)</title><rect x="295.0" y="1507.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.0" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.09%)</title><rect x="295.0" y="1491.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.0" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.05%)</title><rect x="295.2" y="1475.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="298.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="295.8" y="1475.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="298.8" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.07%)</title><rect x="296.3" y="1539.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.07%)</title><rect x="296.3" y="1523.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.3" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.05%)</title><rect x="296.3" y="1507.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="299.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.05%)</title><rect x="296.3" y="1491.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.05%)</title><rect x="296.3" y="1475.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (157 samples, 2.09%)</title><rect x="297.1" y="1571.0" width="24.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.1" y="1582.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (157 samples, 2.09%)</title><rect x="297.1" y="1555.0" width="24.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.1" y="1566.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (157 samples, 2.09%)</title><rect x="297.1" y="1539.0" width="24.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.1" y="1550.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (157 samples, 2.09%)</title><rect x="297.1" y="1523.0" width="24.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.1" y="1534.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (157 samples, 2.09%)</title><rect x="297.1" y="1507.0" width="24.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.1" y="1518.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2 samples, 0.03%)</title><rect x="297.4" y="1491.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="300.4" y="1502.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="297.8" y="1491.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="300.8" y="1502.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.24%)</title><rect x="298.2" y="1491.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="301.2" y="1502.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="298.6" y="1475.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="301.6" y="1486.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="299.6" y="1475.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="302.6" y="1486.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="300.0" y="1475.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="303.0" y="1486.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.05%)</title><rect x="300.4" y="1475.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="303.4" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.05%)</title><rect x="301.0" y="1491.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="304.0" y="1502.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (128 samples, 1.71%)</title><rect x="301.6" y="1491.0" width="20.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="304.6" y="1502.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.45%)</title><rect x="304.6" y="1475.0" width="17.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="307.6" y="1486.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.45%)</title><rect x="304.6" y="1459.0" width="17.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="307.6" y="1470.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.32%)</title><rect x="306.2" y="1443.0" width="15.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="309.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 1.32%)</title><rect x="306.2" y="1427.0" width="15.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="309.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.31%)</title><rect x="306.3" y="1411.0" width="15.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="309.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.25%)</title><rect x="307.0" y="1395.0" width="14.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="310.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.20%)</title><rect x="307.6" y="1379.0" width="14.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="310.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.15%)</title><rect x="308.2" y="1363.0" width="13.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="311.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.03%)</title><rect x="321.8" y="1603.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.8" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$252/1669380854.run (665 samples, 8.86%)</title><rect x="322.1" y="1603.0" width="104.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.1" y="1614.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (664 samples, 8.85%)</title><rect x="322.2" y="1587.0" width="104.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.2" y="1598.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (664 samples, 8.85%)</title><rect x="322.2" y="1571.0" width="104.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.2" y="1582.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (660 samples, 8.80%)</title><rect x="322.7" y="1555.0" width="103.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.7" y="1566.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (659 samples, 8.78%)</title><rect x="322.9" y="1539.0" width="103.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.9" y="1550.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (659 samples, 8.78%)</title><rect x="322.9" y="1523.0" width="103.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.9" y="1534.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.03%)</title><rect x="322.9" y="1507.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (657 samples, 8.76%)</title><rect x="323.2" y="1507.0" width="103.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.2" y="1518.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (657 samples, 8.76%)</title><rect x="323.2" y="1491.0" width="103.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.2" y="1502.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (656 samples, 8.74%)</title><rect x="323.3" y="1475.0" width="103.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.3" y="1486.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (656 samples, 8.74%)</title><rect x="323.3" y="1459.0" width="103.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.3" y="1470.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (656 samples, 8.74%)</title><rect x="323.3" y="1443.0" width="103.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.3" y="1454.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (138 samples, 1.84%)</title><rect x="324.1" y="1427.0" width="21.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.1" y="1438.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (106 samples, 1.41%)</title><rect x="325.7" y="1411.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (105 samples, 1.40%)</title><rect x="325.8" y="1395.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="328.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (105 samples, 1.40%)</title><rect x="325.8" y="1379.0" width="16.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.8" y="1390.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="326.2" y="1363.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="329.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 1.29%)</title><rect x="326.5" y="1363.0" width="15.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (16 samples, 0.21%)</title><rect x="328.2" y="1347.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="328.5" y="1331.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.04%)</title><rect x="328.5" y="1315.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$266/153627331.apply (6 samples, 0.08%)</title><rect x="329.0" y="1331.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (6 samples, 0.08%)</title><rect x="329.0" y="1315.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (6 samples, 0.08%)</title><rect x="329.0" y="1299.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (6 samples, 0.08%)</title><rect x="329.0" y="1283.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.03%)</title><rect x="329.6" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.03%)</title><rect x="329.6" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.03%)</title><rect x="329.6" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (5 samples, 0.07%)</title><rect x="329.9" y="1331.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (5 samples, 0.07%)</title><rect x="329.9" y="1315.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (5 samples, 0.07%)</title><rect x="329.9" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5 samples, 0.07%)</title><rect x="329.9" y="1283.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5 samples, 0.07%)</title><rect x="329.9" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.07%)</title><rect x="329.9" y="1251.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (5 samples, 0.07%)</title><rect x="329.9" y="1235.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5 samples, 0.07%)</title><rect x="329.9" y="1219.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="332.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.03%)</title><rect x="329.9" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="329.9" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="329.9" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="329.9" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="329.9" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.03%)</title><rect x="329.9" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (2 samples, 0.03%)</title><rect x="329.9" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="329.9" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="329.9" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.03%)</title><rect x="329.9" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.03%)</title><rect x="329.9" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.run (2 samples, 0.03%)</title><rect x="329.9" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.03%)</title><rect x="329.9" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.03%)</title><rect x="329.9" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.04%)</title><rect x="330.2" y="1203.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.04%)</title><rect x="330.2" y="1187.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="330.2" y="1171.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="330.2" y="1155.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="330.2" y="1139.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.04%)</title><rect x="330.2" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.04%)</title><rect x="330.2" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (3 samples, 0.04%)</title><rect x="330.2" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (3 samples, 0.04%)</title><rect x="330.2" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (3 samples, 0.04%)</title><rect x="330.2" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.04%)</title><rect x="330.2" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.04%)</title><rect x="330.2" y="1027.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="330.2" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.04%)</title><rect x="330.2" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.2" y="1006.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (3 samples, 0.04%)</title><rect x="330.2" y="979.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="333.2" y="990.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.04%)</title><rect x="330.2" y="963.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="333.2" y="974.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.04%)</title><rect x="330.2" y="947.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="333.2" y="958.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.04%)</title><rect x="330.2" y="931.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="333.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (66 samples, 0.88%)</title><rect x="330.7" y="1347.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (65 samples, 0.87%)</title><rect x="330.9" y="1331.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="330.9" y="1315.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.04%)</title><rect x="330.9" y="1299.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="331.0" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.03%)</title><rect x="331.0" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="334.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$234/241703374.apply (62 samples, 0.83%)</title><rect x="331.3" y="1315.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.3" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (62 samples, 0.83%)</title><rect x="331.3" y="1299.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (62 samples, 0.83%)</title><rect x="331.3" y="1283.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$132/672253364.apply (27 samples, 0.36%)</title><rect x="331.3" y="1267.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (27 samples, 0.36%)</title><rect x="331.3" y="1251.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="331.5" y="1235.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="331.5" y="1219.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (22 samples, 0.29%)</title><rect x="332.1" y="1235.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (18 samples, 0.24%)</title><rect x="332.1" y="1219.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (18 samples, 0.24%)</title><rect x="332.1" y="1203.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (18 samples, 0.24%)</title><rect x="332.1" y="1187.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$265/590862494.accept (18 samples, 0.24%)</title><rect x="332.1" y="1171.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (18 samples, 0.24%)</title><rect x="332.1" y="1155.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (18 samples, 0.24%)</title><rect x="332.1" y="1139.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (18 samples, 0.24%)</title><rect x="332.1" y="1123.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (18 samples, 0.24%)</title><rect x="332.1" y="1107.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.24%)</title><rect x="332.1" y="1091.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.24%)</title><rect x="332.1" y="1075.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17 samples, 0.23%)</title><rect x="332.3" y="1059.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16 samples, 0.21%)</title><rect x="332.4" y="1043.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (16 samples, 0.21%)</title><rect x="332.4" y="1027.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.4" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (3 samples, 0.04%)</title><rect x="332.6" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (6 samples, 0.08%)</title><rect x="333.1" y="1011.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.08%)</title><rect x="333.1" y="995.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$DataPair.&lt;init&gt; (3 samples, 0.04%)</title><rect x="333.1" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.04%)</title><rect x="333.5" y="979.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.05%)</title><rect x="334.0" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.05%)</title><rect x="334.0" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.0" y="1006.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="334.0" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="334.3" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="337.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="334.3" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="334.3" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="334.3" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="334.3" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="337.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.03%)</title><rect x="334.6" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (2 samples, 0.03%)</title><rect x="334.6" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.03%)</title><rect x="334.6" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4 samples, 0.05%)</title><rect x="335.0" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4 samples, 0.05%)</title><rect x="335.0" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (4 samples, 0.05%)</title><rect x="335.0" y="1187.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.0" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="335.0" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.0" y="1182.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="335.0" y="1155.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.0" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="335.0" y="1139.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.0" y="1150.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="335.0" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="335.0" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.0" y="1118.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.03%)</title><rect x="335.0" y="1091.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="338.0" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="335.3" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="335.3" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.3" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="335.3" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="335.3" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.3" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="335.3" y="1107.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$134/372014729.apply (35 samples, 0.47%)</title><rect x="335.6" y="1267.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (35 samples, 0.47%)</title><rect x="335.6" y="1251.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (35 samples, 0.47%)</title><rect x="335.6" y="1235.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (34 samples, 0.45%)</title><rect x="335.8" y="1219.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (20 samples, 0.27%)</title><rect x="337.5" y="1203.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.5" y="1214.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="339.5" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.screenExecutor (2 samples, 0.03%)</title><rect x="340.0" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="343.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.04%)</title><rect x="341.1" y="1347.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$257/3868478.get (3 samples, 0.04%)</title><rect x="341.7" y="1363.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="344.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (19 samples, 0.25%)</title><rect x="342.4" y="1411.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.07%)</title><rect x="343.1" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.07%)</title><rect x="343.1" y="1379.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (9 samples, 0.12%)</title><rect x="343.9" y="1395.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (9 samples, 0.12%)</title><rect x="343.9" y="1379.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (5 samples, 0.07%)</title><rect x="343.9" y="1363.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="344.4" y="1347.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="344.4" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateHead (2 samples, 0.03%)</title><rect x="344.7" y="1363.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (2 samples, 0.03%)</title><rect x="345.0" y="1363.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.03%)</title><rect x="345.3" y="1411.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.03%)</title><rect x="345.8" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.8" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.03%)</title><rect x="345.8" y="1411.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.03%)</title><rect x="345.8" y="1395.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (510 samples, 6.80%)</title><rect x="346.1" y="1427.0" width="80.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.1" y="1438.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (510 samples, 6.80%)</title><rect x="346.1" y="1411.0" width="80.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.1" y="1422.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (510 samples, 6.80%)</title><rect x="346.1" y="1395.0" width="80.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.1" y="1406.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (510 samples, 6.80%)</title><rect x="346.1" y="1379.0" width="80.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.1" y="1390.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$270/1687059582.run (3 samples, 0.04%)</title><rect x="346.3" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.04%)</title><rect x="346.3" y="1347.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3 samples, 0.04%)</title><rect x="346.3" y="1331.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (504 samples, 6.72%)</title><rect x="346.8" y="1363.0" width="79.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.8" y="1374.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (498 samples, 6.64%)</title><rect x="346.8" y="1347.0" width="78.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.8" y="1358.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (498 samples, 6.64%)</title><rect x="346.8" y="1331.0" width="78.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.8" y="1342.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (494 samples, 6.58%)</title><rect x="347.2" y="1315.0" width="77.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.2" y="1326.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (494 samples, 6.58%)</title><rect x="347.2" y="1299.0" width="77.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.2" y="1310.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.04%)</title><rect x="347.9" y="1283.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.9" y="1294.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.04%)</title><rect x="347.9" y="1267.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.9" y="1278.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.03%)</title><rect x="348.0" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (461 samples, 6.15%)</title><rect x="348.8" y="1283.0" width="72.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.8" y="1294.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (461 samples, 6.15%)</title><rect x="348.8" y="1267.0" width="72.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.8" y="1278.0">sun/nio/..</text>
</g>
<g>
<title>[unknown] (453 samples, 6.04%)</title><rect x="349.4" y="1251.0" width="71.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="352.4" y="1262.0">[unknown]</text>
</g>
<g>
<title>[unknown] (452 samples, 6.03%)</title><rect x="349.4" y="1235.0" width="71.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="352.4" y="1246.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (451 samples, 6.01%)</title><rect x="349.4" y="1219.0" width="71.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="352.4" y="1230.0">__GI___w..</text>
</g>
<g>
<title>[unknown] (435 samples, 5.80%)</title><rect x="352.0" y="1203.0" width="68.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="355.0" y="1214.0">[unknown]</text>
</g>
<g>
<title>[unknown] (435 samples, 5.80%)</title><rect x="352.0" y="1187.0" width="68.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="355.0" y="1198.0">[unknown]</text>
</g>
<g>
<title>[unknown] (431 samples, 5.75%)</title><rect x="352.6" y="1171.0" width="67.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="355.6" y="1182.0">[unknown]</text>
</g>
<g>
<title>[unknown] (429 samples, 5.72%)</title><rect x="352.9" y="1155.0" width="67.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="355.9" y="1166.0">[unknown]</text>
</g>
<g>
<title>[unknown] (429 samples, 5.72%)</title><rect x="352.9" y="1139.0" width="67.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="355.9" y="1150.0">[unknown]</text>
</g>
<g>
<title>[unknown] (426 samples, 5.68%)</title><rect x="353.4" y="1123.0" width="67.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="356.4" y="1134.0">[unknown]</text>
</g>
<g>
<title>[unknown] (419 samples, 5.59%)</title><rect x="354.5" y="1107.0" width="65.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="357.5" y="1118.0">[unknown]</text>
</g>
<g>
<title>[unknown] (403 samples, 5.37%)</title><rect x="357.0" y="1091.0" width="63.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="360.0" y="1102.0">[unknown]</text>
</g>
<g>
<title>[unknown] (398 samples, 5.31%)</title><rect x="357.8" y="1075.0" width="62.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="360.8" y="1086.0">[unkno..</text>
</g>
<g>
<title>[unknown] (392 samples, 5.23%)</title><rect x="358.7" y="1059.0" width="61.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="361.7" y="1070.0">[unkno..</text>
</g>
<g>
<title>[unknown] (387 samples, 5.16%)</title><rect x="359.5" y="1043.0" width="60.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="362.5" y="1054.0">[unkno..</text>
</g>
<g>
<title>[unknown] (380 samples, 5.07%)</title><rect x="360.6" y="1027.0" width="59.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="363.6" y="1038.0">[unkno..</text>
</g>
<g>
<title>[unknown] (355 samples, 4.73%)</title><rect x="364.5" y="1011.0" width="55.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="367.5" y="1022.0">[unkn..</text>
</g>
<g>
<title>[unknown] (337 samples, 4.49%)</title><rect x="367.4" y="995.0" width="53.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="370.4" y="1006.0">[unkn..</text>
</g>
<g>
<title>[unknown] (322 samples, 4.29%)</title><rect x="369.7" y="979.0" width="50.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="372.7" y="990.0">[unkn..</text>
</g>
<g>
<title>[unknown] (301 samples, 4.01%)</title><rect x="373.0" y="963.0" width="47.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="376.0" y="974.0">[unk..</text>
</g>
<g>
<title>[unknown] (281 samples, 3.75%)</title><rect x="376.2" y="947.0" width="44.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="379.2" y="958.0">[unk..</text>
</g>
<g>
<title>[unknown] (278 samples, 3.71%)</title><rect x="376.6" y="931.0" width="43.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="379.6" y="942.0">[unk..</text>
</g>
<g>
<title>[unknown] (266 samples, 3.55%)</title><rect x="378.5" y="915.0" width="41.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="381.5" y="926.0">[un..</text>
</g>
<g>
<title>[unknown] (259 samples, 3.45%)</title><rect x="379.6" y="899.0" width="40.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="382.6" y="910.0">[un..</text>
</g>
<g>
<title>[unknown] (256 samples, 3.41%)</title><rect x="380.1" y="883.0" width="40.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="383.1" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (251 samples, 3.35%)</title><rect x="380.9" y="867.0" width="39.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="383.9" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (243 samples, 3.24%)</title><rect x="382.2" y="851.0" width="38.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="385.2" y="862.0">[un..</text>
</g>
<g>
<title>[unknown] (241 samples, 3.21%)</title><rect x="382.5" y="835.0" width="37.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="385.5" y="846.0">[un..</text>
</g>
<g>
<title>[unknown] (233 samples, 3.11%)</title><rect x="383.7" y="819.0" width="36.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="386.7" y="830.0">[un..</text>
</g>
<g>
<title>[unknown] (227 samples, 3.03%)</title><rect x="384.7" y="803.0" width="35.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="387.7" y="814.0">[un..</text>
</g>
<g>
<title>[unknown] (214 samples, 2.85%)</title><rect x="386.7" y="787.0" width="33.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="389.7" y="798.0">[u..</text>
</g>
<g>
<title>[unknown] (205 samples, 2.73%)</title><rect x="388.1" y="771.0" width="32.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="391.1" y="782.0">[u..</text>
</g>
<g>
<title>[unknown] (199 samples, 2.65%)</title><rect x="389.1" y="755.0" width="31.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="392.1" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (196 samples, 2.61%)</title><rect x="389.5" y="739.0" width="30.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="392.5" y="750.0">[u..</text>
</g>
<g>
<title>[unknown] (195 samples, 2.60%)</title><rect x="389.7" y="723.0" width="30.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="392.7" y="734.0">[u..</text>
</g>
<g>
<title>[unknown] (183 samples, 2.44%)</title><rect x="391.6" y="707.0" width="28.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="394.6" y="718.0">[u..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.36%)</title><rect x="392.5" y="691.0" width="27.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="395.5" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (173 samples, 2.31%)</title><rect x="393.2" y="675.0" width="27.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="396.2" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (173 samples, 2.31%)</title><rect x="393.2" y="659.0" width="27.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="396.2" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (169 samples, 2.25%)</title><rect x="393.8" y="643.0" width="26.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="396.8" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (162 samples, 2.16%)</title><rect x="394.9" y="627.0" width="25.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="397.9" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (156 samples, 2.08%)</title><rect x="395.8" y="611.0" width="24.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="398.8" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.91%)</title><rect x="397.9" y="595.0" width="22.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="400.9" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (119 samples, 1.59%)</title><rect x="401.7" y="579.0" width="18.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="404.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.36%)</title><rect x="404.3" y="563.0" width="16.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="407.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.28%)</title><rect x="405.3" y="547.0" width="15.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="408.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.01%)</title><rect x="408.4" y="531.0" width="12.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="411.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="419.4" y="515.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="422.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="419.6" y="499.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="422.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="420.1" y="483.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="423.1" y="494.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.03%)</title><rect x="421.0" y="1251.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="424.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.11%)</title><rect x="421.3" y="1283.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.3" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.08%)</title><rect x="421.6" y="1267.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (13 samples, 0.17%)</title><rect x="422.6" y="1283.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.12%)</title><rect x="422.6" y="1267.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (6 samples, 0.08%)</title><rect x="422.7" y="1251.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.7" y="1262.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="423.7" y="1251.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="426.7" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerLast (4 samples, 0.05%)</title><rect x="424.0" y="1267.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.0" y="1278.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.03%)</title><rect x="424.6" y="1283.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="427.6" y="1294.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.08%)</title><rect x="425.1" y="1347.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.1" y="1358.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.04%)</title><rect x="425.6" y="1331.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.6" y="1342.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (3 samples, 0.04%)</title><rect x="425.6" y="1315.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.03%)</title><rect x="426.0" y="1363.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.0" y="1374.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.03%)</title><rect x="426.0" y="1347.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.0" y="1358.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.03%)</title><rect x="426.0" y="1331.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (784 samples, 10.45%)</title><rect x="426.7" y="1603.0" width="123.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="429.7" y="1614.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (783 samples, 10.44%)</title><rect x="426.8" y="1587.0" width="123.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.8" y="1598.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.04%)</title><rect x="427.5" y="1571.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.04%)</title><rect x="427.5" y="1555.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.5" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.04%)</title><rect x="427.5" y="1539.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.5" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (424 samples, 5.65%)</title><rect x="427.9" y="1571.0" width="66.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="430.9" y="1582.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (417 samples, 5.56%)</title><rect x="428.7" y="1555.0" width="65.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.7" y="1566.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (417 samples, 5.56%)</title><rect x="428.7" y="1539.0" width="65.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.7" y="1550.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (100 samples, 1.33%)</title><rect x="429.3" y="1523.0" width="15.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.3" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (100 samples, 1.33%)</title><rect x="429.3" y="1507.0" width="15.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (100 samples, 1.33%)</title><rect x="429.3" y="1491.0" width="15.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.3" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (100 samples, 1.33%)</title><rect x="429.3" y="1475.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (95 samples, 1.27%)</title><rect x="429.5" y="1459.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="429.5" y="1443.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="429.5" y="1427.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.5" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.get$Lambda (3 samples, 0.04%)</title><rect x="429.5" y="1411.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/158439145.&lt;init&gt; (3 samples, 0.04%)</title><rect x="429.5" y="1395.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (92 samples, 1.23%)</title><rect x="430.0" y="1443.0" width="14.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (91 samples, 1.21%)</title><rect x="430.0" y="1427.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (91 samples, 1.21%)</title><rect x="430.0" y="1411.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.0" y="1422.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="430.6" y="1395.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="433.6" y="1406.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.03%)</title><rect x="430.6" y="1379.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="433.6" y="1390.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (2 samples, 0.03%)</title><rect x="430.6" y="1363.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="433.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (85 samples, 1.13%)</title><rect x="430.9" y="1395.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.9" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (81 samples, 1.08%)</title><rect x="431.5" y="1379.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.5" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (79 samples, 1.05%)</title><rect x="431.9" y="1363.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.04%)</title><rect x="431.9" y="1347.0" width="12.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="434.9" y="1358.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="432.0" y="1331.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="435.0" y="1342.0"></text>
</g>
<g>
<title>write (75 samples, 1.00%)</title><rect x="432.3" y="1331.0" width="11.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="435.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.85%)</title><rect x="434.1" y="1315.0" width="10.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="437.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.85%)</title><rect x="434.1" y="1299.0" width="10.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="437.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.77%)</title><rect x="435.0" y="1283.0" width="9.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="438.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.77%)</title><rect x="435.0" y="1267.0" width="9.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="438.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.77%)</title><rect x="435.0" y="1251.0" width="9.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="438.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.76%)</title><rect x="435.2" y="1235.0" width="8.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="438.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.71%)</title><rect x="435.8" y="1219.0" width="8.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="438.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.67%)</title><rect x="436.3" y="1203.0" width="7.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="439.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.65%)</title><rect x="436.4" y="1187.0" width="7.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="439.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.61%)</title><rect x="436.9" y="1171.0" width="7.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="439.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.57%)</title><rect x="437.4" y="1155.0" width="6.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="440.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (3 samples, 0.04%)</title><rect x="444.6" y="1459.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.04%)</title><rect x="445.1" y="1523.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.1" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.03%)</title><rect x="445.2" y="1507.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.2" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="445.2" y="1491.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.2" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (308 samples, 4.11%)</title><rect x="445.9" y="1523.0" width="48.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.9" y="1534.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (306 samples, 4.08%)</title><rect x="446.2" y="1507.0" width="48.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.2" y="1518.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (304 samples, 4.05%)</title><rect x="446.5" y="1491.0" width="47.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.5" y="1502.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (304 samples, 4.05%)</title><rect x="446.5" y="1475.0" width="47.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.5" y="1486.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (147 samples, 1.96%)</title><rect x="446.6" y="1459.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.6" y="1470.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (147 samples, 1.96%)</title><rect x="446.6" y="1443.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.6" y="1454.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (145 samples, 1.93%)</title><rect x="447.0" y="1427.0" width="22.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.0" y="1438.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (144 samples, 1.92%)</title><rect x="447.1" y="1411.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.1" y="1422.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (143 samples, 1.91%)</title><rect x="447.3" y="1395.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.3" y="1406.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (143 samples, 1.91%)</title><rect x="447.3" y="1379.0" width="22.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.3" y="1390.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (143 samples, 1.91%)</title><rect x="447.3" y="1363.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.3" y="1374.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.09%)</title><rect x="447.3" y="1347.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.09%)</title><rect x="447.3" y="1331.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.09%)</title><rect x="447.3" y="1315.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.07%)</title><rect x="447.3" y="1299.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (2 samples, 0.03%)</title><rect x="447.3" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.setRelease (2 samples, 0.03%)</title><rect x="447.3" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.04%)</title><rect x="447.6" y="1283.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (2 samples, 0.03%)</title><rect x="447.7" y="1267.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (122 samples, 1.63%)</title><rect x="448.4" y="1347.0" width="19.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (122 samples, 1.63%)</title><rect x="448.4" y="1331.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (102 samples, 1.36%)</title><rect x="448.4" y="1315.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="448.8" y="1299.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.05%)</title><rect x="448.8" y="1283.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/333290615.apply (79 samples, 1.05%)</title><rect x="449.6" y="1299.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (79 samples, 1.05%)</title><rect x="449.6" y="1283.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (77 samples, 1.03%)</title><rect x="449.8" y="1267.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (77 samples, 1.03%)</title><rect x="449.8" y="1251.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (70 samples, 0.93%)</title><rect x="449.8" y="1235.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.8" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (17 samples, 0.23%)</title><rect x="449.9" y="1219.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.9" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.07%)</title><rect x="450.1" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.1" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.07%)</title><rect x="450.1" y="1187.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.1" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.07%)</title><rect x="450.1" y="1171.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.1" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.07%)</title><rect x="450.1" y="1155.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.1" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="450.3" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="450.4" y="1123.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="450.4" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="450.4" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.4" y="1102.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="450.9" y="1203.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.9" y="1214.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.03%)</title><rect x="450.9" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.9" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="450.9" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.9" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (8 samples, 0.11%)</title><rect x="451.4" y="1203.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.4" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.11%)</title><rect x="451.4" y="1187.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.09%)</title><rect x="451.5" y="1171.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.5" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.09%)</title><rect x="451.5" y="1155.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.5" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.09%)</title><rect x="451.5" y="1139.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.5" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.07%)</title><rect x="451.7" y="1123.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (5 samples, 0.07%)</title><rect x="451.7" y="1107.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.7" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.04%)</title><rect x="452.0" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.0" y="1102.0"></text>
</g>
<g>
<title>java/util/OptionalLong.orElse (2 samples, 0.03%)</title><rect x="452.6" y="1219.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.03%)</title><rect x="452.9" y="1219.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.9" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="452.9" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (3 samples, 0.04%)</title><rect x="453.2" y="1219.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="453.2" y="1203.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 0.60%)</title><rect x="453.7" y="1219.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/556804795.run (44 samples, 0.59%)</title><rect x="453.9" y="1203.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (43 samples, 0.57%)</title><rect x="454.0" y="1187.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.09%)</title><rect x="454.5" y="1171.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.09%)</title><rect x="454.5" y="1155.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1587562441.get$Lambda (7 samples, 0.09%)</title><rect x="454.5" y="1139.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1587562441.&lt;init&gt; (7 samples, 0.09%)</title><rect x="454.5" y="1123.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.04%)</title><rect x="455.1" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isCompletedExceptionally (2 samples, 0.03%)</title><rect x="455.6" y="1171.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.07%)</title><rect x="455.9" y="1171.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.07%)</title><rect x="455.9" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.05%)</title><rect x="456.1" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (4 samples, 0.05%)</title><rect x="456.1" y="1123.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="456.2" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="456.2" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (15 samples, 0.20%)</title><rect x="456.9" y="1171.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (15 samples, 0.20%)</title><rect x="456.9" y="1155.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.9" y="1166.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (14 samples, 0.19%)</title><rect x="456.9" y="1139.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.9" y="1150.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (14 samples, 0.19%)</title><rect x="456.9" y="1123.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (14 samples, 0.19%)</title><rect x="456.9" y="1107.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.9" y="1118.0"></text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.11%)</title><rect x="457.5" y="1091.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="460.5" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="458.1" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="461.1" y="1086.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="458.4" y="1075.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="461.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (9 samples, 0.12%)</title><rect x="459.2" y="1171.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="459.7" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/116237769.invoke (4 samples, 0.05%)</title><rect x="459.7" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="459.9" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (2 samples, 0.03%)</title><rect x="460.3" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (7 samples, 0.09%)</title><rect x="460.8" y="1235.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$235/60851830.apply (15 samples, 0.20%)</title><rect x="462.1" y="1299.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (15 samples, 0.20%)</title><rect x="462.1" y="1283.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (15 samples, 0.20%)</title><rect x="462.1" y="1267.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="465.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (10 samples, 0.13%)</title><rect x="462.8" y="1251.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.13%)</title><rect x="462.8" y="1235.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.8" y="1246.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (9 samples, 0.12%)</title><rect x="463.0" y="1219.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.0" y="1230.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.03%)</title><rect x="463.2" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.2" y="1214.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.03%)</title><rect x="463.2" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.2" y="1198.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.08%)</title><rect x="463.5" y="1203.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.07%)</title><rect x="463.6" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.6" y="1198.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.05%)</title><rect x="463.8" y="1171.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="466.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (16 samples, 0.21%)</title><rect x="464.4" y="1315.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (16 samples, 0.21%)</title><rect x="464.4" y="1299.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="464.7" y="1283.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.05%)</title><rect x="464.7" y="1267.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.7" y="1278.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="464.7" y="1251.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="467.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.apply (2 samples, 0.03%)</title><rect x="465.0" y="1251.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/1296583077.apply (10 samples, 0.13%)</title><rect x="465.4" y="1283.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (10 samples, 0.13%)</title><rect x="465.4" y="1267.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (7 samples, 0.09%)</title><rect x="465.4" y="1251.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (7 samples, 0.09%)</title><rect x="465.4" y="1235.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.4" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (5 samples, 0.07%)</title><rect x="465.7" y="1219.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.7" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (3 samples, 0.04%)</title><rect x="466.0" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.0" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="466.1" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="466.5" y="1251.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.05%)</title><rect x="466.9" y="1315.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (3 samples, 0.04%)</title><rect x="466.9" y="1299.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="466.9" y="1283.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="466.9" y="1267.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$280/1477862221.apply (12 samples, 0.16%)</title><rect x="467.6" y="1347.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (12 samples, 0.16%)</title><rect x="467.6" y="1331.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (7 samples, 0.09%)</title><rect x="467.9" y="1315.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="469.0" y="1315.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="469.0" y="1299.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (2 samples, 0.03%)</title><rect x="469.1" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.apply (2 samples, 0.03%)</title><rect x="469.4" y="1347.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.03%)</title><rect x="469.4" y="1331.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="469.4" y="1315.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.4" y="1326.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.03%)</title><rect x="469.4" y="1299.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.4" y="1310.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="469.4" y="1283.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.4" y="1294.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (2 samples, 0.03%)</title><rect x="469.4" y="1267.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (151 samples, 2.01%)</title><rect x="469.8" y="1459.0" width="23.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.8" y="1470.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (3 samples, 0.04%)</title><rect x="470.5" y="1443.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.5" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (12 samples, 0.16%)</title><rect x="471.2" y="1443.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.09%)</title><rect x="471.8" y="1427.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.09%)</title><rect x="471.8" y="1411.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.05%)</title><rect x="472.1" y="1395.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.1" y="1406.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="472.3" y="1379.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="475.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (19 samples, 0.25%)</title><rect x="473.1" y="1443.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.09%)</title><rect x="473.4" y="1427.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.07%)</title><rect x="473.7" y="1411.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="474.2" y="1395.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="474.2" y="1379.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.03%)</title><rect x="474.5" y="1427.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.03%)</title><rect x="474.5" y="1411.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.5" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="474.8" y="1427.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="474.8" y="1411.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.8" y="1422.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="475.0" y="1395.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.0" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.05%)</title><rect x="475.4" y="1427.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="475.6" y="1411.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (50 samples, 0.67%)</title><rect x="476.1" y="1443.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.1" y="1454.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (45 samples, 0.60%)</title><rect x="476.4" y="1427.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.4" y="1438.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (44 samples, 0.59%)</title><rect x="476.4" y="1411.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.4" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.05%)</title><rect x="477.3" y="1395.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.3" y="1406.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="477.5" y="1379.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.5" y="1390.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (3 samples, 0.04%)</title><rect x="477.5" y="1363.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="477.5" y="1347.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.5" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3 samples, 0.04%)</title><rect x="477.5" y="1331.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.5" y="1342.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (5 samples, 0.07%)</title><rect x="477.9" y="1395.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.9" y="1406.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.&lt;init&gt; (5 samples, 0.07%)</title><rect x="477.9" y="1379.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (15 samples, 0.20%)</title><rect x="478.7" y="1395.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.7" y="1406.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (13 samples, 0.17%)</title><rect x="479.0" y="1379.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.0" y="1390.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.17%)</title><rect x="479.0" y="1363.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.0" y="1374.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.03%)</title><rect x="479.0" y="1347.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="479.4" y="1347.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.4" y="1358.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="479.4" y="1331.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="482.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/794075965.test (2 samples, 0.03%)</title><rect x="479.7" y="1331.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.7" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.08%)</title><rect x="480.1" y="1347.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="483.1" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.03%)</title><rect x="480.6" y="1331.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="480.6" y="1315.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="480.6" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="480.6" y="1283.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.6" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="481.1" y="1395.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.1" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (11 samples, 0.15%)</title><rect x="481.6" y="1395.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.6" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (7 samples, 0.09%)</title><rect x="481.6" y="1379.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.6" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="482.2" y="1363.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.2" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.05%)</title><rect x="482.7" y="1379.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (3 samples, 0.04%)</title><rect x="483.4" y="1427.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (60 samples, 0.80%)</title><rect x="484.1" y="1443.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.09%)</title><rect x="484.7" y="1427.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="484.7" y="1411.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="484.9" y="1395.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.9" y="1406.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="485.5" y="1395.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.03%)</title><rect x="485.5" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (49 samples, 0.65%)</title><rect x="485.8" y="1427.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="486.1" y="1411.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="489.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="486.1" y="1395.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="486.1" y="1379.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.05%)</title><rect x="486.1" y="1363.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="486.8" y="1411.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="487.1" y="1411.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="487.4" y="1395.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="487.5" y="1379.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (18 samples, 0.24%)</title><rect x="487.9" y="1411.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (17 samples, 0.23%)</title><rect x="487.9" y="1395.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="490.1" y="1379.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="490.1" y="1363.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.1" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="490.8" y="1411.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.8" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="490.8" y="1395.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.8" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="490.8" y="1379.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.8" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="490.8" y="1363.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.8" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (14 samples, 0.19%)</title><rect x="491.2" y="1411.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.2" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.07%)</title><rect x="491.6" y="1395.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="491.8" y="1379.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.05%)</title><rect x="491.8" y="1363.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.8" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.04%)</title><rect x="492.4" y="1395.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$281/147625240.apply (3 samples, 0.04%)</title><rect x="492.9" y="1395.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.04%)</title><rect x="492.9" y="1379.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.9" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="492.9" y="1363.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.9" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/1098784410.accept (5 samples, 0.07%)</title><rect x="493.5" y="1459.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.5" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (5 samples, 0.07%)</title><rect x="493.5" y="1443.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.5" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.05%)</title><rect x="493.7" y="1427.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="494.3" y="1555.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (352 samples, 4.69%)</title><rect x="494.6" y="1571.0" width="55.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.6" y="1582.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (3 samples, 0.04%)</title><rect x="495.1" y="1555.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="498.1" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (346 samples, 4.61%)</title><rect x="495.6" y="1555.0" width="54.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.6" y="1566.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (344 samples, 4.59%)</title><rect x="495.6" y="1539.0" width="54.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.6" y="1550.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$196/918795203.run (342 samples, 4.56%)</title><rect x="495.9" y="1523.0" width="53.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.9" y="1534.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (340 samples, 4.53%)</title><rect x="496.2" y="1507.0" width="53.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.2" y="1518.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (3 samples, 0.04%)</title><rect x="496.3" y="1491.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.3" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.04%)</title><rect x="496.3" y="1475.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (331 samples, 4.41%)</title><rect x="496.8" y="1491.0" width="52.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.8" y="1502.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.09%)</title><rect x="497.0" y="1475.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.09%)</title><rect x="497.0" y="1459.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.0" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1371022227.get$Lambda (4 samples, 0.05%)</title><rect x="497.0" y="1443.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1371022227.&lt;init&gt; (4 samples, 0.05%)</title><rect x="497.0" y="1427.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.get$Lambda (3 samples, 0.04%)</title><rect x="497.6" y="1443.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/718673643.&lt;init&gt; (2 samples, 0.03%)</title><rect x="497.8" y="1427.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (6 samples, 0.08%)</title><rect x="498.1" y="1475.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (3 samples, 0.04%)</title><rect x="498.5" y="1459.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.5" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (303 samples, 4.04%)</title><rect x="499.0" y="1475.0" width="47.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.0" y="1486.0">jdk/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="499.2" y="1459.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.2" y="1470.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.04%)</title><rect x="499.6" y="1459.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (296 samples, 3.95%)</title><rect x="500.1" y="1459.0" width="46.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.1" y="1470.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/1805437472.run (143 samples, 1.91%)</title><rect x="500.1" y="1443.0" width="22.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.1" y="1454.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (143 samples, 1.91%)</title><rect x="500.1" y="1427.0" width="22.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.1" y="1438.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (142 samples, 1.89%)</title><rect x="500.3" y="1411.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.3" y="1422.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (13 samples, 0.17%)</title><rect x="500.3" y="1395.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.3" y="1406.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.03%)</title><rect x="500.3" y="1379.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.3" y="1390.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.03%)</title><rect x="500.3" y="1363.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.3" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.03%)</title><rect x="500.3" y="1347.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.3" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="500.3" y="1331.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.3" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.03%)</title><rect x="500.3" y="1315.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="500.3" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.3" y="1310.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.08%)</title><rect x="500.6" y="1379.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.6" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.05%)</title><rect x="500.9" y="1363.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.9" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (4 samples, 0.05%)</title><rect x="500.9" y="1347.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.9" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.05%)</title><rect x="500.9" y="1331.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.9" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.05%)</title><rect x="500.9" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.9" y="1326.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.04%)</title><rect x="501.1" y="1299.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.1" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.07%)</title><rect x="501.5" y="1379.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.5" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.07%)</title><rect x="501.5" y="1363.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="504.5" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.05%)</title><rect x="501.7" y="1347.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.7" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.05%)</title><rect x="501.7" y="1331.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.7" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.05%)</title><rect x="501.7" y="1315.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.7" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.05%)</title><rect x="501.7" y="1299.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.7" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="501.7" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.7" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.03%)</title><rect x="502.0" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.0" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.03%)</title><rect x="502.0" y="1267.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.0" y="1278.0"></text>
</g>
<g>
<title>java/util/Optional.map (2 samples, 0.03%)</title><rect x="502.3" y="1395.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$309/1953142018.apply (2 samples, 0.03%)</title><rect x="502.3" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (125 samples, 1.67%)</title><rect x="502.6" y="1395.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.6" y="1406.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.05%)</title><rect x="502.6" y="1379.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.6" y="1390.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.05%)</title><rect x="502.6" y="1363.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.05%)</title><rect x="502.6" y="1347.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.6" y="1358.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="502.8" y="1331.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="505.8" y="1342.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="502.8" y="1315.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="505.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (121 samples, 1.61%)</title><rect x="503.3" y="1379.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (10 samples, 0.13%)</title><rect x="503.4" y="1363.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.4" y="1374.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (4 samples, 0.05%)</title><rect x="503.7" y="1347.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (2 samples, 0.03%)</title><rect x="503.9" y="1331.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.9" y="1342.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.03%)</title><rect x="504.7" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (15 samples, 0.20%)</title><rect x="505.0" y="1363.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.0" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.08%)</title><rect x="505.2" y="1347.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.05%)</title><rect x="505.2" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.03%)</title><rect x="505.3" y="1315.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.3" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="505.8" y="1331.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.03%)</title><rect x="505.8" y="1315.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.8" y="1326.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="506.1" y="1347.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.1" y="1358.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="506.1" y="1331.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (6 samples, 0.08%)</title><rect x="506.4" y="1347.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (3 samples, 0.04%)</title><rect x="506.9" y="1331.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.03%)</title><rect x="507.0" y="1315.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (95 samples, 1.27%)</title><rect x="507.4" y="1363.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (95 samples, 1.27%)</title><rect x="507.4" y="1347.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (6 samples, 0.08%)</title><rect x="507.5" y="1331.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.08%)</title><rect x="507.5" y="1315.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.08%)</title><rect x="507.5" y="1299.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="507.7" y="1283.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.03%)</title><rect x="508.1" y="1283.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (88 samples, 1.17%)</title><rect x="508.5" y="1331.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (88 samples, 1.17%)</title><rect x="508.5" y="1315.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (85 samples, 1.13%)</title><rect x="508.8" y="1299.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (84 samples, 1.12%)</title><rect x="508.8" y="1283.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (84 samples, 1.12%)</title><rect x="508.8" y="1267.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.8" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="508.8" y="1251.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.8" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="508.8" y="1235.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.8" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="508.9" y="1219.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.9" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="508.9" y="1203.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.9" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="509.1" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="512.1" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.03%)</title><rect x="509.1" y="1171.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="512.1" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (80 samples, 1.07%)</title><rect x="509.4" y="1251.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (80 samples, 1.07%)</title><rect x="509.4" y="1235.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.01%)</title><rect x="509.9" y="1219.0" width="11.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="512.9" y="1230.0"></text>
</g>
<g>
<title>write (75 samples, 1.00%)</title><rect x="510.0" y="1203.0" width="11.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="513.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.92%)</title><rect x="511.0" y="1187.0" width="10.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="514.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.92%)</title><rect x="511.0" y="1171.0" width="10.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="514.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.79%)</title><rect x="512.5" y="1155.0" width="9.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="515.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.79%)</title><rect x="512.5" y="1139.0" width="9.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="515.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.79%)</title><rect x="512.5" y="1123.0" width="9.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="515.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.79%)</title><rect x="512.5" y="1107.0" width="9.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="515.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.76%)</title><rect x="512.9" y="1091.0" width="8.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="515.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.69%)</title><rect x="513.6" y="1075.0" width="8.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="516.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.68%)</title><rect x="513.8" y="1059.0" width="8.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="516.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.61%)</title><rect x="514.6" y="1043.0" width="7.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="517.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.59%)</title><rect x="514.9" y="1027.0" width="6.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="517.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="521.5" y="1011.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="524.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="521.5" y="995.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="524.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="521.5" y="979.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="524.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="521.5" y="963.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="524.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="521.5" y="947.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="524.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="521.5" y="931.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="524.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="521.5" y="915.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="524.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.03%)</title><rect x="522.3" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (2 samples, 0.03%)</title><rect x="522.3" y="1379.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1587562441.accept (23 samples, 0.31%)</title><rect x="522.6" y="1443.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (23 samples, 0.31%)</title><rect x="522.6" y="1427.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.6" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (23 samples, 0.31%)</title><rect x="522.6" y="1411.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (21 samples, 0.28%)</title><rect x="522.6" y="1395.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.28%)</title><rect x="522.6" y="1379.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (19 samples, 0.25%)</title><rect x="522.9" y="1363.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (17 samples, 0.23%)</title><rect x="523.2" y="1347.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.08%)</title><rect x="523.2" y="1331.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.08%)</title><rect x="523.2" y="1315.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1163391232.accept (3 samples, 0.04%)</title><rect x="523.7" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1163391232.accept (3 samples, 0.04%)</title><rect x="524.2" y="1331.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (3 samples, 0.04%)</title><rect x="524.2" y="1315.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (3 samples, 0.04%)</title><rect x="524.2" y="1299.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.04%)</title><rect x="524.2" y="1283.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (2 samples, 0.03%)</title><rect x="524.3" y="1267.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$298/1051934413.accept (8 samples, 0.11%)</title><rect x="524.7" y="1331.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (7 samples, 0.09%)</title><rect x="524.8" y="1315.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (7 samples, 0.09%)</title><rect x="524.8" y="1299.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.8" y="1310.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (4 samples, 0.05%)</title><rect x="525.3" y="1283.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.3" y="1294.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (3 samples, 0.04%)</title><rect x="525.4" y="1267.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.4" y="1278.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.03%)</title><rect x="525.6" y="1251.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (129 samples, 1.72%)</title><rect x="526.2" y="1443.0" width="20.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.2" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (129 samples, 1.72%)</title><rect x="526.2" y="1427.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (129 samples, 1.72%)</title><rect x="526.2" y="1411.0" width="20.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (129 samples, 1.72%)</title><rect x="526.2" y="1395.0" width="20.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (129 samples, 1.72%)</title><rect x="526.2" y="1379.0" width="20.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (129 samples, 1.72%)</title><rect x="526.2" y="1363.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (129 samples, 1.72%)</title><rect x="526.2" y="1347.0" width="20.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="526.5" y="1331.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.04%)</title><rect x="526.5" y="1315.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/2089965289.accept (3 samples, 0.04%)</title><rect x="526.5" y="1299.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/2089965289.accept (124 samples, 1.65%)</title><rect x="527.0" y="1331.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (124 samples, 1.65%)</title><rect x="527.0" y="1315.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (123 samples, 1.64%)</title><rect x="527.2" y="1299.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.04%)</title><rect x="527.2" y="1283.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="527.2" y="1267.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="527.2" y="1251.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (120 samples, 1.60%)</title><rect x="527.6" y="1283.0" width="18.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (14 samples, 0.19%)</title><rect x="528.1" y="1267.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.11%)</title><rect x="528.7" y="1251.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.09%)</title><rect x="528.9" y="1235.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.08%)</title><rect x="529.1" y="1219.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.03%)</title><rect x="529.1" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.05%)</title><rect x="529.4" y="1203.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1886350461.apply (2 samples, 0.03%)</title><rect x="530.0" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.03%)</title><rect x="530.0" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="530.0" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (103 samples, 1.37%)</title><rect x="530.3" y="1267.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (100 samples, 1.33%)</title><rect x="530.8" y="1251.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (100 samples, 1.33%)</title><rect x="530.8" y="1235.0" width="15.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (90 samples, 1.20%)</title><rect x="530.8" y="1219.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (90 samples, 1.20%)</title><rect x="530.8" y="1203.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (83 samples, 1.11%)</title><rect x="531.6" y="1187.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (3 samples, 0.04%)</title><rect x="531.6" y="1171.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="531.6" y="1155.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="531.6" y="1139.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (80 samples, 1.07%)</title><rect x="532.1" y="1171.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (80 samples, 1.07%)</title><rect x="532.1" y="1155.0" width="12.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (80 samples, 1.07%)</title><rect x="532.1" y="1139.0" width="12.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.1" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.20%)</title><rect x="532.4" y="1123.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="535.4" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="532.8" y="1107.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="535.8" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.04%)</title><rect x="533.8" y="1107.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="536.8" y="1118.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="534.3" y="1107.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="537.3" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (62 samples, 0.83%)</title><rect x="534.9" y="1123.0" width="9.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="537.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="536.1" y="1107.0" width="8.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="539.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="536.1" y="1091.0" width="8.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="539.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.65%)</title><rect x="536.9" y="1075.0" width="7.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="539.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.63%)</title><rect x="537.2" y="1059.0" width="7.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="540.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.61%)</title><rect x="537.4" y="1043.0" width="7.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="540.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.53%)</title><rect x="538.3" y="1027.0" width="6.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="541.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.49%)</title><rect x="538.8" y="1011.0" width="5.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="541.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="539.1" y="995.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="542.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="544.6" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="547.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (10 samples, 0.13%)</title><rect x="544.9" y="1219.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.9" y="1230.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="545.6" y="1203.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="548.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$302/1038352260.accept (3 samples, 0.04%)</title><rect x="545.9" y="1203.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (14 samples, 0.19%)</title><rect x="546.7" y="1475.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.7" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.04%)</title><rect x="546.7" y="1459.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (11 samples, 0.15%)</title><rect x="547.2" y="1459.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.2" y="1470.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (5 samples, 0.07%)</title><rect x="547.9" y="1443.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.9" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2 samples, 0.03%)</title><rect x="549.0" y="1491.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.03%)</title><rect x="549.4" y="1491.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.03%)</title><rect x="549.7" y="1539.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.7" y="1550.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$107/373692322.run (60 samples, 0.80%)</title><rect x="550.0" y="1603.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.0" y="1614.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processLocallyAsync$1 (58 samples, 0.77%)</title><rect x="550.3" y="1587.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.3" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.08%)</title><rect x="550.3" y="1571.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.3" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.08%)</title><rect x="550.3" y="1555.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.3" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.08%)</title><rect x="550.3" y="1539.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.05%)</title><rect x="550.6" y="1523.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="550.6" y="1507.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.6" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.05%)</title><rect x="550.6" y="1491.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.05%)</title><rect x="550.6" y="1475.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.6" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.05%)</title><rect x="550.6" y="1459.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.6" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.04%)</title><rect x="550.8" y="1443.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.8" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="550.8" y="1427.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.04%)</title><rect x="550.8" y="1411.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.8" y="1422.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="550.9" y="1395.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="553.9" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="550.9" y="1379.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="553.9" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="550.9" y="1363.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="553.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="550.9" y="1347.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="553.9" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="550.9" y="1331.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="553.9" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="550.9" y="1315.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="553.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="550.9" y="1299.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="553.9" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (52 samples, 0.69%)</title><rect x="551.2" y="1571.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.2" y="1582.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (52 samples, 0.69%)</title><rect x="551.2" y="1555.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.2" y="1566.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (52 samples, 0.69%)</title><rect x="551.2" y="1539.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.2" y="1550.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="551.4" y="1523.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.4" y="1534.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="551.4" y="1507.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.4" y="1518.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="551.4" y="1491.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.4" y="1502.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="551.4" y="1475.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.4" y="1486.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (48 samples, 0.64%)</title><rect x="551.9" y="1523.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.9" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (48 samples, 0.64%)</title><rect x="551.9" y="1507.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.9" y="1518.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="551.9" y="1491.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.9" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (46 samples, 0.61%)</title><rect x="552.2" y="1491.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.08%)</title><rect x="552.3" y="1475.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.05%)</title><rect x="552.5" y="1459.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.5" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.05%)</title><rect x="552.5" y="1443.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.5" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="552.8" y="1427.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="552.8" y="1411.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="552.8" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.8" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (39 samples, 0.52%)</title><rect x="553.3" y="1475.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (39 samples, 0.52%)</title><rect x="553.3" y="1459.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (39 samples, 0.52%)</title><rect x="553.3" y="1443.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.3" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (25 samples, 0.33%)</title><rect x="555.5" y="1427.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.5" y="1438.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (23 samples, 0.31%)</title><rect x="555.8" y="1411.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.8" y="1422.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (21 samples, 0.28%)</title><rect x="556.1" y="1395.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.1" y="1406.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.04%)</title><rect x="556.4" y="1379.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.4" y="1390.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.21%)</title><rect x="556.9" y="1379.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.9" y="1390.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.07%)</title><rect x="558.6" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.6" y="1374.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="559.1" y="1347.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.1" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$277/1271947751.run (187 samples, 2.49%)</title><rect x="559.4" y="1603.0" width="29.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.4" y="1614.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodeRequest$0 (187 samples, 2.49%)</title><rect x="559.4" y="1587.0" width="29.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.4" y="1598.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (90 samples, 1.20%)</title><rect x="559.4" y="1571.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.4" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (89 samples, 1.19%)</title><rect x="559.6" y="1555.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.6" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (88 samples, 1.17%)</title><rect x="559.7" y="1539.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.7" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (85 samples, 1.13%)</title><rect x="560.2" y="1523.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.2" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (83 samples, 1.11%)</title><rect x="560.4" y="1507.0" width="13.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (80 samples, 1.07%)</title><rect x="560.4" y="1491.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.4" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (80 samples, 1.07%)</title><rect x="560.4" y="1475.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (80 samples, 1.07%)</title><rect x="560.4" y="1459.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (77 samples, 1.03%)</title><rect x="560.7" y="1443.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (76 samples, 1.01%)</title><rect x="560.8" y="1427.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (76 samples, 1.01%)</title><rect x="560.8" y="1411.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="1422.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.17%)</title><rect x="561.5" y="1395.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="564.5" y="1406.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="562.1" y="1379.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="565.1" y="1390.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="562.6" y="1379.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="565.6" y="1390.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="562.9" y="1379.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="565.9" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="563.5" y="1395.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="566.5" y="1406.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (57 samples, 0.76%)</title><rect x="563.8" y="1395.0" width="9.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="566.8" y="1406.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.64%)</title><rect x="565.2" y="1379.0" width="7.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="568.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.64%)</title><rect x="565.2" y="1363.0" width="7.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="568.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.53%)</title><rect x="566.5" y="1347.0" width="6.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="569.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.53%)</title><rect x="566.5" y="1331.0" width="6.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="569.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.52%)</title><rect x="566.7" y="1315.0" width="6.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="569.7" y="1326.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.51%)</title><rect x="566.8" y="1299.0" width="6.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="569.8" y="1310.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.49%)</title><rect x="567.0" y="1283.0" width="5.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="570.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.49%)</title><rect x="567.0" y="1267.0" width="5.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="570.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.04%)</title><rect x="572.9" y="1491.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.9" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$105/376168729.act (97 samples, 1.29%)</title><rect x="573.6" y="1571.0" width="15.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.6" y="1582.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$getRequestHandler$5 (95 samples, 1.27%)</title><rect x="573.9" y="1555.0" width="14.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.9" y="1566.0"></text>
</g>
<g>
<title>ru/mail/polis/service/HttpApiBase.put (95 samples, 1.27%)</title><rect x="573.9" y="1539.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="576.9" y="1550.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="574.2" y="1523.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.2" y="1534.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="574.2" y="1507.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.2" y="1518.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="574.2" y="1491.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.2" y="1502.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="574.2" y="1475.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.2" y="1486.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="574.4" y="1459.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.4" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsertValue (88 samples, 1.17%)</title><rect x="575.0" y="1523.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.0" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MyDAO.upsert (88 samples, 1.17%)</title><rect x="575.0" y="1507.0" width="13.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="1518.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="575.0" y="1491.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.0" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemoryTablePool.upsert (86 samples, 1.15%)</title><rect x="575.3" y="1491.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.3" y="1502.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.03%)</title><rect x="575.3" y="1475.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (11 samples, 0.15%)</title><rect x="575.6" y="1475.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.6" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (10 samples, 0.13%)</title><rect x="575.8" y="1459.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.8" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.12%)</title><rect x="575.9" y="1443.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.9" y="1454.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/MemTable.upsert (73 samples, 0.97%)</title><rect x="577.4" y="1475.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (73 samples, 0.97%)</title><rect x="577.4" y="1459.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (73 samples, 0.97%)</title><rect x="577.4" y="1443.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.4" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (41 samples, 0.55%)</title><rect x="582.4" y="1427.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.4" y="1438.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (39 samples, 0.52%)</title><rect x="582.7" y="1411.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.7" y="1422.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (37 samples, 0.49%)</title><rect x="583.0" y="1395.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.0" y="1406.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.04%)</title><rect x="583.6" y="1379.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.6" y="1390.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (21 samples, 0.28%)</title><rect x="584.1" y="1379.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.1" y="1390.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.15%)</title><rect x="585.7" y="1363.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.7" y="1374.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="586.6" y="1347.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.6" y="1358.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="587.1" y="1347.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.1" y="1358.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.12%)</title><rect x="587.4" y="1379.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.4" y="1390.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.05%)</title><rect x="588.2" y="1363.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,091 samples, 14.54%)</title><rect x="588.8" y="1651.0" width="171.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.8" y="1662.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,091 samples, 14.54%)</title><rect x="588.8" y="1635.0" width="171.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.8" y="1646.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (3 samples, 0.04%)</title><rect x="591.0" y="1619.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet (3 samples, 0.04%)</title><rect x="591.0" y="1603.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.0" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (712 samples, 9.49%)</title><rect x="591.5" y="1619.0" width="112.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.5" y="1630.0">java/util/con..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (7 samples, 0.09%)</title><rect x="593.9" y="1603.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.9" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (7 samples, 0.09%)</title><rect x="593.9" y="1587.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.9" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (3 samples, 0.04%)</title><rect x="594.5" y="1571.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.5" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (4 samples, 0.05%)</title><rect x="595.0" y="1603.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (4 samples, 0.05%)</title><rect x="595.0" y="1587.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.0" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (681 samples, 9.08%)</title><rect x="595.6" y="1603.0" width="107.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.6" y="1614.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (5 samples, 0.07%)</title><rect x="596.1" y="1587.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.1" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (673 samples, 8.97%)</title><rect x="596.9" y="1587.0" width="105.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.9" y="1598.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (670 samples, 8.93%)</title><rect x="597.3" y="1571.0" width="105.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.3" y="1582.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (670 samples, 8.93%)</title><rect x="597.3" y="1555.0" width="105.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.3" y="1566.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (89 samples, 1.19%)</title><rect x="597.8" y="1539.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.8" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (89 samples, 1.19%)</title><rect x="597.8" y="1523.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.8" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (86 samples, 1.15%)</title><rect x="598.3" y="1507.0" width="13.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.3" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (81 samples, 1.08%)</title><rect x="599.1" y="1491.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (81 samples, 1.08%)</title><rect x="599.1" y="1475.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (80 samples, 1.07%)</title><rect x="599.2" y="1459.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.2" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (80 samples, 1.07%)</title><rect x="599.2" y="1443.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.2" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (79 samples, 1.05%)</title><rect x="599.4" y="1427.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.4" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (78 samples, 1.04%)</title><rect x="599.5" y="1411.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (77 samples, 1.03%)</title><rect x="599.7" y="1395.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (77 samples, 1.03%)</title><rect x="599.7" y="1379.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.7" y="1390.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.19%)</title><rect x="600.2" y="1363.0" width="2.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="603.2" y="1374.0"></text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.03%)</title><rect x="600.2" y="1347.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="603.2" y="1358.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="600.5" y="1347.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="603.5" y="1358.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.05%)</title><rect x="601.1" y="1347.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="604.1" y="1358.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="601.9" y="1347.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="604.9" y="1358.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (60 samples, 0.80%)</title><rect x="602.4" y="1363.0" width="9.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="605.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="603.3" y="1347.0" width="8.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="606.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="603.3" y="1331.0" width="8.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="606.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.60%)</title><rect x="604.7" y="1315.0" width="7.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="607.7" y="1326.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.59%)</title><rect x="604.9" y="1299.0" width="6.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="607.9" y="1310.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.59%)</title><rect x="604.9" y="1283.0" width="6.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="607.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.57%)</title><rect x="605.0" y="1267.0" width="6.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="608.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.56%)</title><rect x="605.2" y="1251.0" width="6.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="608.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.55%)</title><rect x="605.3" y="1235.0" width="6.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="608.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (578 samples, 7.70%)</title><rect x="611.8" y="1539.0" width="90.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.8" y="1550.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (20 samples, 0.27%)</title><rect x="612.9" y="1523.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (20 samples, 0.27%)</title><rect x="612.9" y="1507.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.9" y="1518.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.11%)</title><rect x="613.7" y="1491.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="616.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$130/1288503575.accept (2 samples, 0.03%)</title><rect x="614.9" y="1491.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.9" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.accept (2 samples, 0.03%)</title><rect x="615.3" y="1491.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.3" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.accept (2 samples, 0.03%)</title><rect x="615.6" y="1491.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.6" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient$$Lambda$133/1885299836.accept (44 samples, 0.59%)</title><rect x="616.2" y="1523.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.2" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.lambda$getEmptyBodyResponseHandler$0 (44 samples, 0.59%)</title><rect x="616.2" y="1507.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.2" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (6 samples, 0.08%)</title><rect x="616.4" y="1491.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.4" y="1502.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (6 samples, 0.08%)</title><rect x="616.4" y="1475.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.4" y="1486.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (5 samples, 0.07%)</title><rect x="616.5" y="1459.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.5" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (37 samples, 0.49%)</title><rect x="617.3" y="1491.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.3" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37 samples, 0.49%)</title><rect x="617.3" y="1475.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (37 samples, 0.49%)</title><rect x="617.3" y="1459.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.3" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (37 samples, 0.49%)</title><rect x="617.3" y="1443.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.3" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (37 samples, 0.49%)</title><rect x="617.3" y="1427.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.3" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (37 samples, 0.49%)</title><rect x="617.3" y="1411.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.3" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (37 samples, 0.49%)</title><rect x="617.3" y="1395.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (37 samples, 0.49%)</title><rect x="617.3" y="1379.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (37 samples, 0.49%)</title><rect x="617.3" y="1363.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.45%)</title><rect x="617.8" y="1347.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 0.45%)</title><rect x="617.8" y="1331.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.8" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.09%)</title><rect x="617.8" y="1315.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="620.8" y="1326.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.07%)</title><rect x="617.9" y="1299.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="620.9" y="1310.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (27 samples, 0.36%)</title><rect x="618.9" y="1315.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="621.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.33%)</title><rect x="619.2" y="1299.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="622.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.33%)</title><rect x="619.2" y="1283.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="622.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.32%)</title><rect x="619.3" y="1267.0" width="3.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="622.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.32%)</title><rect x="619.3" y="1251.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="622.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.32%)</title><rect x="619.3" y="1235.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="622.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.29%)</title><rect x="619.7" y="1219.0" width="3.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="622.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.28%)</title><rect x="619.8" y="1203.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="622.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.28%)</title><rect x="619.8" y="1187.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="622.8" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture$$Lambda$138/1003270799.accept (30 samples, 0.40%)</title><rect x="623.1" y="1523.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.lambda$getResultHandler$0 (29 samples, 0.39%)</title><rect x="623.3" y="1507.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.3" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="623.9" y="1491.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.9" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="623.9" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.9" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="623.9" y="1459.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.9" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="623.9" y="1443.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.9" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.03%)</title><rect x="623.9" y="1427.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.16%)</title><rect x="624.2" y="1491.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.15%)</title><rect x="624.4" y="1475.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.15%)</title><rect x="624.4" y="1459.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.15%)</title><rect x="624.4" y="1443.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.4" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.15%)</title><rect x="624.4" y="1427.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.4" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (11 samples, 0.15%)</title><rect x="624.4" y="1411.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (11 samples, 0.15%)</title><rect x="624.4" y="1395.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (11 samples, 0.15%)</title><rect x="624.4" y="1379.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (11 samples, 0.15%)</title><rect x="624.4" y="1363.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.15%)</title><rect x="624.4" y="1347.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.15%)</title><rect x="624.4" y="1331.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.4" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.15%)</title><rect x="624.4" y="1315.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="627.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="624.7" y="1299.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="627.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="624.7" y="1283.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="627.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="625.0" y="1267.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="628.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="625.0" y="1251.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="628.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="625.0" y="1235.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="628.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="625.0" y="1219.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="628.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="625.0" y="1203.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="628.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="625.0" y="1187.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="628.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (11 samples, 0.15%)</title><rect x="626.1" y="1491.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (11 samples, 0.15%)</title><rect x="626.1" y="1475.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (9 samples, 0.12%)</title><rect x="626.4" y="1459.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="627.4" y="1443.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="627.4" y="1427.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.4" y="1438.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi$$Lambda$142/329492948.accept (437 samples, 5.83%)</title><rect x="627.8" y="1523.0" width="68.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.8" y="1534.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.lambda$sendResponseAsync$0 (437 samples, 5.83%)</title><rect x="627.8" y="1507.0" width="68.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.8" y="1518.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (437 samples, 5.83%)</title><rect x="627.8" y="1491.0" width="68.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.8" y="1502.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (410 samples, 5.47%)</title><rect x="628.0" y="1475.0" width="64.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.0" y="1486.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (19 samples, 0.25%)</title><rect x="628.0" y="1459.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.0" y="1470.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="628.8" y="1443.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="631.8" y="1454.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12 samples, 0.16%)</title><rect x="629.1" y="1443.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.1" y="1454.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.08%)</title><rect x="629.3" y="1427.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.3" y="1438.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="630.2" y="1427.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.2" y="1438.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.07%)</title><rect x="630.2" y="1411.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.2" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (391 samples, 5.21%)</title><rect x="631.0" y="1459.0" width="61.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.0" y="1470.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (391 samples, 5.21%)</title><rect x="631.0" y="1443.0" width="61.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.0" y="1454.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (387 samples, 5.16%)</title><rect x="631.3" y="1427.0" width="60.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.3" y="1438.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (384 samples, 5.12%)</title><rect x="631.8" y="1411.0" width="60.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.8" y="1422.0">one/ni..</text>
</g>
<g>
<title>[unknown] (38 samples, 0.51%)</title><rect x="633.0" y="1395.0" width="6.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="636.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.51%)</title><rect x="633.0" y="1379.0" width="6.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="636.0" y="1390.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (27 samples, 0.36%)</title><rect x="633.0" y="1363.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="636.0" y="1374.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (6 samples, 0.08%)</title><rect x="633.5" y="1347.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="636.5" y="1358.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="634.4" y="1347.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="637.4" y="1358.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (11 samples, 0.15%)</title><rect x="634.8" y="1347.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="637.8" y="1358.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4 samples, 0.05%)</title><rect x="635.4" y="1331.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="638.4" y="1342.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="636.0" y="1331.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="639.0" y="1342.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.05%)</title><rect x="636.6" y="1347.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="639.6" y="1358.0"></text>
</g>
<g>
<title>__send (6 samples, 0.08%)</title><rect x="637.3" y="1363.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="640.3" y="1374.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.07%)</title><rect x="638.2" y="1363.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="641.2" y="1374.0"></text>
</g>
<g>
<title>__send (337 samples, 4.49%)</title><rect x="639.2" y="1395.0" width="53.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="642.2" y="1406.0">__send</text>
</g>
<g>
<title>[unknown] (326 samples, 4.35%)</title><rect x="640.9" y="1379.0" width="51.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="643.9" y="1390.0">[unkn..</text>
</g>
<g>
<title>[unknown] (326 samples, 4.35%)</title><rect x="640.9" y="1363.0" width="51.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="643.9" y="1374.0">[unkn..</text>
</g>
<g>
<title>[unknown] (316 samples, 4.21%)</title><rect x="642.5" y="1347.0" width="49.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="645.5" y="1358.0">[unkn..</text>
</g>
<g>
<title>[unknown] (316 samples, 4.21%)</title><rect x="642.5" y="1331.0" width="49.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="645.5" y="1342.0">[unkn..</text>
</g>
<g>
<title>[unknown] (312 samples, 4.16%)</title><rect x="643.1" y="1315.0" width="49.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="646.1" y="1326.0">[unkn..</text>
</g>
<g>
<title>[unknown] (306 samples, 4.08%)</title><rect x="644.0" y="1299.0" width="48.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="647.0" y="1310.0">[unk..</text>
</g>
<g>
<title>[unknown] (302 samples, 4.03%)</title><rect x="644.7" y="1283.0" width="47.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="647.7" y="1294.0">[unk..</text>
</g>
<g>
<title>[unknown] (299 samples, 3.99%)</title><rect x="645.1" y="1267.0" width="47.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="648.1" y="1278.0">[unk..</text>
</g>
<g>
<title>[unknown] (286 samples, 3.81%)</title><rect x="647.2" y="1251.0" width="45.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="650.2" y="1262.0">[unk..</text>
</g>
<g>
<title>[unknown] (271 samples, 3.61%)</title><rect x="649.5" y="1235.0" width="42.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="652.5" y="1246.0">[unk..</text>
</g>
<g>
<title>[unknown] (260 samples, 3.47%)</title><rect x="651.3" y="1219.0" width="40.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="654.3" y="1230.0">[un..</text>
</g>
<g>
<title>[unknown] (242 samples, 3.23%)</title><rect x="654.1" y="1203.0" width="38.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="657.1" y="1214.0">[un..</text>
</g>
<g>
<title>[unknown] (218 samples, 2.91%)</title><rect x="657.9" y="1187.0" width="34.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="660.9" y="1198.0">[u..</text>
</g>
<g>
<title>[unknown] (210 samples, 2.80%)</title><rect x="659.1" y="1171.0" width="33.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="662.1" y="1182.0">[u..</text>
</g>
<g>
<title>[unknown] (199 samples, 2.65%)</title><rect x="660.9" y="1155.0" width="31.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="663.9" y="1166.0">[u..</text>
</g>
<g>
<title>[unknown] (192 samples, 2.56%)</title><rect x="662.0" y="1139.0" width="30.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="665.0" y="1150.0">[u..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.43%)</title><rect x="663.5" y="1123.0" width="28.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="666.5" y="1134.0">[u..</text>
</g>
<g>
<title>[unknown] (179 samples, 2.39%)</title><rect x="664.0" y="1107.0" width="28.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="667.0" y="1118.0">[u..</text>
</g>
<g>
<title>[unknown] (172 samples, 2.29%)</title><rect x="665.1" y="1091.0" width="27.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="668.1" y="1102.0">[..</text>
</g>
<g>
<title>[unknown] (171 samples, 2.28%)</title><rect x="665.3" y="1075.0" width="26.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="668.3" y="1086.0">[..</text>
</g>
<g>
<title>[unknown] (166 samples, 2.21%)</title><rect x="666.1" y="1059.0" width="26.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="669.1" y="1070.0">[..</text>
</g>
<g>
<title>[unknown] (158 samples, 2.11%)</title><rect x="667.3" y="1043.0" width="24.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="670.3" y="1054.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 2.00%)</title><rect x="668.6" y="1027.0" width="23.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="671.6" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.88%)</title><rect x="670.0" y="1011.0" width="22.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="673.0" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (137 samples, 1.83%)</title><rect x="670.6" y="995.0" width="21.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="673.6" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (136 samples, 1.81%)</title><rect x="670.8" y="979.0" width="21.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="673.8" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (136 samples, 1.81%)</title><rect x="670.8" y="963.0" width="21.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="673.8" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (131 samples, 1.75%)</title><rect x="671.6" y="947.0" width="20.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="674.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 1.71%)</title><rect x="672.0" y="931.0" width="20.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="675.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.67%)</title><rect x="672.5" y="915.0" width="19.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="675.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (125 samples, 1.67%)</title><rect x="672.5" y="899.0" width="19.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="675.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (124 samples, 1.65%)</title><rect x="672.7" y="883.0" width="19.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="675.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.59%)</title><rect x="673.5" y="867.0" width="18.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="676.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 1.40%)</title><rect x="675.7" y="851.0" width="16.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="678.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.29%)</title><rect x="676.9" y="835.0" width="15.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="679.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.07%)</title><rect x="679.6" y="819.0" width="12.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="682.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 0.96%)</title><rect x="680.8" y="803.0" width="11.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="683.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.91%)</title><rect x="681.5" y="787.0" width="10.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="684.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="686.7" y="771.0" width="5.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="689.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="691.9" y="755.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="694.9" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="692.2" y="1427.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="695.2" y="1438.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (22 samples, 0.29%)</title><rect x="692.5" y="1475.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.09%)</title><rect x="692.8" y="1459.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="693.0" y="1443.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="693.1" y="1427.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="693.6" y="1443.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.17%)</title><rect x="693.9" y="1459.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.9" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.17%)</title><rect x="693.9" y="1443.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.17%)</title><rect x="693.9" y="1427.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.9" y="1438.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="695.2" y="1411.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="698.2" y="1422.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="695.6" y="1411.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.6" y="1422.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.03%)</title><rect x="695.9" y="1475.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.9" y="1486.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (2 samples, 0.03%)</title><rect x="696.3" y="1475.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (2 samples, 0.03%)</title><rect x="696.3" y="1459.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.3" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$135/1421739737.accept (14 samples, 0.19%)</title><rect x="696.6" y="1523.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.6" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$pollNodeAsync$2 (14 samples, 0.19%)</title><rect x="696.6" y="1507.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.6" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (14 samples, 0.19%)</title><rect x="696.6" y="1491.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.03%)</title><rect x="696.6" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="696.6" y="1459.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="696.6" y="1443.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.6" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.16%)</title><rect x="696.9" y="1475.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.15%)</title><rect x="697.0" y="1459.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.0" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.15%)</title><rect x="697.0" y="1443.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.0" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.13%)</title><rect x="697.0" y="1427.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.0" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.13%)</title><rect x="697.0" y="1411.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.13%)</title><rect x="697.0" y="1395.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.0" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.13%)</title><rect x="697.0" y="1379.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.13%)</title><rect x="697.0" y="1363.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.13%)</title><rect x="697.0" y="1347.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.13%)</title><rect x="697.0" y="1331.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.0" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.12%)</title><rect x="697.2" y="1315.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="700.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1299.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="700.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1283.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="700.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1267.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="700.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1251.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="700.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1235.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="700.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1219.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="700.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1203.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="700.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="697.4" y="1187.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="700.4" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.accept (25 samples, 0.33%)</title><rect x="698.8" y="1523.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.8" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.lambda$processNodesResponsesAsync$3 (25 samples, 0.33%)</title><rect x="698.8" y="1507.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.8" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (21 samples, 0.28%)</title><rect x="698.9" y="1491.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.9" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.28%)</title><rect x="698.9" y="1475.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 0.27%)</title><rect x="699.1" y="1459.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.1" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (20 samples, 0.27%)</title><rect x="699.1" y="1443.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.1" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (20 samples, 0.27%)</title><rect x="699.1" y="1427.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (19 samples, 0.25%)</title><rect x="699.1" y="1411.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.1" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (19 samples, 0.25%)</title><rect x="699.1" y="1395.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (19 samples, 0.25%)</title><rect x="699.1" y="1379.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (19 samples, 0.25%)</title><rect x="699.1" y="1363.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.25%)</title><rect x="699.1" y="1347.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.25%)</title><rect x="699.1" y="1331.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.1" y="1342.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (18 samples, 0.24%)</title><rect x="699.3" y="1315.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="702.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.21%)</title><rect x="699.6" y="1299.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="702.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.21%)</title><rect x="699.6" y="1283.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="702.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="699.9" y="1267.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="702.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="699.9" y="1251.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="702.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="699.9" y="1235.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="702.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="700.0" y="1219.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="703.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="700.2" y="1203.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="703.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="700.4" y="1187.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="703.4" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponses (3 samples, 0.04%)</title><rect x="702.2" y="1491.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.2" y="1502.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="702.4" y="1475.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.07%)</title><rect x="702.7" y="1603.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.7" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.07%)</title><rect x="702.7" y="1587.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.07%)</title><rect x="702.7" y="1571.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.7" y="1582.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.07%)</title><rect x="702.7" y="1555.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="705.7" y="1566.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1539.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="705.9" y="1550.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1523.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="705.9" y="1534.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1507.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="705.9" y="1518.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1491.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="705.9" y="1502.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1475.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="705.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1459.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="705.9" y="1470.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1443.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="705.9" y="1454.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="702.9" y="1427.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="705.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (193 samples, 2.57%)</title><rect x="703.5" y="1619.0" width="30.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.5" y="1630.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (4 samples, 0.05%)</title><rect x="703.5" y="1603.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.04%)</title><rect x="703.7" y="1587.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (189 samples, 2.52%)</title><rect x="704.1" y="1603.0" width="29.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.1" y="1614.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (71 samples, 0.95%)</title><rect x="705.2" y="1587.0" width="11.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="708.2" y="1598.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.13%)</title><rect x="706.6" y="1571.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="709.6" y="1582.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="707.7" y="1555.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.7" y="1566.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="708.2" y="1571.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="711.2" y="1582.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.04%)</title><rect x="708.7" y="1571.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="711.7" y="1582.0"></text>
</g>
<g>
<title>__lll_unlock_wake (30 samples, 0.40%)</title><rect x="709.2" y="1571.0" width="4.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="712.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="711.8" y="1555.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="714.8" y="1566.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="711.8" y="1539.0" width="2.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="714.8" y="1550.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="713.2" y="1523.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="716.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="713.2" y="1507.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="716.2" y="1518.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="713.2" y="1491.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="716.2" y="1502.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="713.6" y="1475.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="716.6" y="1486.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="713.6" y="1459.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="716.6" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="713.6" y="1443.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="716.6" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="713.6" y="1427.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="716.6" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="713.9" y="1571.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="716.9" y="1582.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.04%)</title><rect x="714.7" y="1571.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="717.7" y="1582.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.11%)</title><rect x="715.1" y="1571.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="718.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.48%)</title><rect x="716.4" y="1587.0" width="17.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="719.4" y="1598.0"></text>
</g>
<g>
<title>__pthread_cond_wait (105 samples, 1.40%)</title><rect x="716.6" y="1571.0" width="16.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="719.6" y="1582.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.91%)</title><rect x="722.4" y="1555.0" width="10.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="725.4" y="1566.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.91%)</title><rect x="722.4" y="1539.0" width="10.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="725.4" y="1550.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="724.6" y="1523.0" width="8.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="727.6" y="1534.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.71%)</title><rect x="724.7" y="1507.0" width="8.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="727.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.63%)</title><rect x="725.7" y="1491.0" width="7.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="728.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.44%)</title><rect x="727.9" y="1475.0" width="5.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="730.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.32%)</title><rect x="729.3" y="1459.0" width="3.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="732.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.25%)</title><rect x="730.1" y="1443.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="733.1" y="1454.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.20%)</title><rect x="730.7" y="1427.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="733.7" y="1438.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="733.1" y="1571.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="736.1" y="1582.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="733.4" y="1571.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="736.4" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (168 samples, 2.24%)</title><rect x="733.9" y="1619.0" width="26.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.9" y="1630.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (168 samples, 2.24%)</title><rect x="733.9" y="1603.0" width="26.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.9" y="1614.0">j..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="734.8" y="1587.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="737.8" y="1598.0"></text>
</g>
<g>
<title>Unsafe_Park (56 samples, 0.75%)</title><rect x="735.3" y="1587.0" width="8.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="738.3" y="1598.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (16 samples, 0.21%)</title><rect x="736.2" y="1571.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="739.2" y="1582.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="737.5" y="1555.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="740.5" y="1566.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (5 samples, 0.07%)</title><rect x="737.9" y="1555.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="740.9" y="1566.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2 samples, 0.03%)</title><rect x="739.0" y="1571.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="742.0" y="1582.0"></text>
</g>
<g>
<title>__lll_unlock_wake (24 samples, 0.32%)</title><rect x="739.4" y="1571.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="742.4" y="1582.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="740.9" y="1555.0" width="2.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="743.9" y="1566.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="740.9" y="1539.0" width="2.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="743.9" y="1550.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="741.6" y="1523.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="744.6" y="1534.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="741.6" y="1507.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="744.6" y="1518.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="741.7" y="1491.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="744.7" y="1502.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="742.5" y="1475.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="745.5" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="743.1" y="1571.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="746.1" y="1582.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (97 samples, 1.29%)</title><rect x="744.2" y="1587.0" width="15.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="747.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.12%)</title><rect x="746.3" y="1571.0" width="13.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="749.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.12%)</title><rect x="746.3" y="1555.0" width="13.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="749.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 0.97%)</title><rect x="748.0" y="1539.0" width="11.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="751.0" y="1550.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.95%)</title><rect x="748.3" y="1523.0" width="11.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="751.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.91%)</title><rect x="748.8" y="1507.0" width="10.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="751.8" y="1518.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.77%)</title><rect x="750.4" y="1491.0" width="9.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="753.4" y="1502.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.64%)</title><rect x="751.9" y="1475.0" width="7.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="754.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.49%)</title><rect x="753.7" y="1459.0" width="5.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="756.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="757.6" y="1443.0" width="1.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="760.6" y="1454.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.05%)</title><rect x="759.5" y="1587.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="762.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,166 samples, 15.54%)</title><rect x="760.4" y="1651.0" width="183.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.4" y="1662.0">jdk/internal/net/http/Ht..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="763.9" y="1635.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="764.2" y="1619.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1072487675.get$Lambda (2 samples, 0.03%)</title><rect x="764.4" y="1603.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.4" y="1614.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (5 samples, 0.07%)</title><rect x="764.7" y="1635.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.7" y="1646.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (4 samples, 0.05%)</title><rect x="764.8" y="1619.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.8" y="1630.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.isValid (4 samples, 0.05%)</title><rect x="765.5" y="1635.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.5" y="1646.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (4 samples, 0.05%)</title><rect x="766.1" y="1635.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.1" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (3 samples, 0.04%)</title><rect x="766.3" y="1619.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.3" y="1630.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.09%)</title><rect x="766.9" y="1635.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.9" y="1646.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.08%)</title><rect x="767.0" y="1619.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="770.0" y="1630.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="767.0" y="1603.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.0" y="1614.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="767.2" y="1587.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.2" y="1598.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="767.4" y="1571.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.4" y="1582.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (11 samples, 0.15%)</title><rect x="768.0" y="1635.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.0" y="1646.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (190 samples, 2.53%)</title><rect x="769.7" y="1635.0" width="29.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.7" y="1646.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/182260085.accept (182 samples, 2.43%)</title><rect x="770.0" y="1619.0" width="28.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.0" y="1630.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (182 samples, 2.43%)</title><rect x="770.0" y="1603.0" width="28.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.0" y="1614.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (182 samples, 2.43%)</title><rect x="770.0" y="1587.0" width="28.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.0" y="1598.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (181 samples, 2.41%)</title><rect x="770.2" y="1571.0" width="28.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.2" y="1582.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (181 samples, 2.41%)</title><rect x="770.2" y="1555.0" width="28.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.2" y="1566.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (13 samples, 0.17%)</title><rect x="770.2" y="1539.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (11 samples, 0.15%)</title><rect x="770.5" y="1523.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.5" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (6 samples, 0.08%)</title><rect x="771.0" y="1507.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="774.0" y="1518.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.05%)</title><rect x="771.1" y="1491.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.1" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="771.4" y="1475.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.4" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="771.4" y="1459.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.4" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="771.4" y="1443.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.4" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="771.4" y="1427.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.channel (2 samples, 0.03%)</title><rect x="771.9" y="1507.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (168 samples, 2.24%)</title><rect x="772.2" y="1539.0" width="26.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.2" y="1550.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (168 samples, 2.24%)</title><rect x="772.2" y="1523.0" width="26.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.2" y="1534.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (168 samples, 2.24%)</title><rect x="772.2" y="1507.0" width="26.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.2" y="1518.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (167 samples, 2.23%)</title><rect x="772.4" y="1491.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.4" y="1502.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (167 samples, 2.23%)</title><rect x="772.4" y="1475.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.4" y="1486.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (162 samples, 2.16%)</title><rect x="772.9" y="1459.0" width="25.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.9" y="1470.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (162 samples, 2.16%)</title><rect x="772.9" y="1443.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.9" y="1454.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (47 samples, 0.63%)</title><rect x="773.2" y="1427.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (47 samples, 0.63%)</title><rect x="773.2" y="1411.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (47 samples, 0.63%)</title><rect x="773.2" y="1395.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.61%)</title><rect x="773.3" y="1379.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.61%)</title><rect x="773.3" y="1363.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (46 samples, 0.61%)</title><rect x="773.3" y="1347.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.61%)</title><rect x="773.3" y="1331.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.61%)</title><rect x="773.3" y="1315.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="773.3" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (37 samples, 0.49%)</title><rect x="773.6" y="1299.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="773.6" y="1283.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="773.6" y="1267.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.03%)</title><rect x="773.6" y="1251.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (35 samples, 0.47%)</title><rect x="774.0" y="1283.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.47%)</title><rect x="774.0" y="1267.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.47%)</title><rect x="774.0" y="1251.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.47%)</title><rect x="774.0" y="1235.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (35 samples, 0.47%)</title><rect x="774.0" y="1219.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.0" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.08%)</title><rect x="774.0" y="1203.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="777.0" y="1214.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="774.6" y="1187.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="777.6" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (29 samples, 0.39%)</title><rect x="774.9" y="1203.0" width="4.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="777.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.28%)</title><rect x="776.2" y="1187.0" width="3.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="779.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.28%)</title><rect x="776.2" y="1171.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="779.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.24%)</title><rect x="776.6" y="1155.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="779.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="776.8" y="1139.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="779.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="776.8" y="1123.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="779.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="777.4" y="1107.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="780.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="778.1" y="1091.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="781.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="778.1" y="1075.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="781.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.09%)</title><rect x="779.5" y="1299.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.09%)</title><rect x="779.5" y="1283.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="779.5" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.05%)</title><rect x="779.8" y="1267.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="779.8" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.03%)</title><rect x="779.8" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="782.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.03%)</title><rect x="780.1" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.03%)</title><rect x="780.1" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.03%)</title><rect x="780.1" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.03%)</title><rect x="780.6" y="1427.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.6" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (2 samples, 0.03%)</title><rect x="780.6" y="1411.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (2 samples, 0.03%)</title><rect x="780.6" y="1395.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (2 samples, 0.03%)</title><rect x="780.6" y="1379.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.07%)</title><rect x="780.9" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.9" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.07%)</title><rect x="780.9" y="1411.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="783.9" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.07%)</title><rect x="780.9" y="1395.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.07%)</title><rect x="780.9" y="1379.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.9" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.03%)</title><rect x="781.0" y="1363.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.03%)</title><rect x="781.4" y="1363.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (104 samples, 1.39%)</title><rect x="781.7" y="1427.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (6 samples, 0.08%)</title><rect x="781.8" y="1411.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.8" y="1422.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="782.0" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.0" y="1406.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="782.1" y="1379.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="785.1" y="1390.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="782.1" y="1363.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.1" y="1374.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="782.1" y="1347.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.1" y="1358.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="782.1" y="1331.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.03%)</title><rect x="782.8" y="1411.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.8" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (95 samples, 1.27%)</title><rect x="783.1" y="1411.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.1" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (92 samples, 1.23%)</title><rect x="783.4" y="1395.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.4" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (92 samples, 1.23%)</title><rect x="783.4" y="1379.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="786.4" y="1390.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.09%)</title><rect x="783.6" y="1363.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.6" y="1374.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.07%)</title><rect x="783.9" y="1347.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.9" y="1358.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (3 samples, 0.04%)</title><rect x="783.9" y="1331.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.9" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (77 samples, 1.03%)</title><rect x="784.7" y="1363.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.7" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (76 samples, 1.01%)</title><rect x="784.8" y="1347.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.8" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (76 samples, 1.01%)</title><rect x="784.8" y="1331.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.8" y="1342.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.93%)</title><rect x="785.3" y="1315.0" width="11.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="788.3" y="1326.0"></text>
</g>
<g>
<title>read (69 samples, 0.92%)</title><rect x="785.4" y="1299.0" width="10.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="788.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.83%)</title><rect x="786.5" y="1283.0" width="9.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="789.5" y="1294.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.83%)</title><rect x="786.5" y="1267.0" width="9.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="789.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="787.8" y="1251.0" width="8.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="790.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="787.8" y="1235.0" width="8.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="790.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="787.8" y="1219.0" width="8.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="790.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.69%)</title><rect x="788.1" y="1203.0" width="8.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="791.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.68%)</title><rect x="788.3" y="1187.0" width="8.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="791.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.60%)</title><rect x="789.2" y="1171.0" width="7.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="792.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.53%)</title><rect x="790.0" y="1155.0" width="6.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="793.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.53%)</title><rect x="790.0" y="1139.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="793.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.49%)</title><rect x="790.5" y="1123.0" width="5.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="793.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.40%)</title><rect x="791.6" y="1107.0" width="4.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="794.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.33%)</title><rect x="792.4" y="1091.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="795.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.25%)</title><rect x="793.3" y="1075.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="796.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="794.7" y="1059.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="797.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="795.8" y="1043.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="798.8" y="1054.0"></text>
</g>
<g>
<title>__GI___errno_location (2 samples, 0.03%)</title><rect x="796.3" y="1315.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="799.3" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.09%)</title><rect x="796.8" y="1363.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="796.9" y="1347.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="797.4" y="1347.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.03%)</title><rect x="798.0" y="1427.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/1936584687.accept (6 samples, 0.08%)</title><rect x="798.7" y="1619.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (6 samples, 0.08%)</title><rect x="798.7" y="1603.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/1669720320.run (6 samples, 0.08%)</title><rect x="798.7" y="1587.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (6 samples, 0.08%)</title><rect x="798.7" y="1571.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (6 samples, 0.08%)</title><rect x="798.7" y="1555.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.7" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.03%)</title><rect x="798.7" y="1539.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.7" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.03%)</title><rect x="798.7" y="1523.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.7" y="1534.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.03%)</title><rect x="799.0" y="1539.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.0" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (2 samples, 0.03%)</title><rect x="799.3" y="1539.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.3" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (5 samples, 0.07%)</title><rect x="799.8" y="1635.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.8" y="1646.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (4 samples, 0.05%)</title><rect x="799.9" y="1619.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="802.9" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (14 samples, 0.19%)</title><rect x="800.5" y="1635.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.5" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.19%)</title><rect x="800.5" y="1619.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.5" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (14 samples, 0.19%)</title><rect x="800.5" y="1603.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.5" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (14 samples, 0.19%)</title><rect x="800.5" y="1587.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.5" y="1598.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (14 samples, 0.19%)</title><rect x="800.5" y="1571.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.5" y="1582.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (12 samples, 0.16%)</title><rect x="800.5" y="1555.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.5" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="800.5" y="1539.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.5" y="1550.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.03%)</title><rect x="800.5" y="1523.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.5" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.03%)</title><rect x="800.5" y="1507.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1377655111.accept (2 samples, 0.03%)</title><rect x="800.5" y="1491.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.5" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="800.5" y="1475.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.5" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (8 samples, 0.11%)</title><rect x="801.0" y="1539.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.0" y="1550.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (8 samples, 0.11%)</title><rect x="801.0" y="1523.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.0" y="1534.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (8 samples, 0.11%)</title><rect x="801.0" y="1507.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.0" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.accept (6 samples, 0.08%)</title><rect x="801.2" y="1491.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.2" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (4 samples, 0.05%)</title><rect x="801.5" y="1475.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.5" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="802.4" y="1555.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (155 samples, 2.07%)</title><rect x="802.7" y="1635.0" width="24.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.7" y="1646.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$178/167882164.run (89 samples, 1.19%)</title><rect x="802.7" y="1619.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (88 samples, 1.17%)</title><rect x="802.9" y="1603.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.9" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (2 samples, 0.03%)</title><rect x="803.4" y="1587.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (83 samples, 1.11%)</title><rect x="803.7" y="1587.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.7" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (83 samples, 1.11%)</title><rect x="803.7" y="1571.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (81 samples, 1.08%)</title><rect x="804.0" y="1555.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.0" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (81 samples, 1.08%)</title><rect x="804.0" y="1539.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.0" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$173/600368687.run (74 samples, 0.99%)</title><rect x="805.0" y="1523.0" width="11.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.0" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (73 samples, 0.97%)</title><rect x="805.1" y="1507.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (68 samples, 0.91%)</title><rect x="805.1" y="1491.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (5 samples, 0.07%)</title><rect x="805.7" y="1475.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (5 samples, 0.07%)</title><rect x="805.7" y="1459.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (5 samples, 0.07%)</title><rect x="805.7" y="1443.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (3 samples, 0.04%)</title><rect x="806.5" y="1475.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.5" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (55 samples, 0.73%)</title><rect x="807.0" y="1475.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (10 samples, 0.13%)</title><rect x="807.3" y="1459.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (10 samples, 0.13%)</title><rect x="807.3" y="1443.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (10 samples, 0.13%)</title><rect x="807.3" y="1427.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.11%)</title><rect x="807.6" y="1411.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (8 samples, 0.11%)</title><rect x="807.6" y="1395.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.09%)</title><rect x="807.8" y="1379.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.09%)</title><rect x="807.8" y="1363.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (42 samples, 0.56%)</title><rect x="808.9" y="1459.0" width="6.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.9" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.53%)</title><rect x="809.2" y="1443.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.2" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.52%)</title><rect x="809.4" y="1427.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (38 samples, 0.51%)</title><rect x="809.5" y="1411.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (37 samples, 0.49%)</title><rect x="809.7" y="1395.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.7" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (37 samples, 0.49%)</title><rect x="809.7" y="1379.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.7" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (4 samples, 0.05%)</title><rect x="809.7" y="1363.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (29 samples, 0.39%)</title><rect x="810.3" y="1363.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (29 samples, 0.39%)</title><rect x="810.3" y="1347.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.39%)</title><rect x="810.3" y="1331.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.39%)</title><rect x="810.3" y="1315.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.39%)</title><rect x="810.3" y="1299.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.39%)</title><rect x="810.3" y="1283.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.3" y="1294.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.07%)</title><rect x="810.5" y="1267.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="813.5" y="1278.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (22 samples, 0.29%)</title><rect x="811.4" y="1267.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="814.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="812.2" y="1251.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="815.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="812.2" y="1235.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="815.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="812.7" y="1219.0" width="2.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="815.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="812.7" y="1203.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="815.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="812.8" y="1187.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="815.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="812.8" y="1171.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="815.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="812.8" y="1155.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="815.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="812.8" y="1139.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="815.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.05%)</title><rect x="814.9" y="1363.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.05%)</title><rect x="814.9" y="1347.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="815.0" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="815.0" y="1315.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.03%)</title><rect x="815.0" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (4 samples, 0.05%)</title><rect x="815.8" y="1491.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.8" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (2 samples, 0.03%)</title><rect x="815.8" y="1475.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.8" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.03%)</title><rect x="816.1" y="1475.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/1961873698.get (2 samples, 0.03%)</title><rect x="816.1" y="1459.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (2 samples, 0.03%)</title><rect x="816.1" y="1443.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.1" y="1454.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="816.1" y="1427.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.1" y="1438.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="816.1" y="1411.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.1" y="1422.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="816.1" y="1395.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.1" y="1406.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="816.1" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$184/853746396.run (66 samples, 0.88%)</title><rect x="816.7" y="1619.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (65 samples, 0.87%)</title><rect x="816.9" y="1603.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.9" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (62 samples, 0.83%)</title><rect x="817.1" y="1587.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.1" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (62 samples, 0.83%)</title><rect x="817.1" y="1571.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.1" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (59 samples, 0.79%)</title><rect x="817.4" y="1555.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="820.4" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (45 samples, 0.60%)</title><rect x="817.5" y="1539.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.5" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.04%)</title><rect x="817.5" y="1523.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.04%)</title><rect x="817.5" y="1507.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.5" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.04%)</title><rect x="817.5" y="1491.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (42 samples, 0.56%)</title><rect x="818.0" y="1523.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (42 samples, 0.56%)</title><rect x="818.0" y="1507.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (42 samples, 0.56%)</title><rect x="818.0" y="1491.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.0" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (42 samples, 0.56%)</title><rect x="818.0" y="1475.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (42 samples, 0.56%)</title><rect x="818.0" y="1459.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.0" y="1470.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="818.2" y="1443.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="821.2" y="1454.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (38 samples, 0.51%)</title><rect x="818.6" y="1443.0" width="6.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="821.6" y="1454.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.44%)</title><rect x="819.4" y="1427.0" width="5.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="822.4" y="1438.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.44%)</title><rect x="819.4" y="1411.0" width="5.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="822.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="819.7" y="1395.0" width="4.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="822.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="819.7" y="1379.0" width="4.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="822.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.40%)</title><rect x="819.9" y="1363.0" width="4.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="822.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.37%)</title><rect x="820.2" y="1347.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="823.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.36%)</title><rect x="820.4" y="1331.0" width="4.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="823.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.36%)</title><rect x="820.4" y="1315.0" width="4.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="823.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.16%)</title><rect x="824.6" y="1539.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.6" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.16%)</title><rect x="824.6" y="1523.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.6" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.04%)</title><rect x="824.6" y="1507.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.6" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.03%)</title><rect x="824.6" y="1491.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.03%)</title><rect x="824.6" y="1475.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.6" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (8 samples, 0.11%)</title><rect x="825.1" y="1507.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.1" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (3 samples, 0.04%)</title><rect x="825.4" y="1491.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.4" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.04%)</title><rect x="825.4" y="1475.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.03%)</title><rect x="826.0" y="1491.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.03%)</title><rect x="826.8" y="1587.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.8" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (53 samples, 0.71%)</title><rect x="827.1" y="1635.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.1" y="1646.0"></text>
</g>
<g>
<title>java/time/Instant.now (20 samples, 0.27%)</title><rect x="827.3" y="1619.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.3" y="1630.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (20 samples, 0.27%)</title><rect x="827.3" y="1603.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.3" y="1614.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (11 samples, 0.15%)</title><rect x="827.3" y="1587.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.3" y="1598.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.08%)</title><rect x="828.1" y="1571.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.1" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.12%)</title><rect x="829.0" y="1587.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.0" y="1598.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.08%)</title><rect x="829.5" y="1571.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="832.5" y="1582.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.05%)</title><rect x="829.8" y="1555.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="832.8" y="1566.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="830.0" y="1539.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="833.0" y="1550.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="830.0" y="1523.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="833.0" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (32 samples, 0.43%)</title><rect x="830.4" y="1619.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="832.0" y="1603.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="832.0" y="1587.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.0" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$311/1255574723.get$Lambda (6 samples, 0.08%)</title><rect x="832.0" y="1571.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.0" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (3 samples, 0.04%)</title><rect x="833.1" y="1603.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.1" y="1614.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="833.3" y="1587.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.3" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (12 samples, 0.16%)</title><rect x="833.6" y="1603.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.6" y="1614.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.07%)</title><rect x="834.4" y="1587.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (20 samples, 0.27%)</title><rect x="835.5" y="1635.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.5" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (17 samples, 0.23%)</title><rect x="835.9" y="1619.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.9" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (16 samples, 0.21%)</title><rect x="836.1" y="1603.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.1" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (16 samples, 0.21%)</title><rect x="836.1" y="1587.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.1" y="1598.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (16 samples, 0.21%)</title><rect x="836.1" y="1571.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.1" y="1582.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (16 samples, 0.21%)</title><rect x="836.1" y="1555.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.1" y="1566.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (9 samples, 0.12%)</title><rect x="837.2" y="1539.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.2" y="1550.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (9 samples, 0.12%)</title><rect x="837.2" y="1523.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.2" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (12 samples, 0.16%)</title><rect x="838.6" y="1635.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.6" y="1646.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.03%)</title><rect x="838.8" y="1619.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.8" y="1630.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.12%)</title><rect x="839.1" y="1619.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.1" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.12%)</title><rect x="839.1" y="1603.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.1" y="1614.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="839.1" y="1587.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.1" y="1598.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.09%)</title><rect x="839.4" y="1587.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.4" y="1598.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.07%)</title><rect x="839.7" y="1571.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.7" y="1582.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (5 samples, 0.07%)</title><rect x="839.7" y="1555.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (3 samples, 0.04%)</title><rect x="840.5" y="1635.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.5" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.04%)</title><rect x="840.5" y="1619.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.5" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (64 samples, 0.85%)</title><rect x="841.0" y="1635.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.0" y="1646.0"></text>
</g>
<g>
<title>java/time/Instant.now (35 samples, 0.47%)</title><rect x="843.2" y="1619.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.2" y="1630.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (35 samples, 0.47%)</title><rect x="843.2" y="1603.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (33 samples, 0.44%)</title><rect x="843.5" y="1587.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.5" y="1598.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (28 samples, 0.37%)</title><rect x="844.1" y="1571.0" width="4.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="847.1" y="1582.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="845.7" y="1555.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="848.7" y="1566.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (11 samples, 0.15%)</title><rect x="846.8" y="1555.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="849.8" y="1566.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="846.9" y="1539.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="849.9" y="1550.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="847.6" y="1539.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="850.6" y="1550.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.07%)</title><rect x="847.7" y="1523.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="850.7" y="1534.0"></text>
</g>
<g>
<title>java/time/Instant.until (2 samples, 0.03%)</title><rect x="848.7" y="1619.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.7" y="1630.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (4 samples, 0.05%)</title><rect x="849.1" y="1619.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.1" y="1630.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (8 samples, 0.11%)</title><rect x="849.8" y="1619.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="852.8" y="1630.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.05%)</title><rect x="850.1" y="1603.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.1" y="1614.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.03%)</title><rect x="850.4" y="1587.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.4" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.03%)</title><rect x="850.4" y="1571.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.4" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (2 samples, 0.03%)</title><rect x="850.7" y="1603.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.7" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.readyOps (5 samples, 0.07%)</title><rect x="851.2" y="1635.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.2" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (507 samples, 6.76%)</title><rect x="852.0" y="1635.0" width="79.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.0" y="1646.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (507 samples, 6.76%)</title><rect x="852.0" y="1619.0" width="79.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.0" y="1630.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (503 samples, 6.70%)</title><rect x="852.5" y="1603.0" width="79.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.5" y="1614.0">sun/nio/c..</text>
</g>
<g>
<title>clock_gettime (4 samples, 0.05%)</title><rect x="852.6" y="1587.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="855.6" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (299 samples, 3.99%)</title><rect x="853.4" y="1587.0" width="47.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.4" y="1598.0">sun/..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.04%)</title><rect x="854.8" y="1571.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="857.8" y="1582.0"></text>
</g>
<g>
<title>[unknown] (282 samples, 3.76%)</title><rect x="855.3" y="1571.0" width="44.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="858.3" y="1582.0">[unk..</text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.08%)</title><rect x="855.4" y="1555.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="858.4" y="1566.0"></text>
</g>
<g>
<title>epoll_wait (274 samples, 3.65%)</title><rect x="856.5" y="1555.0" width="43.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="859.5" y="1566.0">epol..</text>
</g>
<g>
<title>[unknown] (234 samples, 3.12%)</title><rect x="862.8" y="1539.0" width="36.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="865.8" y="1550.0">[un..</text>
</g>
<g>
<title>[unknown] (234 samples, 3.12%)</title><rect x="862.8" y="1523.0" width="36.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="865.8" y="1534.0">[un..</text>
</g>
<g>
<title>[unknown] (204 samples, 2.72%)</title><rect x="867.6" y="1507.0" width="32.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="870.6" y="1518.0">[u..</text>
</g>
<g>
<title>[unknown] (202 samples, 2.69%)</title><rect x="867.9" y="1491.0" width="31.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="870.9" y="1502.0">[u..</text>
</g>
<g>
<title>[unknown] (199 samples, 2.65%)</title><rect x="868.3" y="1475.0" width="31.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="871.3" y="1486.0">[u..</text>
</g>
<g>
<title>[unknown] (169 samples, 2.25%)</title><rect x="873.1" y="1459.0" width="26.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="876.1" y="1470.0">[..</text>
</g>
<g>
<title>[unknown] (129 samples, 1.72%)</title><rect x="879.3" y="1443.0" width="20.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="882.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.33%)</title><rect x="883.9" y="1427.0" width="15.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="886.9" y="1438.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.08%)</title><rect x="886.9" y="1411.0" width="12.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="889.9" y="1422.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.27%)</title><rect x="896.5" y="1395.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="899.5" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.05%)</title><rect x="899.6" y="1571.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="902.6" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (154 samples, 2.05%)</title><rect x="900.4" y="1587.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.4" y="1598.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="901.2" y="1571.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.2" y="1582.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="901.2" y="1555.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.2" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="901.7" y="1555.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.7" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (135 samples, 1.80%)</title><rect x="902.3" y="1571.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.3" y="1582.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (135 samples, 1.80%)</title><rect x="902.3" y="1555.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.3" y="1566.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (2 samples, 0.03%)</title><rect x="902.5" y="1539.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="905.5" y="1550.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.36%)</title><rect x="902.8" y="1539.0" width="16.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="905.8" y="1550.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (41 samples, 0.55%)</title><rect x="902.8" y="1523.0" width="6.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="905.8" y="1534.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.55%)</title><rect x="902.8" y="1507.0" width="6.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="905.8" y="1518.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.55%)</title><rect x="902.8" y="1491.0" width="6.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="905.8" y="1502.0"></text>
</g>
<g>
<title>read (40 samples, 0.53%)</title><rect x="902.9" y="1475.0" width="6.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="905.9" y="1486.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="903.7" y="1459.0" width="5.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="906.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="903.7" y="1443.0" width="5.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="906.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.43%)</title><rect x="904.2" y="1427.0" width="5.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="907.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.43%)</title><rect x="904.2" y="1411.0" width="5.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="907.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="904.4" y="1395.0" width="4.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="907.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.40%)</title><rect x="904.5" y="1379.0" width="4.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="907.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.35%)</title><rect x="905.1" y="1363.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="908.1" y="1374.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.29%)</title><rect x="905.8" y="1347.0" width="3.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="908.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="907.2" y="1331.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="910.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="908.3" y="1315.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="911.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="908.6" y="1299.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="911.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="909.2" y="1523.0" width="2.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="912.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="909.2" y="1507.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="912.2" y="1518.0"></text>
</g>
<g>
<title>read (4 samples, 0.05%)</title><rect x="909.2" y="1491.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="912.2" y="1502.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="909.2" y="1475.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="912.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="909.2" y="1459.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="912.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="909.2" y="1443.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="912.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="909.2" y="1427.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="912.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="909.2" y="1411.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="912.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="909.4" y="1395.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="912.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="909.4" y="1379.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="912.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="909.4" y="1363.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="912.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="909.4" y="1347.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="912.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="909.5" y="1331.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="912.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="909.5" y="1315.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="912.5" y="1326.0"></text>
</g>
<g>
<title>read (10 samples, 0.13%)</title><rect x="909.9" y="1507.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="912.9" y="1518.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="910.0" y="1491.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="913.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="910.0" y="1475.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="913.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="910.2" y="1459.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="913.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="910.3" y="1443.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="913.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="910.3" y="1427.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="913.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="910.3" y="1411.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="913.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="910.3" y="1395.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="913.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="911.0" y="1379.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="914.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="911.0" y="1363.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="914.0" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="911.1" y="1347.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="914.1" y="1358.0"></text>
</g>
<g>
<title>read (45 samples, 0.60%)</title><rect x="911.8" y="1523.0" width="7.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="914.8" y="1534.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="913.3" y="1507.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.3" y="1518.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="913.3" y="1491.0" width="5.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="916.3" y="1502.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="914.0" y="1475.0" width="4.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="917.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="914.0" y="1459.0" width="4.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="917.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.40%)</title><rect x="914.1" y="1443.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="917.1" y="1454.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.39%)</title><rect x="914.3" y="1427.0" width="4.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="917.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.35%)</title><rect x="914.7" y="1411.0" width="4.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="917.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.28%)</title><rect x="915.5" y="1395.0" width="3.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="918.5" y="1406.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.20%)</title><rect x="916.5" y="1379.0" width="2.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="919.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="916.9" y="1363.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="919.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="917.9" y="1347.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="920.9" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="918.5" y="1331.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="921.5" y="1342.0"></text>
</g>
<g>
<title>read (30 samples, 0.40%)</title><rect x="918.8" y="1539.0" width="4.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="921.8" y="1550.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.24%)</title><rect x="920.7" y="1523.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="923.7" y="1534.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.24%)</title><rect x="920.7" y="1507.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="923.7" y="1518.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="921.5" y="1491.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="924.5" y="1502.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="921.5" y="1475.0" width="2.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="924.5" y="1486.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="921.8" y="1459.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="924.8" y="1470.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="921.8" y="1443.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="924.8" y="1454.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="921.8" y="1427.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="924.8" y="1438.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="922.1" y="1411.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="925.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="922.6" y="1395.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="925.6" y="1406.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="922.8" y="1379.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="925.8" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="923.1" y="1363.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="926.1" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.09%)</title><rect x="923.5" y="1571.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="926.5" y="1582.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="923.5" y="1555.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.5" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.04%)</title><rect x="923.5" y="1539.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.5" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.04%)</title><rect x="923.5" y="1523.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.5" y="1534.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.04%)</title><rect x="923.5" y="1507.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.5" y="1518.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="923.7" y="1491.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.7" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (4 samples, 0.05%)</title><rect x="924.0" y="1555.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.0" y="1566.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="924.0" y="1539.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="927.0" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.03%)</title><rect x="924.3" y="1539.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.3" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (2 samples, 0.03%)</title><rect x="924.3" y="1523.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.3" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (27 samples, 0.36%)</title><rect x="924.6" y="1587.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="927.6" y="1598.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (23 samples, 0.31%)</title><rect x="925.3" y="1571.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.3" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.05%)</title><rect x="928.9" y="1587.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.9" y="1598.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (3 samples, 0.04%)</title><rect x="929.1" y="1571.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.1" y="1582.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="929.1" y="1555.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.04%)</title><rect x="929.1" y="1539.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.04%)</title><rect x="929.1" y="1523.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="932.1" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (10 samples, 0.13%)</title><rect x="929.5" y="1587.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.5" y="1598.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (7 samples, 0.09%)</title><rect x="930.0" y="1571.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.0" y="1582.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.09%)</title><rect x="930.0" y="1555.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.0" y="1566.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.09%)</title><rect x="930.0" y="1539.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.0" y="1550.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.09%)</title><rect x="930.0" y="1523.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.0" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.04%)</title><rect x="931.1" y="1587.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.1" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (49 samples, 0.65%)</title><rect x="931.7" y="1635.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.7" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (49 samples, 0.65%)</title><rect x="931.7" y="1619.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.7" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (48 samples, 0.64%)</title><rect x="931.9" y="1603.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.9" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (34 samples, 0.45%)</title><rect x="932.0" y="1587.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.0" y="1598.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.40%)</title><rect x="932.0" y="1571.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="935.0" y="1582.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 0.40%)</title><rect x="932.0" y="1555.0" width="4.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="935.0" y="1566.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="933.1" y="1539.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="936.1" y="1550.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="933.1" y="1523.0" width="3.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="936.1" y="1534.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="934.6" y="1507.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="937.6" y="1518.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="934.6" y="1491.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="937.6" y="1502.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="935.0" y="1475.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="938.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="935.7" y="1459.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="938.7" y="1470.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="936.0" y="1443.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="939.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="936.4" y="1427.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="939.4" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="936.4" y="1411.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="939.4" y="1422.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.05%)</title><rect x="936.8" y="1571.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="939.8" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.04%)</title><rect x="937.4" y="1587.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.4" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2 samples, 0.03%)</title><rect x="937.4" y="1571.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.4" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.03%)</title><rect x="937.4" y="1555.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.4" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="937.4" y="1539.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="940.4" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (7 samples, 0.09%)</title><rect x="937.9" y="1587.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.9" y="1598.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (5 samples, 0.07%)</title><rect x="938.2" y="1571.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.2" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.03%)</title><rect x="939.1" y="1587.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="942.1" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (5 samples, 0.07%)</title><rect x="939.4" y="1635.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.4" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (5 samples, 0.07%)</title><rect x="939.4" y="1619.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="942.4" y="1630.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (2 samples, 0.03%)</title><rect x="939.4" y="1603.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (3 samples, 0.04%)</title><rect x="939.7" y="1603.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="942.7" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (10 samples, 0.13%)</title><rect x="940.2" y="1635.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.2" y="1646.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (8 samples, 0.11%)</title><rect x="940.5" y="1619.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.5" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (7 samples, 0.09%)</title><rect x="940.7" y="1603.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.7" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (13 samples, 0.17%)</title><rect x="941.8" y="1635.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.8" y="1646.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (13 samples, 0.17%)</title><rect x="941.8" y="1619.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="944.8" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.09%)</title><rect x="942.0" y="1603.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.0" y="1614.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (7 samples, 0.09%)</title><rect x="942.0" y="1587.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.0" y="1598.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (7 samples, 0.09%)</title><rect x="942.0" y="1571.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.0" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4 samples, 0.05%)</title><rect x="942.3" y="1555.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.3" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (5 samples, 0.07%)</title><rect x="943.1" y="1603.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.1" y="1614.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,179 samples, 15.72%)</title><rect x="943.8" y="1651.0" width="185.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.8" y="1662.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.07%)</title><rect x="944.5" y="1635.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.5" y="1646.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.07%)</title><rect x="944.5" y="1619.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.5" y="1630.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="944.9" y="1603.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.9" y="1614.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (145 samples, 1.93%)</title><rect x="945.3" y="1635.0" width="22.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.3" y="1646.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.05%)</title><rect x="945.4" y="1619.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.4" y="1630.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="945.6" y="1603.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.6" y="1614.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (140 samples, 1.87%)</title><rect x="946.0" y="1619.0" width="22.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.0" y="1630.0">o..</text>
</g>
<g>
<title>[unknown] (122 samples, 1.63%)</title><rect x="947.5" y="1603.0" width="19.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="950.5" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="947.5" y="1587.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="950.5" y="1598.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="947.9" y="1587.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="950.9" y="1598.0"></text>
</g>
<g>
<title>epoll_wait (117 samples, 1.56%)</title><rect x="948.2" y="1587.0" width="18.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="951.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.33%)</title><rect x="950.9" y="1571.0" width="15.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="953.9" y="1582.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.33%)</title><rect x="950.9" y="1555.0" width="15.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="953.9" y="1566.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.17%)</title><rect x="952.8" y="1539.0" width="13.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="955.8" y="1550.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.15%)</title><rect x="953.1" y="1523.0" width="13.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="956.1" y="1534.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.15%)</title><rect x="953.1" y="1507.0" width="13.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="956.1" y="1518.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.99%)</title><rect x="955.0" y="1491.0" width="11.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="958.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="958.2" y="1475.0" width="8.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="961.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.55%)</title><rect x="960.2" y="1459.0" width="6.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="963.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.47%)</title><rect x="961.1" y="1443.0" width="5.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="964.1" y="1454.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.28%)</title><rect x="963.3" y="1427.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="966.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="966.3" y="1411.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="969.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="966.3" y="1395.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="969.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="966.3" y="1379.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="969.3" y="1390.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="966.6" y="1603.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="969.6" y="1614.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.09%)</title><rect x="967.0" y="1603.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="970.0" y="1614.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,025 samples, 13.66%)</title><rect x="968.1" y="1635.0" width="161.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.1" y="1646.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="968.1" y="1619.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="971.1" y="1630.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,020 samples, 13.60%)</title><rect x="968.5" y="1619.0" width="160.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.5" y="1630.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (693 samples, 9.24%)</title><rect x="968.7" y="1603.0" width="109.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.7" y="1614.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (621 samples, 8.28%)</title><rect x="970.6" y="1587.0" width="97.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.6" y="1598.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (619 samples, 8.25%)</title><rect x="970.9" y="1571.0" width="97.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.9" y="1582.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.03%)</title><rect x="971.5" y="1555.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="974.5" y="1566.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.07%)</title><rect x="971.8" y="1555.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.8" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="971.8" y="1539.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="974.8" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="971.8" y="1523.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.8" y="1534.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="972.2" y="1523.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="972.3" y="1507.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="972.3" y="1491.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.3" y="1502.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.13%)</title><rect x="972.6" y="1555.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.13%)</title><rect x="972.6" y="1539.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (4 samples, 0.05%)</title><rect x="973.4" y="1523.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.4" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.handleDefault (598 samples, 7.97%)</title><rect x="974.2" y="1555.0" width="94.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="977.2" y="1566.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.entity (597 samples, 7.96%)</title><rect x="974.4" y="1539.0" width="93.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.4" y="1550.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.12%)</title><rect x="974.8" y="1523.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.11%)</title><rect x="974.8" y="1507.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="975.0" y="1491.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="978.0" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="975.3" y="1491.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="975.5" y="1475.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="975.5" y="1459.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.5" y="1470.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (11 samples, 0.15%)</title><rect x="976.2" y="1523.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.07%)</title><rect x="976.7" y="1507.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.7" y="1518.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (2 samples, 0.03%)</title><rect x="977.2" y="1491.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="980.2" y="1502.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="977.7" y="1507.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="977.7" y="1491.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="980.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="977.7" y="1475.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="977.7" y="1459.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="980.7" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApi.sendResponseAsync (5 samples, 0.07%)</title><rect x="978.0" y="1523.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="981.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.05%)</title><rect x="978.1" y="1507.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.1" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.05%)</title><rect x="978.1" y="1491.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.04%)</title><rect x="978.1" y="1475.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.03%)</title><rect x="978.3" y="1459.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.3" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRf (20 samples, 0.27%)</title><rect x="978.8" y="1523.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.8" y="1534.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.04%)</title><rect x="978.9" y="1507.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="978.9" y="1491.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="978.9" y="1475.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.9" y="1486.0"></text>
</g>
<g>
<title>ru/mail/polis/service/RF.parse (15 samples, 0.20%)</title><rect x="979.5" y="1507.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.5" y="1518.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (3 samples, 0.04%)</title><rect x="979.5" y="1491.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.5" y="1502.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (2 samples, 0.03%)</title><rect x="979.5" y="1475.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.5" y="1486.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (12 samples, 0.16%)</title><rect x="980.0" y="1491.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.0" y="1502.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (4 samples, 0.05%)</title><rect x="980.2" y="1475.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.2" y="1486.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (4 samples, 0.05%)</title><rect x="980.2" y="1459.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.2" y="1470.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (4 samples, 0.05%)</title><rect x="980.2" y="1443.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="983.2" y="1454.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (4 samples, 0.05%)</title><rect x="980.2" y="1427.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.2" y="1438.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (2 samples, 0.03%)</title><rect x="980.3" y="1411.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.3" y="1422.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (6 samples, 0.08%)</title><rect x="981.0" y="1475.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.0" y="1486.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (6 samples, 0.08%)</title><rect x="981.0" y="1459.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.0" y="1470.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (6 samples, 0.08%)</title><rect x="981.0" y="1443.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.0" y="1454.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (6 samples, 0.08%)</title><rect x="981.0" y="1427.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.0" y="1438.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (6 samples, 0.08%)</title><rect x="981.0" y="1411.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.0" y="1422.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (6 samples, 0.08%)</title><rect x="981.0" y="1395.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.0" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processClientRequest (448 samples, 5.97%)</title><rect x="981.9" y="1523.0" width="70.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="984.9" y="1534.0">ru/mail/..</text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="982.1" y="1507.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="985.1" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="982.1" y="1491.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="985.1" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="982.2" y="1475.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.2" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="982.2" y="1459.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="985.2" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/service/BasicTopology.primaryFor (9 samples, 0.12%)</title><rect x="982.5" y="1507.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.5" y="1518.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.04%)</title><rect x="982.5" y="1491.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="985.5" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="982.7" y="1475.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="985.7" y="1486.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.08%)</title><rect x="983.0" y="1491.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.0" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.08%)</title><rect x="983.0" y="1475.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.0" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.07%)</title><rect x="983.2" y="1459.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.2" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.04%)</title><rect x="983.3" y="1443.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.3" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="983.5" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="983.5" y="1411.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.5" y="1422.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.getRequestHandler (5 samples, 0.07%)</title><rect x="983.9" y="1507.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="986.9" y="1518.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.pollNodeAsync (352 samples, 4.69%)</title><rect x="984.7" y="1507.0" width="55.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="987.7" y="1518.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (2 samples, 0.03%)</title><rect x="989.9" y="1491.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="990.4" y="1491.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.4" y="1502.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="991.5" y="1491.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="992.4" y="1491.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.4" y="1502.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="993.1" y="1491.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="996.1" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.03%)</title><rect x="993.9" y="1491.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="996.9" y="1502.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="994.2" y="1491.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="997.2" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.getEmptyBodyResponseHandler (2 samples, 0.03%)</title><rect x="994.5" y="1491.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.5" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.proxy (288 samples, 3.84%)</title><rect x="994.8" y="1491.0" width="45.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.8" y="1502.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.proxy (288 samples, 3.84%)</title><rect x="994.8" y="1475.0" width="45.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.8" y="1486.0">ru/m..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (199 samples, 2.65%)</title><rect x="995.1" y="1459.0" width="31.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.1" y="1470.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (199 samples, 2.65%)</title><rect x="995.1" y="1443.0" width="31.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.1" y="1454.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (198 samples, 2.64%)</title><rect x="995.3" y="1427.0" width="31.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.3" y="1438.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (198 samples, 2.64%)</title><rect x="995.3" y="1411.0" width="31.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.3" y="1422.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="995.6" y="1395.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (112 samples, 1.49%)</title><rect x="996.5" y="1395.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.5" y="1406.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.15%)</title><rect x="997.0" y="1379.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.0" y="1390.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.05%)</title><rect x="997.0" y="1363.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.0" y="1374.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="997.0" y="1347.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.0" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.04%)</title><rect x="997.0" y="1331.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.0" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="997.0" y="1315.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.0" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.04%)</title><rect x="997.0" y="1299.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="997.0" y="1283.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="997.0" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="997.2" y="1251.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="997.2" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1000.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="997.2" y="1219.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.2" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.09%)</title><rect x="997.6" y="1363.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1000.6" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.09%)</title><rect x="997.6" y="1347.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1000.6" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (6 samples, 0.08%)</title><rect x="997.8" y="1331.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.8" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (6 samples, 0.08%)</title><rect x="997.8" y="1315.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.8" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.08%)</title><rect x="997.8" y="1299.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.8" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.07%)</title><rect x="997.8" y="1283.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.8" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.07%)</title><rect x="997.8" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.8" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.04%)</title><rect x="997.8" y="1251.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.8" y="1262.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.03%)</title><rect x="997.9" y="1235.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1000.9" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (2 samples, 0.03%)</title><rect x="998.3" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.3" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (13 samples, 0.17%)</title><rect x="998.7" y="1379.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.7" y="1390.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.17%)</title><rect x="998.7" y="1363.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.7" y="1374.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (12 samples, 0.16%)</title><rect x="998.9" y="1347.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.9" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (12 samples, 0.16%)</title><rect x="998.9" y="1331.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.9" y="1342.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (12 samples, 0.16%)</title><rect x="998.9" y="1315.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.9" y="1326.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.15%)</title><rect x="999.0" y="1299.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.07%)</title><rect x="999.2" y="1283.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.2" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (2 samples, 0.03%)</title><rect x="999.2" y="1267.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.2" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="999.2" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.2" y="1262.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (3 samples, 0.04%)</title><rect x="999.5" y="1267.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.5" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="1000.1" y="1283.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1706292388.test (2 samples, 0.03%)</title><rect x="1000.5" y="1283.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.03%)</title><rect x="1000.8" y="1379.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.checkTimeout (5 samples, 0.07%)</title><rect x="1001.1" y="1379.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (77 samples, 1.03%)</title><rect x="1001.9" y="1379.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.9" y="1390.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (77 samples, 1.03%)</title><rect x="1001.9" y="1363.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.9" y="1374.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (76 samples, 1.01%)</title><rect x="1002.0" y="1347.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.0" y="1358.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1002.4" y="1331.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1005.4" y="1342.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.03%)</title><rect x="1002.7" y="1331.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1005.7" y="1342.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (38 samples, 0.51%)</title><rect x="1003.3" y="1331.0" width="6.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1006.3" y="1342.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (14 samples, 0.19%)</title><rect x="1004.7" y="1315.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.7" y="1326.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.03%)</title><rect x="1005.5" y="1299.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1008.5" y="1310.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="1005.8" y="1299.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1008.8" y="1310.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="1006.1" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.1" y="1310.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.03%)</title><rect x="1006.4" y="1299.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1009.4" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (2 samples, 0.03%)</title><rect x="1007.2" y="1315.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1010.2" y="1326.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.08%)</title><rect x="1007.7" y="1315.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.7" y="1326.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.05%)</title><rect x="1007.9" y="1299.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1010.9" y="1310.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="1008.0" y="1283.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1011.0" y="1294.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.05%)</title><rect x="1008.6" y="1315.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.6" y="1326.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="1008.6" y="1299.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1011.6" y="1310.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (4 samples, 0.05%)</title><rect x="1009.3" y="1331.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1012.3" y="1342.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (18 samples, 0.24%)</title><rect x="1010.7" y="1331.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.7" y="1342.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (18 samples, 0.24%)</title><rect x="1010.7" y="1315.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.05%)</title><rect x="1011.0" y="1299.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.05%)</title><rect x="1011.0" y="1283.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.04%)</title><rect x="1011.2" y="1267.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="1011.3" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.3" y="1262.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (11 samples, 0.15%)</title><rect x="1011.8" y="1299.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.04%)</title><rect x="1011.9" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.9" y="1294.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="1012.1" y="1267.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.1" y="1278.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="1012.1" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="1012.1" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.1" y="1246.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (7 samples, 0.09%)</title><rect x="1012.4" y="1283.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.07%)</title><rect x="1012.7" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="1012.9" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.9" y="1262.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="1013.5" y="1331.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (23 samples, 0.31%)</title><rect x="1014.1" y="1395.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (21 samples, 0.28%)</title><rect x="1014.5" y="1379.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (21 samples, 0.28%)</title><rect x="1014.5" y="1363.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (5 samples, 0.07%)</title><rect x="1014.8" y="1347.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2 samples, 0.03%)</title><rect x="1015.2" y="1331.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (7 samples, 0.09%)</title><rect x="1015.6" y="1347.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1018.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.03%)</title><rect x="1015.6" y="1331.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1018.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.03%)</title><rect x="1015.6" y="1315.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.03%)</title><rect x="1015.6" y="1299.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.03%)</title><rect x="1015.6" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (3 samples, 0.04%)</title><rect x="1016.0" y="1331.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.0" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (7 samples, 0.09%)</title><rect x="1016.7" y="1347.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.7" y="1358.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (7 samples, 0.09%)</title><rect x="1016.7" y="1331.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.7" y="1342.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (7 samples, 0.09%)</title><rect x="1016.7" y="1315.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1019.7" y="1326.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1016.7" y="1299.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (55 samples, 0.73%)</title><rect x="1017.8" y="1395.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1020.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (54 samples, 0.72%)</title><rect x="1017.8" y="1379.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (53 samples, 0.71%)</title><rect x="1017.9" y="1363.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (53 samples, 0.71%)</title><rect x="1017.9" y="1347.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (48 samples, 0.64%)</title><rect x="1017.9" y="1331.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (48 samples, 0.64%)</title><rect x="1017.9" y="1315.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (48 samples, 0.64%)</title><rect x="1017.9" y="1299.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (48 samples, 0.64%)</title><rect x="1017.9" y="1283.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 0.64%)</title><rect x="1017.9" y="1267.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 0.64%)</title><rect x="1017.9" y="1251.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1020.9" y="1262.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2 samples, 0.03%)</title><rect x="1018.2" y="1235.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1021.2" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.08%)</title><rect x="1018.6" y="1235.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1021.6" y="1246.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="1018.6" y="1219.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1021.6" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (37 samples, 0.49%)</title><rect x="1019.7" y="1235.0" width="5.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1022.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="1020.6" y="1219.0" width="4.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1023.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="1020.6" y="1203.0" width="4.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1023.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.35%)</title><rect x="1021.4" y="1187.0" width="4.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1024.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.35%)</title><rect x="1021.4" y="1171.0" width="4.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1024.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.35%)</title><rect x="1021.4" y="1155.0" width="4.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1024.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="1021.9" y="1139.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1024.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.27%)</title><rect x="1022.3" y="1123.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1025.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.25%)</title><rect x="1022.5" y="1107.0" width="3.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1025.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.07%)</title><rect x="1025.5" y="1331.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1028.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.07%)</title><rect x="1025.5" y="1315.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1028.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.04%)</title><rect x="1025.5" y="1299.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (3 samples, 0.04%)</title><rect x="1025.5" y="1283.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.03%)</title><rect x="1025.9" y="1299.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.03%)</title><rect x="1025.9" y="1283.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="1025.9" y="1267.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.9" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/AsyncClient.createRequest (87 samples, 1.16%)</title><rect x="1026.4" y="1459.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1029.4" y="1470.0"></text>
</g>
<g>
<title>java/net/URI.create (43 samples, 0.57%)</title><rect x="1026.4" y="1443.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.4" y="1454.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (43 samples, 0.57%)</title><rect x="1026.4" y="1427.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1029.4" y="1438.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (43 samples, 0.57%)</title><rect x="1026.4" y="1411.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.4" y="1422.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (36 samples, 0.48%)</title><rect x="1026.9" y="1395.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.9" y="1406.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.03%)</title><rect x="1027.0" y="1379.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.0" y="1390.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.03%)</title><rect x="1027.0" y="1363.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.0" y="1374.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (22 samples, 0.29%)</title><rect x="1027.4" y="1379.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.4" y="1390.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (13 samples, 0.17%)</title><rect x="1027.4" y="1363.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1030.4" y="1374.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.07%)</title><rect x="1028.0" y="1347.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.0" y="1358.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="1028.1" y="1331.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.1" y="1342.0"></text>
</g>
<g>
<title>java/net/URI.match (3 samples, 0.04%)</title><rect x="1028.3" y="1315.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.3" y="1326.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="1028.9" y="1347.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1028.9" y="1331.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1028.9" y="1315.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1028.9" y="1299.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.9" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (9 samples, 0.12%)</title><rect x="1029.4" y="1363.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1030.2" y="1347.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1030.2" y="1331.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1030.2" y="1315.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.2" y="1326.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1030.3" y="1299.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1033.3" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (11 samples, 0.15%)</title><rect x="1030.8" y="1379.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="1031.0" y="1363.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.0" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.11%)</title><rect x="1031.3" y="1363.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.11%)</title><rect x="1031.3" y="1347.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.07%)</title><rect x="1031.8" y="1331.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.8" y="1342.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="1032.6" y="1395.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1032.7" y="1379.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1032.7" y="1363.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.7" y="1374.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (3 samples, 0.04%)</title><rect x="1033.2" y="1443.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.2" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1033.2" y="1427.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1033.2" y="1411.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1036.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1033.2" y="1395.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1033.2" y="1379.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.2" y="1390.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.04%)</title><rect x="1033.2" y="1363.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1036.2" y="1374.0"></text>
</g>
<g>
<title>java/time/Duration.of (3 samples, 0.04%)</title><rect x="1033.7" y="1443.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.7" y="1454.0"></text>
</g>
<g>
<title>java/time/Duration.plus (3 samples, 0.04%)</title><rect x="1033.7" y="1427.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1036.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (20 samples, 0.27%)</title><rect x="1034.1" y="1443.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (20 samples, 0.27%)</title><rect x="1034.1" y="1427.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.1" y="1438.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.03%)</title><rect x="1034.1" y="1411.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1037.1" y="1422.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.24%)</title><rect x="1034.4" y="1411.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.4" y="1422.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.24%)</title><rect x="1034.4" y="1395.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1037.4" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (16 samples, 0.21%)</title><rect x="1034.8" y="1379.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.8" y="1390.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/1294239191.accept (14 samples, 0.19%)</title><rect x="1034.8" y="1363.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.8" y="1374.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.19%)</title><rect x="1034.8" y="1347.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.04%)</title><rect x="1034.9" y="1331.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.04%)</title><rect x="1034.9" y="1315.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1037.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="1034.9" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1034.9" y="1283.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="1035.4" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1038.4" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.07%)</title><rect x="1035.7" y="1331.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.7" y="1342.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/2083550631.accept (5 samples, 0.07%)</title><rect x="1035.7" y="1315.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.7" y="1326.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.07%)</title><rect x="1035.7" y="1299.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/270056930.test (3 samples, 0.04%)</title><rect x="1036.0" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.04%)</title><rect x="1036.0" y="1267.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.0" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.04%)</title><rect x="1036.0" y="1251.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.0" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.04%)</title><rect x="1036.0" y="1235.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1039.0" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.04%)</title><rect x="1036.0" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1039.0" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="1036.0" y="1203.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.0" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.04%)</title><rect x="1036.0" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="1036.0" y="1171.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="1036.0" y="1155.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="1036.0" y="1139.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (3 samples, 0.04%)</title><rect x="1036.0" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.0" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="1036.6" y="1331.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.6" y="1342.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.03%)</title><rect x="1037.0" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (15 samples, 0.20%)</title><rect x="1037.3" y="1443.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (15 samples, 0.20%)</title><rect x="1037.3" y="1427.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (12 samples, 0.16%)</title><rect x="1037.3" y="1411.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1040.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/270056930.test (10 samples, 0.13%)</title><rect x="1037.3" y="1395.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (10 samples, 0.13%)</title><rect x="1037.3" y="1379.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.3" y="1390.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (8 samples, 0.11%)</title><rect x="1037.3" y="1363.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.3" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (8 samples, 0.11%)</title><rect x="1037.3" y="1347.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.3" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (8 samples, 0.11%)</title><rect x="1037.3" y="1331.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.3" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.11%)</title><rect x="1037.3" y="1315.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.3" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (8 samples, 0.11%)</title><rect x="1037.3" y="1299.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.08%)</title><rect x="1037.6" y="1283.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="1038.1" y="1267.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="1038.2" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="1038.2" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="1038.2" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.2" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="1038.5" y="1363.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1041.5" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.04%)</title><rect x="1039.2" y="1411.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.2" y="1422.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.04%)</title><rect x="1039.2" y="1395.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.2" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="1039.3" y="1379.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.03%)</title><rect x="1039.8" y="1443.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.8" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.03%)</title><rect x="1039.8" y="1427.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.03%)</title><rect x="1039.8" y="1411.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1042.8" y="1422.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processLocallyAsync (33 samples, 0.44%)</title><rect x="1040.1" y="1507.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.1" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 0.44%)</title><rect x="1040.1" y="1491.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (32 samples, 0.43%)</title><rect x="1040.3" y="1475.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (23 samples, 0.31%)</title><rect x="1040.6" y="1459.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.6" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="1040.6" y="1443.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.6" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="1040.6" y="1427.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.6" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.03%)</title><rect x="1040.6" y="1411.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.28%)</title><rect x="1040.9" y="1443.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.28%)</title><rect x="1040.9" y="1427.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.28%)</title><rect x="1040.9" y="1411.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.28%)</title><rect x="1040.9" y="1395.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.28%)</title><rect x="1040.9" y="1379.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.9" y="1390.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (19 samples, 0.25%)</title><rect x="1041.2" y="1363.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1044.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.21%)</title><rect x="1041.7" y="1347.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1044.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.21%)</title><rect x="1041.7" y="1331.0" width="2.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1044.7" y="1342.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.20%)</title><rect x="1041.8" y="1315.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1044.8" y="1326.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.20%)</title><rect x="1041.8" y="1299.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1044.8" y="1310.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.20%)</title><rect x="1041.8" y="1283.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1044.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="1042.0" y="1267.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1045.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.17%)</title><rect x="1042.1" y="1251.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1045.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="1042.3" y="1235.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1045.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.08%)</title><rect x="1044.2" y="1459.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.2" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.08%)</title><rect x="1044.2" y="1443.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.2" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.04%)</title><rect x="1044.2" y="1427.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.2" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.03%)</title><rect x="1044.2" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.04%)</title><rect x="1044.7" y="1427.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.7" y="1438.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodesResponsesAsync (45 samples, 0.60%)</title><rect x="1045.3" y="1507.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1815611058.linkToTargetMethod (2 samples, 0.03%)</title><rect x="1045.3" y="1491.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1048.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/455680542.invokeStatic (2 samples, 0.03%)</title><rect x="1045.3" y="1475.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.3" y="1486.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.get$Lambda (2 samples, 0.03%)</title><rect x="1045.3" y="1459.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.3" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase$$Lambda$141/1888612023.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1045.3" y="1443.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.3" y="1454.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ExtendedCompletableFuture.firstN (43 samples, 0.57%)</title><rect x="1045.6" y="1491.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.6" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1046.1" y="1475.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.1" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (38 samples, 0.51%)</title><rect x="1046.4" y="1475.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (38 samples, 0.51%)</title><rect x="1046.4" y="1459.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (36 samples, 0.48%)</title><rect x="1046.7" y="1443.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (36 samples, 0.48%)</title><rect x="1046.7" y="1427.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.7" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (36 samples, 0.48%)</title><rect x="1046.7" y="1411.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.7" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (36 samples, 0.48%)</title><rect x="1046.7" y="1395.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.7" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.48%)</title><rect x="1046.7" y="1379.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.48%)</title><rect x="1046.7" y="1363.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.7" y="1374.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1047.2" y="1347.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1050.2" y="1358.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (31 samples, 0.41%)</title><rect x="1047.5" y="1347.0" width="4.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1050.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.39%)</title><rect x="1047.8" y="1331.0" width="4.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1050.8" y="1342.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.39%)</title><rect x="1047.8" y="1315.0" width="4.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1050.8" y="1326.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.35%)</title><rect x="1048.3" y="1299.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1051.3" y="1310.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.33%)</title><rect x="1048.4" y="1283.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1051.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.33%)</title><rect x="1048.4" y="1267.0" width="4.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1051.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="1048.8" y="1251.0" width="3.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1051.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="1048.8" y="1235.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1051.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="1048.8" y="1219.0" width="3.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1051.8" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ShardedHttpApiBase.processNodeRequest (101 samples, 1.35%)</title><rect x="1052.4" y="1523.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.4" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (101 samples, 1.35%)</title><rect x="1052.4" y="1507.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (101 samples, 1.35%)</title><rect x="1052.4" y="1491.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.4" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (93 samples, 1.24%)</title><rect x="1052.4" y="1475.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.4" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.05%)</title><rect x="1052.4" y="1459.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.05%)</title><rect x="1052.4" y="1443.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.4" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.05%)</title><rect x="1052.4" y="1427.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.4" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.04%)</title><rect x="1052.5" y="1411.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.04%)</title><rect x="1052.5" y="1395.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.04%)</title><rect x="1052.5" y="1379.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.04%)</title><rect x="1052.5" y="1363.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1055.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (89 samples, 1.19%)</title><rect x="1053.0" y="1459.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.0" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (89 samples, 1.19%)</title><rect x="1053.0" y="1443.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.0" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (89 samples, 1.19%)</title><rect x="1053.0" y="1427.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.0" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (89 samples, 1.19%)</title><rect x="1053.0" y="1411.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (89 samples, 1.19%)</title><rect x="1053.0" y="1395.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.0" y="1406.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.20%)</title><rect x="1053.5" y="1379.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1056.5" y="1390.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="1054.4" y="1363.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.4" y="1374.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1054.9" y="1363.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1057.9" y="1374.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="1055.2" y="1363.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1058.2" y="1374.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1055.5" y="1363.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1058.5" y="1374.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (68 samples, 0.91%)</title><rect x="1056.3" y="1379.0" width="10.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1059.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.84%)</title><rect x="1057.1" y="1363.0" width="9.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1060.1" y="1374.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.84%)</title><rect x="1057.1" y="1347.0" width="9.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1060.1" y="1358.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.73%)</title><rect x="1058.3" y="1331.0" width="8.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1061.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="1058.5" y="1315.0" width="8.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1061.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.71%)</title><rect x="1058.7" y="1299.0" width="8.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1061.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.61%)</title><rect x="1059.8" y="1283.0" width="7.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1062.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.59%)</title><rect x="1060.1" y="1267.0" width="6.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1063.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.57%)</title><rect x="1060.2" y="1251.0" width="6.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1063.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1066.7" y="1235.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1069.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1066.7" y="1219.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1069.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1066.7" y="1203.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1069.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1066.7" y="1187.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1069.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1066.7" y="1171.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1069.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1066.7" y="1155.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1069.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1066.7" y="1139.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1069.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.11%)</title><rect x="1067.0" y="1475.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1070.0" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.11%)</title><rect x="1067.0" y="1459.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.0" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="1067.0" y="1443.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.0" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.03%)</title><rect x="1067.0" y="1427.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1070.0" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.08%)</title><rect x="1067.3" y="1443.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.3" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1067.5" y="1427.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.04%)</title><rect x="1067.5" y="1411.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.5" y="1422.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26 samples, 0.35%)</title><rect x="1068.3" y="1587.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.3" y="1598.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.17%)</title><rect x="1069.5" y="1571.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1072.5" y="1582.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="1070.8" y="1555.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1073.8" y="1566.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="1071.2" y="1555.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.2" y="1566.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.07%)</title><rect x="1071.6" y="1571.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.6" y="1582.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.05%)</title><rect x="1071.7" y="1555.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.7" y="1566.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.09%)</title><rect x="1072.3" y="1587.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.3" y="1598.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.07%)</title><rect x="1072.5" y="1571.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.5" y="1582.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.07%)</title><rect x="1072.5" y="1555.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.5" y="1566.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="1073.0" y="1539.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1076.0" y="1550.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.11%)</title><rect x="1073.4" y="1587.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="1073.4" y="1571.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="1073.4" y="1555.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="1073.6" y="1539.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="1074.1" y="1571.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.1" y="1582.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.25%)</title><rect x="1074.7" y="1587.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1077.7" y="1598.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.25%)</title><rect x="1074.7" y="1571.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1077.4" y="1555.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1080.4" y="1566.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1077.4" y="1539.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1077.4" y="1523.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.4" y="1534.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (326 samples, 4.35%)</title><rect x="1077.7" y="1603.0" width="51.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1080.7" y="1614.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (323 samples, 4.31%)</title><rect x="1077.7" y="1587.0" width="50.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1080.7" y="1598.0">one/n..</text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="1079.9" y="1571.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1082.9" y="1582.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.41%)</title><rect x="1079.9" y="1555.0" width="4.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1082.9" y="1566.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (27 samples, 0.36%)</title><rect x="1079.9" y="1539.0" width="4.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1082.9" y="1550.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="1079.9" y="1523.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1082.9" y="1534.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.04%)</title><rect x="1080.7" y="1523.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1083.7" y="1534.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="1081.2" y="1523.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1084.2" y="1534.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.19%)</title><rect x="1081.6" y="1523.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1084.6" y="1534.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.04%)</title><rect x="1082.4" y="1507.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1085.4" y="1518.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.08%)</title><rect x="1082.9" y="1507.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1085.9" y="1518.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="1083.5" y="1491.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1086.5" y="1502.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.05%)</title><rect x="1084.1" y="1539.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1087.1" y="1550.0"></text>
</g>
<g>
<title>__GI___recv (274 samples, 3.65%)</title><rect x="1084.8" y="1571.0" width="43.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1087.8" y="1582.0">__GI..</text>
</g>
<g>
<title>[unknown] (257 samples, 3.43%)</title><rect x="1087.4" y="1555.0" width="40.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1090.4" y="1566.0">[un..</text>
</g>
<g>
<title>[unknown] (257 samples, 3.43%)</title><rect x="1087.4" y="1539.0" width="40.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1090.4" y="1550.0">[un..</text>
</g>
<g>
<title>[unknown] (247 samples, 3.29%)</title><rect x="1089.0" y="1523.0" width="38.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1092.0" y="1534.0">[un..</text>
</g>
<g>
<title>[unknown] (245 samples, 3.27%)</title><rect x="1089.3" y="1507.0" width="38.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1092.3" y="1518.0">[un..</text>
</g>
<g>
<title>[unknown] (239 samples, 3.19%)</title><rect x="1090.3" y="1491.0" width="37.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1093.3" y="1502.0">[un..</text>
</g>
<g>
<title>[unknown] (236 samples, 3.15%)</title><rect x="1090.7" y="1475.0" width="37.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1093.7" y="1486.0">[un..</text>
</g>
<g>
<title>[unknown] (230 samples, 3.07%)</title><rect x="1091.7" y="1459.0" width="36.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1094.7" y="1470.0">[un..</text>
</g>
<g>
<title>[unknown] (215 samples, 2.87%)</title><rect x="1094.1" y="1443.0" width="33.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1097.1" y="1454.0">[u..</text>
</g>
<g>
<title>[unknown] (198 samples, 2.64%)</title><rect x="1096.7" y="1427.0" width="31.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1099.7" y="1438.0">[u..</text>
</g>
<g>
<title>[unknown] (183 samples, 2.44%)</title><rect x="1099.1" y="1411.0" width="28.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1102.1" y="1422.0">[u..</text>
</g>
<g>
<title>[unknown] (169 samples, 2.25%)</title><rect x="1101.3" y="1395.0" width="26.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1104.3" y="1406.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.88%)</title><rect x="1105.7" y="1379.0" width="22.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1108.7" y="1390.0">[..</text>
</g>
<g>
<title>[unknown] (115 samples, 1.53%)</title><rect x="1109.8" y="1363.0" width="18.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1112.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 1.48%)</title><rect x="1110.4" y="1347.0" width="17.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1113.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.44%)</title><rect x="1110.9" y="1331.0" width="17.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1113.9" y="1342.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 1.43%)</title><rect x="1111.0" y="1315.0" width="16.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1114.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (102 samples, 1.36%)</title><rect x="1111.8" y="1299.0" width="16.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1114.8" y="1310.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.27%)</title><rect x="1112.9" y="1283.0" width="15.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1115.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.24%)</title><rect x="1113.2" y="1267.0" width="14.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1116.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.21%)</title><rect x="1113.6" y="1251.0" width="14.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1116.6" y="1262.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.13%)</title><rect x="1114.5" y="1235.0" width="13.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1117.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.99%)</title><rect x="1116.2" y="1219.0" width="11.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1119.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.87%)</title><rect x="1117.6" y="1203.0" width="10.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1120.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.84%)</title><rect x="1118.0" y="1187.0" width="9.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1121.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.83%)</title><rect x="1118.1" y="1171.0" width="9.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1121.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.77%)</title><rect x="1118.7" y="1155.0" width="9.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1121.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.72%)</title><rect x="1119.4" y="1139.0" width="8.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1122.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.71%)</title><rect x="1119.5" y="1123.0" width="8.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1122.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.69%)</title><rect x="1119.7" y="1107.0" width="8.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1122.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.69%)</title><rect x="1119.7" y="1091.0" width="8.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1122.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.68%)</title><rect x="1119.8" y="1075.0" width="8.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1122.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.67%)</title><rect x="1120.0" y="1059.0" width="7.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1123.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.60%)</title><rect x="1120.8" y="1043.0" width="7.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1123.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.59%)</title><rect x="1120.9" y="1027.0" width="7.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1123.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.44%)</title><rect x="1122.7" y="1011.0" width="5.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1125.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="1124.3" y="995.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1127.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="1125.7" y="979.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1128.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="1126.3" y="963.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1129.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="1127.1" y="947.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1130.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="1127.1" y="931.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1130.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1127.6" y="915.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1130.6" y="926.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="1127.9" y="1571.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1130.9" y="1582.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.04%)</title><rect x="1128.5" y="1587.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.5" y="1598.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1129.0" y="1619.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1132.0" y="1630.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="1129.3" y="1651.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1132.3" y="1662.0"></text>
</g>
<g>
<title>start_thread (384 samples, 5.12%)</title><rect x="1129.6" y="1651.0" width="60.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1132.6" y="1662.0">start_..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (384 samples, 5.12%)</title><rect x="1129.6" y="1635.0" width="60.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1132.6" y="1646.0">thread..</text>
</g>
<g>
<title>Thread::call_run() (384 samples, 5.12%)</title><rect x="1129.6" y="1619.0" width="60.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1132.6" y="1630.0">Thread..</text>
</g>
<g>
<title>GangWorker::loop() (315 samples, 4.20%)</title><rect x="1129.8" y="1603.0" width="49.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1132.8" y="1614.0">GangW..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (20 samples, 0.27%)</title><rect x="1129.9" y="1587.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.9" y="1598.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (20 samples, 0.27%)</title><rect x="1129.9" y="1571.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1132.9" y="1582.0"></text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.99] (2 samples, 0.03%)</title><rect x="1129.9" y="1555.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1132.9" y="1566.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (12 samples, 0.16%)</title><rect x="1130.2" y="1555.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.2" y="1566.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (3 samples, 0.04%)</title><rect x="1130.5" y="1539.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1133.5" y="1550.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.04%)</title><rect x="1130.5" y="1523.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1133.5" y="1534.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="1130.5" y="1507.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.5" y="1518.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.03%)</title><rect x="1130.7" y="1491.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.7" y="1502.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (7 samples, 0.09%)</title><rect x="1131.0" y="1539.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.0" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="1131.2" y="1523.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.2" y="1534.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (5 samples, 0.07%)</title><rect x="1131.2" y="1507.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.2" y="1518.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (6 samples, 0.08%)</title><rect x="1132.1" y="1555.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1135.1" y="1566.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.07%)</title><rect x="1132.1" y="1539.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.1" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1132.3" y="1523.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.3" y="1534.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1133.1" y="1587.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.1" y="1598.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (260 samples, 3.47%)</title><rect x="1133.4" y="1587.0" width="40.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1136.4" y="1598.0">G1P..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (74 samples, 0.99%)</title><rect x="1133.4" y="1571.0" width="11.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.4" y="1582.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (16 samples, 0.21%)</title><rect x="1133.8" y="1555.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.8" y="1566.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (11 samples, 0.15%)</title><rect x="1134.3" y="1539.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.3" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1135.7" y="1523.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.7" y="1534.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1136.0" y="1539.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.0" y="1550.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (20 samples, 0.27%)</title><rect x="1136.4" y="1555.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.4" y="1566.0"></text>
</g>
<g>
<title>SpinPause (34 samples, 0.45%)</title><rect x="1139.5" y="1555.0" width="5.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1142.5" y="1566.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (113 samples, 1.51%)</title><rect x="1145.0" y="1571.0" width="17.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.0" y="1582.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (113 samples, 1.51%)</title><rect x="1145.0" y="1555.0" width="17.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.0" y="1566.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (111 samples, 1.48%)</title><rect x="1145.0" y="1539.0" width="17.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.0" y="1550.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (111 samples, 1.48%)</title><rect x="1145.0" y="1523.0" width="17.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.0" y="1534.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (110 samples, 1.47%)</title><rect x="1145.0" y="1507.0" width="17.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.0" y="1518.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (38 samples, 0.51%)</title><rect x="1145.3" y="1491.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.3" y="1502.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (3 samples, 0.04%)</title><rect x="1146.4" y="1475.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.4" y="1486.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (26 samples, 0.35%)</title><rect x="1146.9" y="1475.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.9" y="1486.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (9 samples, 0.12%)</title><rect x="1149.6" y="1459.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.6" y="1470.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (70 samples, 0.93%)</title><rect x="1151.3" y="1491.0" width="11.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.3" y="1502.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (62 samples, 0.83%)</title><rect x="1151.5" y="1475.0" width="9.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.5" y="1486.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (8 samples, 0.11%)</title><rect x="1153.8" y="1459.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.8" y="1470.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (6 samples, 0.08%)</title><rect x="1154.1" y="1443.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.1" y="1454.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.03%)</title><rect x="1155.2" y="1459.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1158.2" y="1470.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (17 samples, 0.23%)</title><rect x="1156.2" y="1459.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.2" y="1470.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (5 samples, 0.07%)</title><rect x="1158.9" y="1459.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.9" y="1470.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (10 samples, 0.13%)</title><rect x="1159.6" y="1459.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.6" y="1470.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.04%)</title><rect x="1160.7" y="1443.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.7" y="1454.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (6 samples, 0.08%)</title><rect x="1161.4" y="1475.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.4" y="1486.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (12 samples, 0.16%)</title><rect x="1162.8" y="1571.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.8" y="1582.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (12 samples, 0.16%)</title><rect x="1162.8" y="1555.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.8" y="1566.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (12 samples, 0.16%)</title><rect x="1162.8" y="1539.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.8" y="1550.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (10 samples, 0.13%)</title><rect x="1163.1" y="1523.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.1" y="1534.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.05%)</title><rect x="1163.3" y="1507.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.3" y="1518.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.04%)</title><rect x="1163.3" y="1491.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.3" y="1502.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (5 samples, 0.07%)</title><rect x="1163.9" y="1507.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.9" y="1518.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (61 samples, 0.81%)</title><rect x="1164.7" y="1571.0" width="9.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.7" y="1582.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (5 samples, 0.07%)</title><rect x="1164.8" y="1555.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.8" y="1566.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (40 samples, 0.53%)</title><rect x="1165.8" y="1555.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.8" y="1566.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (3 samples, 0.04%)</title><rect x="1165.8" y="1539.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.8" y="1550.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (37 samples, 0.49%)</title><rect x="1166.2" y="1539.0" width="5.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.2" y="1550.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (37 samples, 0.49%)</title><rect x="1166.2" y="1523.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.2" y="1534.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (11 samples, 0.15%)</title><rect x="1166.6" y="1507.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.6" y="1518.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (10 samples, 0.13%)</title><rect x="1166.7" y="1491.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.7" y="1502.0"></text>
</g>
<g>
<title>HeapRegionRemSet::add_strong_code_root(nmethod*) (2 samples, 0.03%)</title><rect x="1167.8" y="1475.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.8" y="1486.0"></text>
</g>
<g>
<title>G1CodeRootSet::contains(nmethod*) (2 samples, 0.03%)</title><rect x="1167.8" y="1459.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.8" y="1470.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (13 samples, 0.17%)</title><rect x="1168.5" y="1507.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.5" y="1518.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (10 samples, 0.13%)</title><rect x="1168.6" y="1491.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.6" y="1502.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.03%)</title><rect x="1169.2" y="1475.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.2" y="1486.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (4 samples, 0.05%)</title><rect x="1169.6" y="1475.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.6" y="1486.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (5 samples, 0.07%)</title><rect x="1170.7" y="1507.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.7" y="1518.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (2 samples, 0.03%)</title><rect x="1171.1" y="1491.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.1" y="1502.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (4 samples, 0.05%)</title><rect x="1171.4" y="1507.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.4" y="1518.0"></text>
</g>
<g>
<title>metadata_Relocation::fix_metadata_relocation() (2 samples, 0.03%)</title><rect x="1171.8" y="1491.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.8" y="1502.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (13 samples, 0.17%)</title><rect x="1172.2" y="1555.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.2" y="1566.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (5 samples, 0.07%)</title><rect x="1173.3" y="1539.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.3" y="1550.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (10 samples, 0.13%)</title><rect x="1174.4" y="1587.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.4" y="1598.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (10 samples, 0.13%)</title><rect x="1174.4" y="1571.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.4" y="1582.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (10 samples, 0.13%)</title><rect x="1174.4" y="1555.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.4" y="1566.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (2 samples, 0.03%)</title><rect x="1175.4" y="1539.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.4" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1175.7" y="1539.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.7" y="1550.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (9 samples, 0.12%)</title><rect x="1176.6" y="1587.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.6" y="1598.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (9 samples, 0.12%)</title><rect x="1176.6" y="1571.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.6" y="1582.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.67] (7 samples, 0.09%)</title><rect x="1176.8" y="1555.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.8" y="1566.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.05%)</title><rect x="1177.3" y="1539.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.3" y="1550.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (7 samples, 0.09%)</title><rect x="1178.2" y="1587.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1181.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1178.2" y="1571.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1181.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1178.2" y="1555.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1181.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1178.2" y="1539.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1181.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1178.2" y="1523.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1181.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1178.2" y="1507.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1181.2" y="1518.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.09%)</title><rect x="1178.2" y="1491.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1181.2" y="1502.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="1178.4" y="1475.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1181.4" y="1486.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="1178.4" y="1459.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1181.4" y="1470.0"></text>
</g>
<g>
<title>JavaThread::run() (18 samples, 0.24%)</title><rect x="1179.3" y="1603.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.3" y="1614.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (18 samples, 0.24%)</title><rect x="1179.3" y="1587.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.3" y="1598.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (17 samples, 0.23%)</title><rect x="1179.3" y="1571.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.3" y="1582.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (17 samples, 0.23%)</title><rect x="1179.3" y="1555.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.3" y="1566.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (17 samples, 0.23%)</title><rect x="1179.3" y="1539.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.3" y="1550.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (17 samples, 0.23%)</title><rect x="1179.3" y="1523.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.3" y="1534.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (10 samples, 0.13%)</title><rect x="1179.3" y="1507.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.3" y="1518.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.03%)</title><rect x="1179.3" y="1491.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.3" y="1502.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 0.09%)</title><rect x="1179.8" y="1491.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.8" y="1502.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.03%)</title><rect x="1179.9" y="1475.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.9" y="1486.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.03%)</title><rect x="1180.2" y="1475.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.2" y="1486.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.05%)</title><rect x="1180.9" y="1507.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.9" y="1518.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (3 samples, 0.04%)</title><rect x="1181.0" y="1491.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.0" y="1502.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="1181.0" y="1475.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.0" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1181.5" y="1507.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.5" y="1518.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1181.5" y="1491.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1181.5" y="1475.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.5" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1181.5" y="1459.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1181.5" y="1443.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1181.5" y="1427.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.5" y="1438.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1181.7" y="1411.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.7" y="1422.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1181.7" y="1395.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.7" y="1406.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1181.7" y="1379.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.7" y="1390.0"></text>
</g>
<g>
<title>VMThread::run() (50 samples, 0.67%)</title><rect x="1182.1" y="1603.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.1" y="1614.0"></text>
</g>
<g>
<title>VMThread::loop() (50 samples, 0.67%)</title><rect x="1182.1" y="1587.0" width="7.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.1" y="1598.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (9 samples, 0.12%)</title><rect x="1182.6" y="1571.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.6" y="1582.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (28 samples, 0.37%)</title><rect x="1184.2" y="1571.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.2" y="1582.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (28 samples, 0.37%)</title><rect x="1184.2" y="1555.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.2" y="1566.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (28 samples, 0.37%)</title><rect x="1184.2" y="1539.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="1550.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (28 samples, 0.37%)</title><rect x="1184.2" y="1523.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.2" y="1534.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*) (2 samples, 0.03%)</title><rect x="1184.2" y="1507.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.2" y="1518.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (2 samples, 0.03%)</title><rect x="1184.2" y="1491.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.2" y="1502.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (2 samples, 0.03%)</title><rect x="1184.2" y="1475.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.2" y="1486.0"></text>
</g>
<g>
<title>G1CollectedHeap::gc_epilogue(bool) (3 samples, 0.04%)</title><rect x="1184.5" y="1507.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.5" y="1518.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::resize_all_tlabs() (2 samples, 0.03%)</title><rect x="1184.7" y="1491.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.7" y="1502.0"></text>
</g>
<g>
<title>G1CollectedHeap::gc_prologue(bool) (3 samples, 0.04%)</title><rect x="1185.0" y="1507.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.0" y="1518.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::accumulate_statistics_before_gc() (2 samples, 0.03%)</title><rect x="1185.0" y="1491.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.0" y="1502.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (7 samples, 0.09%)</title><rect x="1185.4" y="1507.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.4" y="1518.0"></text>
</g>
<g>
<title>G1CollectedHeap::process_discovered_references(G1ParScanThreadStateSet*) (2 samples, 0.03%)</title><rect x="1185.4" y="1491.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.4" y="1502.0"></text>
</g>
<g>
<title>G1RemSet::cleanup_after_oops_into_collection_set_do() (3 samples, 0.04%)</title><rect x="1185.9" y="1491.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.9" y="1502.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (3 samples, 0.04%)</title><rect x="1185.9" y="1475.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.9" y="1486.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (3 samples, 0.04%)</title><rect x="1185.9" y="1459.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="1470.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (3 samples, 0.04%)</title><rect x="1185.9" y="1443.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1188.9" y="1454.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1185.9" y="1427.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1188.9" y="1438.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1185.9" y="1411.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1188.9" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1186.1" y="1395.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1189.1" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1186.1" y="1379.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1186.1" y="1363.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1189.1" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1186.1" y="1347.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1189.1" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::pre_evacuate_collection_set() (2 samples, 0.03%)</title><rect x="1186.5" y="1507.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="1518.0"></text>
</g>
<g>
<title>G1RemSet::prepare_for_oops_into_collection_set_do() (2 samples, 0.03%)</title><rect x="1186.5" y="1491.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="1502.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.04%)</title><rect x="1188.1" y="1507.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1191.1" y="1518.0"></text>
</g>
<g>
<title>__GI___sched_yield (9 samples, 0.12%)</title><rect x="1188.6" y="1571.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1191.6" y="1582.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="1189.1" y="1555.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.1" y="1566.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="1189.1" y="1539.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.1" y="1550.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1189.5" y="1523.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1192.5" y="1534.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1189.5" y="1507.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1192.5" y="1518.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1189.5" y="1491.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1192.5" y="1502.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1189.5" y="1475.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1192.5" y="1486.0"></text>
</g>
</g>
</svg>
